%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: sig-alternate.dvi
%%CreationDate: Wed Dec 18 22:59:54 2013
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: Helvetica-Bold CMSY9 Helvetica Times-Bold CMR9 CMTI9
%%+ CMTI7 CMMI6 CMTT9 Times-Roman Times-Italic CMBX9 CMMI9 CMR6 CMR5
%%+ CMMI5 CMEX9 CMSY6 CMSY5
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe sig-alternate.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.12.18:2259
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY5
%!PS-AdobeFont-1.0: CMSY5 003.002
%%Title: CMSY5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY5 known{/CMSY5 findfont dup/UniqueID known{dup
/UniqueID get 5096646 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY5 def
/FontBBox {21 -944 1448 791 }readonly def
/UniqueID 5096646 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY5.) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 58 /logicalnot put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D77D0DAC26A1FA54
D2471EE9BE33D2E87853491D634A3F05B7672519E09291AC2D08D95BFB80CABC
FA89042E94FED8DC9929ECEFAF741D273687B2127F5B80ED7D16F146894841D5
1A80D8085E27114AC35CD5E578760D8982CF4D8587FD3385FE50E21A253A37E2
AB628DF3500FD2C21BCCBC8C0B6AD3AE21DE63AE6586DB06B3FB1966625EBF52
90FEBA873F819AB480FF994D80C01DE1E2F28C665E74FACFF98B2972CCCAD279
96F2EFF1113CDA922985E095249765989A4C6A92A76340DCFA07AFF34AC5E177
09B739A72D0D1EAE1A6164F3AA0DF1651EFED335B68C8465E1A61025235D4A5A
C3661B9C0456C35C770242149B3B98A29784BF71030C7DBB2C13958E5CC263AE
FEAEB9FBA84E06D772E94A494B60E32AB8FF862E57175DB17F6162DFFED60EF2
D46FB78237E778C7321ED79FAC137945A46B2D90B778DA46308899577BC7844E
3E09303AB2DD1F64D58756DAD62ADE22C62DE6C9BDA77CB12B1FCE3374CFA442
E0CABC7C9AE699CD955077A7268FA0FD3FF5EEDE605990F0DF0078799F5CED44
6ABDB2E7D9214BECB8B2CBCF328F7F5B8F346B55C9BA5C785A252DA59602B6DF
186D23D5D90556EB52D7C0B44E4A9A189C180FA213E12E9838F0B2902779E289
3E2B7DF45A01F36D88C9CB814AE5D41064030D37393DDD7D5974C1A27EBEC064
B0403898996140AB14E6EF1B48D555A1C4DE29AD0C5D284988B92917442D2C61
3B15E55CD91837B0496FEBB51486CEA7DFD9787AEB484BE887111903124340C0
EB034A75292E59CC038E75E1DDB0027407492EEF92D70E0303BD7B2703E131FE
BA91B289003B7E5BF85D2E5E130CB37949AEE51EA57FD424402B0BEEDEDEB5C3
E23643F3100312F94C157C98939EA2312B11DE0A683D4018FFBA2864626C9449
0D656EB0C79246A7F5ACDF442A55C9188D8F3FA64A9B6BFACD8F81D7546E0CD4
3C5CC653CE9514306439AA2BD2FF2B965EA69A30331E8D65056D919476867463
97DAFADD16BF9366E95C7C4276093B639541F7AFC9AF745260685D84DD3095D4
1B925540372ABFB68CEF211D65756FE0E99733B5DB40D5A42016E8715208D4B0
7A120EEB34147BD179FAFA94D0880121D1C6B27F94965ECC1A93D1B73AC1B3B7
191B7B3CD4F2E0E52A3893255C4B3F1A70A0ED36DAD262538E02E8A227F6D6A1
8A047A91ED6409F1E0D9B40698C817918AA47B95A082E3394AC42DE93BF9CB28
68E63F3363FDCDB014E89990C50210750E8442D9555B0A796B243AB03190B2BD
57C39F233318B6474F1B3CCE31C21BEF68FF5E3F866789041910B1B11ACEB75F
146BB1A162AEFB268700C2DFBD9752BCF6F136ACAE815C0AA4147AA2CE61D282
1BA716B693E2F713D0653B17C9381DA86E1CFCDD1B1FB9A72ABDA1AB2BCAD30E
A4EAB601BE3F8EB95B32DCF5DD114683AA64E14F9A958D16CC6DAC7DC3ED651D
603959B0265FD36F8DA41F3173A708D88C73EEA1533CE48C2AB26B4DB7CFA662
A8A463CC178C31D342EF907B3B44751859F2BD510F1CA93D61AD39E8E5D7785D
D465C47F3EDFAC22DC2B5DD93B2F752EB5482E138A0A1E5CD62747E0F524E29C
A56E58A6BA543CB3AE051F4D90891B65712B63DB197E60275EAF5975007D09B7
95F916615F97C50D8FDCFB67F1B677DC5139E6F46ABA079AC552F27F507CAE8E
E5C04D31ECDD6CF5E8A447846375C1748651245EB9C780D87FFF162AEBCC9E0B
155B318CBF420DF0CFBAA5669C2DBC81B55B5042514B05B7B82FCC827E21462B
BC8F8FA96E2CC4441E07E0901EA72495013400453E49B7D243FEF528E4078AB6
49277EE77C81B9167D2EE1961AE265A8C01F7562ECDC47D9FEC391097474EF8E
54A5A7FE6C98A81ED29D42A3D54326219F638C92AF8A087607CA2A2A80CB1183
8571CD40199FBDB9D70AD83979C739F533359FB2DF0AC4AE3A0E9DFE735ADE9D
6E29B3F6DB9A5B11418E9C860EFDBCB0E49BB900BBCC85860100F1FFA5AC07B5
14F37C5AE5E1A35168BC48BA7012A297C7771789302AF44765A6DBCFDD418172
62DF3A4785385CC9D055A9B4FFF373041D9F5E9DA83BC1C5F3265E49BA624B82
F15BC17B135D8723324865A9CCDD2EF3A0F64C17914F9B238C946FBCABD92B30
AF90191996ABF2E4972AA9D0EF7B64AD0126D07714D4059CE032905BDF877D7C
3440C374D7B5D0073E13ECDF3DEF2938EAC1908CC60D0E5EF5F52AE8A1B0BD34
8A454CDA66E7340783A7152CCD74EAAD4112C7D70F3C867E140988BB610CCA20
F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA91
86B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5C0C3E39199FF6
4DC35B155A759CBFAA96409BAFC7EDFF03D2671F0396641446605843CA4AA36A
15070DE52DDBFF487C5398CF7604DE843F32CAB26A96F8A9DCD03F3DCAA57E47
6F0D36CDA34B96B7F4986275D79A1BC1954D2BC0BE1509709E40FF23B84F8D65
3DE1D1D8A2AD94AE3DE202D62993EC4BC5AF66CE512EFFE7CF39028BCEC1667D
8782111D9D503BFA45E4960E6197D8CB5697B1662BD2D991532074AF5491DDC3
2EC52B4E5AF9B2DAA5D5E4CB644BED25DACC3F445E4C7D58A1E9737F4EC04A79
238E3578311D88EE6D067725C580A146FF150871FAB2B366B5AFE5CE3B386EF2
EFB540348505A1749BB34586851FB2FEDA92ECC395B618911E1D00B427251B05
15B9E42AC1F0F239827B938EAB8CD20FF9705F4D7FB5F5F911CED9EE8FDABE8B
3C3442DC3B716C3686E1B0573EAE3905C3964ACB336FA3C38B17F229EA10F036
ADDE7FA5CFC01FAAD33F75A125F52AD395C7DBD3AB6F2321D7B5B55F0ED237CC
61FA8278FFF9956C64B8ACBE357D4603CC4599BFA198AEC01E4F4AE047754C16
E155C8FD09C996D9B5EECDB243FA48B0CED1F0882103729EAECDDB9523D6BC22
0AA1545814579043F0DDA2D7F015E56C399EA3C644A15BA6B144361449609C40
A4986E00918A7B44BB06E7090F73FFBE4EE3E051121939EAB0349EE84715DE36
FB187C50AFD74C44C25BE4B7037466CD60F211FFD7044245159505196B0E181C
0177F14D0B486CDFB767708C171FE513AAFA2B60665CA55B1E5F9E0304B63666
3BF44EC4F5B7DA58891081F78B37BE8453E86AF3557B97D8B4969CCDE2DFD255
91FB4D9CD41E5F931751BDF7FC8C700C633470064C0BB00FE5745918A69CE430
D86FE46DEC014C019C06621B2EC6C3F196A8A5E1E613AD8B28A9D0B981C11A29
4AD11CD3A46D089F8EF7D8298971A5F9F6F139CA794AB4BF0AAB2D4D428A8E4D
B80EC134CC7CD74D3F08E7BC8AC5B1846E1E5DBFA97AE4DB885286C7D06B4CF8
948E889ED85E8703CB97D7AE19E1201EEA205157BEEFAA3E17B8BDDFD01BDB17
691010A662280C279942158F68BD351B235EA4EBE24D54C0055A19A3F230F353
77202A1D7BE371010624CB741D4BA2E690B33FE582D666E9788A3E3348A0E100
2843E0B2FDEE05DF75F4D49DFE2B69BE79E97DA1B3638289395444F1CF6CDAB5
5E6EEBB6F907807B913290C25D8AA546B121EA90DD113588011DBF01B7F88AA9
B9CA9731532478D3BA57786817C1D31D8C51C307D7F500F1B58C2CEC9594E5C4
E5E7239D90C8B5B4A81F95C048272A2C05EF0613463E4094E922F7326815EF3E
6E82D5A36840A76B1BB25185CD66B05FF2D140E0F22CFF73EB3F57732E935BA6
8C64BB6809E1B45089273527834789637621793414B6853A1C301612920E3F91
458D043CC1B6CDA271864FD4CCE585FDF025FAD217F975FC36FAF8B79A6551DE
AC3863E25DE972E2A4AD997E77A2C05A1A14152BCFDEAF40072A0AD952A3944B
AB12D66ED3C408DD104B8638D67417D2A95A87E226A03C28181047CF5BE58409
7D07D2529BF867BB61ACFD68F817BCA73815F787162614EB926563EE2F8629FA
6BEBC05465458A03C2A8673A3CFF7552855E082A7B5C2D4101A1B96449071485
279C1EC56610507DF786427B4E4D949BDC9127C2802451F3B21D60D5827E5B7D
0A683F4402725547EEBE27C38839876A3B1B7FE0D7107D6E2292631D1B9EFC79
87D05342972EEE2C413568BA971AF56A2D4D89C7C0D0120AD504D444655CFF3C
957D5EF19169401CAAA2C4C144FF87AC7DD3451A63CE796B8F6C600F913F55A5
A74B928AD676ED097740BDA578DA299F42CB7B7334BD2281E403129866031EEA
1219E7F9BBA230D049EEF401CEB412BF7FB58FB2F9B7D1E47F0D774956B803E2
872A7A5A38E5B7EC4A225C73522EFCE6E98E3EDA3BB402BC5BBBA209074BD2A8
C856290D01A092160E8FB0D9EF324776AD39D7016C63A500D0839E670009F4C0
20F033554B6B7CCAB7BF60494431E4F2755E4CD966ADC7A078D434FA59E5E49B
9903F4E722ED169CC3D0FADE874E3141CD47C69BAFA3183BEA4F37B388F4F48B
7D143D4B79CC5E701EEB350447D9600D39A7C03A25B5B8B6A5A7284A8DB4969C
CDE2C99C39EC07BD8559A45CB5AF23B849C1826713828F43DF265068950DDADF
3B584B90748657609A89008187BDE4286F95694D01760260274A23A41FA66A78
773902ADDAD18F98F045FF7D20AD20EB685C145D44237EDA272619EA9AB71497
DC8BBE9EEED31EA77C9410FE650C65A6CA71F0E72E7D83BBCC0A59DCEDA6399D
64A8F4865811A637838445D84D97204CA7A918DD476471A598D7536276C0F0D1
F0A88D8BCCA56409342C1FF678CFF90FC7B287C36CE682E1B200B54B2CCB12DB
D1DC9BB4E1CDE2B9B6BD4B80DC226E10FCF20A9E7878A16EDFF37FB874E4868B
A9F1C452EAA7126E81763A2DE2B502132046322BE26140F04FEB0E7167920679
FE8618E1AC5C03360AD3D8B5E913E1CF0C1BE9E446DFB050C3978165838278DD
23D17DFDC85DC7B168F173D0945D110976084CB27B6F8AB2D22410DB05BD345D
E4E38CC7EDCBAE36CCBAC590DA5C12D969D51B847A1460F4FAEE7D648818D26F
20FFE485D842C2088258F4F0B1FDCA46A7110645C25E3A31C4E6986C220985A5
DECCA30BAA3A4B5CE0152B8A9D68B1FD67F21050A87BDAE6B665036B9C73953A
11B16AA3285456220D09A03DCD8402C06A2BB18717B1AEA7594F748817176E12
87E685FE70E28C0382EAE8948A6E9FC2F46E2B70DAB208611DFD5A5D97D39CCA
8F9AD9A171DF53CAA6E3E5AE87257561BE15E3BB21779397A30AD4B22A1A1EBA
4B7235F59EEEC1FAB7294D521EC1E36723A4D7BA007DA4239C05F0E6DE546D5C
7A58CCD00F6AC96C20B7182CCCE3E5937D7A64F7CCD52A107BB8092D5F95A8A0
589B2DC542511DC89A0EEEF23E711C7444BDF95F64CF486F158CA162138A36DF
5400A5D03AE62A945373E95840F6D6C7BCCC4FE65382584A4DB36D23FBA6562E
1F3AFCDEF27AED61245EF880426B14B3DB5D9731039FB98F2F51094CD7D5EC78
1F8B03F07064CED40D139BD04C868B1E51A994731EDBA98E7D678A07F7AF6E56
92586848C58ABFEF378F5C1B4C3E20BA860BC7310B9AC48F2143B5495F9B3A35
85C9AD5AFEB23DF6376EE78BCCE054C8FAA925965E38EEA6F68CE1B5329D9DD4
DAB3F3342C6E6D9E0C70E63989DE8DD2D3C4C671233888ABF56C58F69D29A742
B5AF39EBF1092C2C4A906B872310DE0E83372B1C7F6E295D8DFFEFF960DC0F4D
83D7878BD8918B9BDFA17889D52AAF362B6162C07810672E23F66F8CF3BDBD6F
0E016C4FBC8CBAA796057A6B9BDE3233909694110279F81259A5E628FBDF6159
CA0CD6997EBD34C3038A02FA4B422A98AAF4297B998685D7080EAEBC22E27900
8B0178A75E5E52363A2E56507B3E44A6F9A9DD81886317A07B4823558D3690C9
8C722915FEFFED7F6CFF4E94DA744562835E29C97333CFE50D49A5EDB886F4D5
279DD9CD35C15656F9329CA06A0CE1BD5986784A910EC3DC7AB1A068C8ED4829
DDBC83091AAF21092234F614A6CA2C4A854B5049B5622BEBBA68AFC0AF9C6686
74555347CD055BB13B5CD7B5B6954A5794AFCFAF9AAA3682C7333564660E7C1A
8FB3DACF1ABACC3D68C26D07060C7D5B9AE9C9377A771C3BCD317F0ECE3CED11
C0438A29708D99A1F3C02E67AA1D7BB57AA7D8C64A2028349BDDD4BF6DB3139E
C1BB6D7D906699484EE2A5D83296BEE09644B62EB10658E06E4176C1E5E7BC4F
36F3454F2DE69F0C5B51FD5874F67287294399923B19A40CBCA4B580BCDA347A
9AFB7AE64C8E9070D5586086E6F42EDB8C0E9729649CDAF7C0337BE5E670DB9B
D5C038262B65603C1CB1BD00D4ECE2BDAE5B77A8A129DDD79DC7D080AA89B7D7
439A03568C2C826EF23C2ED7160B2F8F14C05F444E364DDE247748541CE7E265
1414B5A15E7152C6E9056B0CD43421D4AA5EBF1EC2CC70516F920F08B0CDC38C
DF480EEAF04D7F12638C9CF8DC4F827DB07256F4432345FCDA86CFCB637D04D8
931A81D2DC47674AB435738871A65422D3FD46DFAE9049F27DF0DE33A0E3207F
A6832153135BBE5A283CDFF46ABC74C78B3320EAB1E881E59E07C3134F3830B0
8216AAD3995D3F8F6CC988C73B2B7A5B79E81C6E8377FFBDAB29B4CB6317B118
84A437E14B0B213BE7ED610E9469405AB950965B2CFBD4CF0B3415BC9638771D
C2D8265D4FF0018FCD3851E645A82C179FB4995A337C0A854999E0D91EE8C98A
A9EB781A0DEAFAE1D666D2F5813BB2E79C232E5C96C686D414921DCF8EAD4C7D
06F79EF5078C77556346283940EAEE347B06F756A800FEB7656DC02597A674DB
6F8BAC8751BA046D7040B5BA0AC766522FF9657F71C7C89DC93E92000A00120F
301DE3ADB5D7D62B57E0824B9BBED388A5CF1B39B034AE2E44BE27CC0F5F0223
2A219166697692167403DC2083384A698551FBE48BEC89629820596FD569543E
75174901415C56DCBCA012694D671655AA84A8D8307B34066F1AC149C8B4BE3F
578F57A39B93DC454580C44B12D6D1BC653CCEACE809E5F3F7406B9F4A868D68
ED4C5C23D7B2497668D718621A94AF4938A16FDACFC6E3B216BB615324375050
24A7466E820435B11E93E91F673D609932BE884AA1CDB9D433A40D189A668498
A1B708DA358F56A1F2CE297C61D9AC19ABF79539914749E5DEE0FD0DC998F4D8
1A4CD93D0A06E68CC764308BCE69D4D53FB2F0AB742D7E9618321EE87EB1DEBF
14561A916C8D58B9C6AFE80D586F5FCAC3C6489038178E77B515108E48C7AF9A
AC9C3F93598A28CD03864C6A65659E8E6C782F50ECFBE2C27678ABF0978877FF
C685386DF9D9D8F51EB5AA618D2B3F63FC6A0D6107469DA479D540447D785235
2FBD6C4054C30D02DF3D2732031297F53AFC937F6CEEE01B2EF34D59FD0EBD21
854C5CAD32C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E7627355D
5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B5109EE341F55C551DA50
31E2EC3BCB7A79CA3F737D3CC23200160C76E29B9A5740BCFA0355AFE7930076
1F621C801268E18B83A108068B8DB4ACF7079069AD73E37ACB779490900CB770
326BA14A6CB1E7FF537AB11F432809968CC441F418AD1A36075D948D487C55B3
C6FC12080681BC9685764E9348B28A29E6FA025EBE0C175AAA6CD60CE6E244F8
B975C570A5D4B964B9A39EBC6D3327272589C6F61D91A7197B050F17C83BA988
AA2C67FAC8D9E2AA0F906C839FAA8B50BBA0F69C642343D7FA1E55427D0A015D
A9043C0A36BC4E02A6EAE35220C779D22FCA7F7DB374E0E3D066CCAE3C09162E
8A4FC6CD4741B38836CB599DF98A21D0C90AE79806808157F97F850FE90EC0DB
9F2D8036BFB4D379696E73B84B015B308EFB52EB7278A37676B96C607DC49759
734D8F1EBBF10A7E363AFFEAC9E499BF4794FA3293666AF2774FCABCE014DB9E
00021831DDAB3D794484C4A85B8F0097DEE9B526B4B344E16C267512E5FC9BBC
0AD4559EA5F6B15BB495A284664053525980E3F4A5260951C57BA8503D129CBE
58B1CACF6720EAAF7DEB7CB0D8252145CA0652F434C9F44193F87A6DEC10B069
7673C1CA15028A34D62CB118D966EEC9D5B0D1C9641ED9ED5231A1C316CE1DB5
502BA7A60B34AAF38A83E4045F3CC8D773667DA3CE22CBBB5C5BEFEF7E7ED2E7
393DBA35E409E8B4965B389ACADD367031EEC78A0A850D89B6F51BB7DDD2ACA2
B78A5DB98E610ED5BF388D27C467EE921F0420DEC501A6CAD3EB5D5847795221
62C6F219CE1D58E0831549AA4FE2EB20BD24AFC65896A76406ABD1FB79040C78
023D61071A4A5AF8FD70F3C0468DE538A346A2356741C894B0B38196FD0EF6BB
5B0A092A94700D661AB7BE2686B88698EE76C9582877D0B668201406313BED40
B162372E5A986FD23F028331ABEFE02AF4AC4DCFE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 54 /negationslash put
dup 58 /logicalnot put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6D9E06B421E246F2C11B519DD802B168820E0C6FAA7704A7B2E45E70A2E632
D36C86B9FD96961A903F902ED27E3F94440C80EF0250A47EE953FE22B7553652
371F01EA2554A9D18D28F4FB3618CD3739451F872C695314071F5C4877058D7B
BEF3B9346CA0A4103C8F8D044F98A72BB4F979EEF8B46832298CCD5AAB05E200
BFCEADE1C3F1DA71F6F62822A0C46380A9229D402B044111F7EF8F4F265EB4FB
E21D51F927FDC51D7F3098777B1E82632D097599AB48EED95366E35D01DC2529
68FF05D4F85BDF67865DFE27CF17CF1610F6982071CF8A5D5264E7B3514429FF
159107D20535535D859BA05C5BCD29123D294858E7C74A42938972A0809A64D2
D6CEC4EE57266566445937B4F18343B99A3B15929FD0E1E5DA9A35D95509A09C
846450143B4254212B18E369B511FE47752C4442DDD253FD1F267017A3B3E488
D40499CEDB4DC03D820BFEAADA56679FD75BE660F22918A5346247197451655E
90F2889810643D92AB75A6FAC6B1AE998A41275368750E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX9
%!PS-AdobeFont-1.0: CMEX9 003.002
%%Title: CMEX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX9 known{/CMEX9 findfont dup/UniqueID known{dup
/UniqueID get 5092765 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX9 def
/FontBBox {-25 -2958 1495 772 }readonly def
/UniqueID 5092765 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX9.) readonly def
/FullName (CMEX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /uniontext put
dup 84 /intersectiontext put
dup 91 /uniondisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB69434BD2F5E56C8FF46EC332DB0
76984939803A4D2E4F7065326BC983B6DC4219499435B304C1AE83C8A14C4085
131D1CB66E24EF3AECA881EB3CAFBD7CC6E70F905DF2FF583BF11F2E5A674AF9
11C625E782E1503243619CCD6B1222599F709EC8E7657B1053FEE4D83E29B295
494CE2255E9D555D71DACD865C95E1A3ACC8D19A468D316142A854F452DE76EC
B45C35C92BCCA844FD24BF5D5A43BED6C829FAC12BEC9C216414BA7783DB2747
0B114774A6508C9D617C38A99EB5DCC26758D9D55A563F8240143878C5C49256
AD489CE0A01657DE0051A2E845EFA4EB61043270B4A8E5E0676E90149CAB94D5
AAA65B9198DF0EC8439A194D5CC14FB65FF3BC2D67707BAA7B23484DA100F9DA
DB0610AF3AD273DB18B69EC987D6D9A0BF699BBBEA34A0AF1AE401429DA0C85B
AE89B1AB922D16074CE2208BA2C3F88AE84F7BD87F4F23EE64789BB62814BFD3
946734BDD1586BBD77254160BDA350FCC2C30B7F6B6AE44B928191DD564693B1
29D840BF729843DA6A707EA375F7541D398527AA15017B3B625000ADAE91FCD5
B749C01D15B2A8C60E3E4D97D5C454974BFB02CC706122041709F96659FA31D7
C27D613F0B45ED42ECEA2090986FD97A3AD736C9310B7FBBB8B6FDF7052B9941
A609E7F7EBC0B652B6FAC06337ACC5A1D1260454F16F5EC6C967D5B7402600FB
546B55667896C188F50BDDA2E195EC55C0A7B48D6A025845BCBB4B567BB19946
69191A766E28660A8DC4A15C8022948207DDE6E7451DDDED8376E52631E4F0D6
B947E227F99E03605688E5E28EDFF6E8033E25FBE8F6A86D5A26B2937FF48C14
BD9AC06DEB234FD1669C8F3EE9B8BF3E17139E08C308A3BB0ED0AAC81291D8E4
2C1134A3314BCC0D93D513E3EC0D91C45C05ACD19994AB285B896334721B8C42
420BF74A5CFE7CBD243D3DDB163362132A0285C280277B4C60D9BFC3D40944A3
943697BD335C27F16ED870DABE54DDDA4BB5C3868DA4CC1C0DDCB50826700ED9
9DF963A75151C5BCDEEDCAF2576E0E21288D194E540B422BC03B62CFD137E732
D0660236BEA09052A292CDC218E48181DEE1BEC6548C828AF0FBCCF10BDCD4F8
B71AAD95C5CF688815B9BF856FCDBBF769FD395885A88F4A13FC7B9440BDE7D1
90324ECFF82AD30375BF19834A5CDCE28FFEC0FEFE45ABF372FA5C6F03D972C7
AB3BC52C7E1C1783D6F80155B3A5BD54F19E6B3FF7155A6DD083438D0EA7AE2F
F5BD3F1C0A13438F4C42B3379D2868D688C14DF6202B5006BE89F09FEBC4EE0A
CCC50B10D3F9E56CE282FBA763D6F46CD62A860CA0744267D336833173C93951
87995BAD6E789CBABD53DBAD179F29DBFE73E9E28FB75ABC0C3014A72D9C3CE0
A80412E418D69741397C867907C795A20D45306EDCF032DA7A4A248C8FFA0189
2552A041D06D13826860886B2FFC1361EEADCD6BE3710CD640E881B2811E81A7
45BE7BF836AFDBC85E5AE36274D19BB1A12083A35BC231D6C1D98F8470ECDF8D
8AFF93893D5C0557152DB776FA755663D4E1A7659DD7D7206305378297175CE0
444B24650996FFAAEF4A23052AA4E77553F992DF1D6819C195B0B962F5571346
7CC036EE1D527B68965DC2EED66818821AD02BDB5A27B3129C43986C3928E391
BA170B1B161818BB2E2529024B721839DB116A174DCE89F92FAF4DC83033434F
C96D97A6202D48E7FADD753825159E50FD051D7D268C5807225D52D161569EE7
F94A99E78DB76DF5860227F5B6ECB1FA255E162C3D2AF6D96099CF3286E96DE5
31D324EB92FBDCE0FAFC586FECDA5D9376D40C9B1A43BF1D52D3D54BA06745AB
58E755921509C3335F72DBB2366726C4CB688000C1D6BCE706A3DE168DD0D5B7
45BF139E205273B248F5C4E3844D4CD211E6208A2BBDBCD88AA8DABCE4FD0594
151AAB58FAF716298DDFFA7A97C02AC060A114FDB3A0FA6EF7B8F1CD8606BE46
8B7DAC1E72788C555BF9B5701865B263725AF314DB471239363AA8437EF51206
2181B31E56C30103126582F77EFC23CD8F37DE389C16333F6C4F78699D187746
EF94B8A9BF312AC2ECE4F23F9A7AA0487D09CBA71C11241155AFDA73BC914425
4943E10468A243ECDBC5E70A06A00529EC2DF656F21EC7522BF41EF0F8BF7D35
E0E76D6589E77900943C06AE933DBE3668099BA91C38C19E945BDDBFA4FA5C49
ECDC4F183CB9189609F753DBE5D5B1AD7FA8BB9E28E3BF72DE2C604D88F43552
ED0C3D02277BEDAB0DB5B7A9CCABC8932006E8D44300E748C149C08D41F86608
F980E68813988906B7A4C5436CA1C10E54EF608945632E82B22021193A51342F
5530D708792FCE9BEEB224D03DEA481107BAFAFEA271D16C3E8B89A481933D27
03A044FB481748F2C7CCDD0562AC53F9AC2A9423FB0C7DDDE764022EEC181FC1
1EEED102ED0F29A61D17004FACE1A1CBDB8994E2AC2F88DA74B173C45362EBBA
597EA55D327886FCAB9221CE187D9589BB795BAA03F931CBF86DE3E8668CE8E0
F8FD3B098CFE2ABA2099BFF8DA83E54E9996D2DC42E7D9416DC2D7FCBA3A0DDC
B8CF9B37F7EB7AAAA6AD85297B042900688BEDB470E6E38CE0929AD5176A6C7F
059174C1123F3AFB6FE77E4CBA0394C9A305FBC8FC817BFA6F97D530C77AFBEA
29CA42B9551906D7187398AFDABD2EE9B06243E95BB467EC8E0D895474C9C455
1CEE93868A6412C4BEFF0BD0272BA95DDCC0369AF8160EC2FE1C60F5E535D25F
B0632C01BF40867E507E7BDD03BCC3BC21337FA3B974244E5D4591437FDFB185
78F0176F5DEA5803EAE72E013AA7FFE07C40EB971DD7937DFE111BBC33F4F8D4
5504AA54C414D94A9FA908B7B5356B913CA1AC0E71BD21E3CE550226FC5ED00A
86C05BAB4571AF93066C4F4612CC3C51BEA3F241EAE68A79284DB837F5B1904E
B642AA64A984EFB35F870912ED178F53DBAEA4A0E6E116256930BF507C01DE54
8BB70AE4F99C5639BE4F065C51C95D3C97512E6C7E2E796E90CC540B09DF02A5
CCD2694E35C075BA264B1C1C83CBDAFCA48807A008B1873273AA1028923AABF6
6660CE500CF174183CB593014D8A272EBCF3A09133603CFFEF43A6FF059BCE52
5BF232A5E067BADBAE7D90A56392F6B5922443B8A14DE64434A0018E21C1CC89
CD5D85A03022B4D80FC1C3C8740140DD6793C65319FC3E906C7CB714DB22068C
A66714E765A17F446CBDC8DBEFFD8A8E284DBAA179C9DD9BD9FD0A1DCEE171D9
D5E47F8246FBBBDEEA159301B189724C21E5318D1B73BADDEBD21FCB6E8DBCBA
4872FB568BEEFFC852FC84255B5014DB80589DC29AF1EDA5A57309FA19167514
967F9F9D5DE56CA3E66A3D937C041E83C29AC39C357667715A824ABC7A39F398
60C43B9ABB86F0CB56F9CDC50B6CADBA7938D020CDD81D1B59430611632E2368
E7483D596A272D1D99B5CDF4BA2B66C9F50625ACFF60905652C251B724FF8C68
D45C0174D12B87E95E7D480DADA7EF001F12A1B3528ADEFC3052E7CBAE406533
32CE0D5F96B7A2DF24ED4B5C6FB220E751257161A0F095017D90E95F1DCB6B5B
BF0413399B722A309C1155A0A9F2903CBB7F192149DB130BC24E5C41056FC750
1E83C4E6EE02EA45465598DCF7C4892D00F14A954A4AA6C2E616D39F09BDEA3D
27F0BABE6CC9D417A17D3EB2C138A842F1E53B30F58F05C9C77F3A0CD8B3ED6E
5F67D05F551E95D9D1133D33C9F8CF57839C998E204A1FD39F24EAA20FB6B3D4
9FF31D4D1826745AD4D3E95EEF71DD2D4E6300C42BA9316F1560E2D9A094007E
79C04433D225BFDFDEA8F2E6D42C456B722F80EF4223ABB38991344ED1C78CBD
830400A52BD0F2253E20A30122A842971BE77794DA8CC6290EAFEC44E3273E10
54A6A2AE4E8F8072FF4A37265CC0C1FC4F773190B439DC006D769F3089928C4B
DFD6A6012A39A0C8E997599EA3F4A73FF32C011819711BC6FBC4B6260A02DC29
7348188F3B7EF0BDEBB8EAFF7347A3023C478F446CE904FC25AA2DDA51D976DB
584A2ACD393B9E9C601AF9DA9629DE5C003F742AFE6D414A9BF1377D823B465C
CCCD4A7D7D108A9D639C6BBC15844D9CF1AB8B8B2260AE601E7E9F7394E212B2
693B47C8AB94612A779255A9FD9685585B0D1A7FB8B7E586197426517B122055
CF9A5207EEF696E1B881E64754AFDF0C60838783E6BD49D470FD0553649DB0FF
7B8CC86CF80D05B0701580E75D874515C4C8A7823CE924E9E7ADF1C97085A6CE
24EE43E7969701EE5D3E5F07F59492A9A946F300DD83F9FBA4B8CDE73C12C563
0691D30B57F253DB008E4595AE2D472376E88E30246642031DFF3132F971D172
19F4B6C6F87303ABE5E1B4CF1AE504D1E4B5BF5C86E232B42304840A9BB34E73
BA98A3186A01B72D98C92032180DCBD3A8715016557108B939293E23697D81C3
FEBC37582B7F7AA541C220DD5D93E555AC54D7D277AD6DE29158CE8B89E29C67
A305FD1F200B5ED02588CC1E0CCC93F9C8CED113066C401E1FCB4EDFB49C9224
0FDD03519559B710C046DF2FD60DFE4029FD9505867321D98507F0523E93739A
81A9E72430D30D0585977DD323CE222D408E4E2DDA7FBFD91A1EE1F75B530C6C
A5F6ABA3BB9B6CF94C29837A4186EA933C7BA60AEA9CF1F7F632F5F561A4CB79
CA533B32069D8A8D2DBD8089F295FB7E0631ACF087B7E777BF77EC394DEE5BE3
B69A27B122339829F3593ED92F42FF2721840133DD96450BD9DBBCF984B3383B
DF60B5C6603EA17DD5A3D0BBA5C61E1A7737E5F7719E2CAF59EEB87293BBC72C
0BE5F5A97CF28FD8CE19177B37E8C223549F926B6A979F89C06FEBFE86178B82
44F429C3C3C1F6506CED46DE0774ED12D7BF94756D38A8B1801B086CE71FBD37
8C17A639A05280033FB5A7B8770A953C0CCB14B386D336C1CAE1CAFEEECCAA1C
936164553CFA7ADC9E540353BC77C57AF8F96CD0FB7C41D5265011C86FD66BA7
993FE45C8BD006B9BF0CFCD721A80368A1C4DD30EE15EE526D6F511DD5B42A75
9C53639E5CD73845FCA08B21A3EF803C0DD4DC61598CC3446AE68FD548B9F5E3
94B6A56EF1D7BDDAED84F8213EB7DCC84E699BD985ED8E5CFF2C729C02A925D8
B7906366BD4520AF1B56A6D16D5B8D1A9B9AA1EDD2CCD597BF963F42611D48E8
D2B4F733DAF0336890511388ADFC1A8801D25944E95BB859DC761B72B9E99A53
584DB945DEB895BE8B6CD42F39D9568CCE9F89781614437088584A57EF884C63
12FBD3E7874C42F97E8E2DEE2130ABF60DD60A3D84224AF5F6BC06F1DE598843
C9016FCA08B9A343FC5638A5F849C84B248C3BD487895F602268D3E6F5EE8AFD
0016BEAFE2901B570E75465A86AA357D15EF02EE39D18AA90D784DD117CC911D
47BCCD7B6221F4A0741BDCF8BF30EBA66596F2164C5C9B9BB1E013C9F92D0E26
A8C82CE7E6EEB0870BB2A6D09BF336CC2AC4B35D740403A60C31984F11B0D4E9
8A8B95DCF96A7BC07C1FF7510EA6B709A2FAF612CDF75B71C1E471ECF2650192
4643D9FCCDB1FDEC4FD158AE04768C099C7CC1FA1F693F884E04522E179C9E63
778D704419A3EA4217A85AD8E70B6BF53F87430E511C3FBDEC1909CB52912EFC
3E645F84680F4750762BC29CDEE4D355E3F2DA698F474D585E4068CE0BA9C253
89E76F438987B389480A7CB39CBD601D9A2A5640EE3894A345548F18269D275B
D43F757712E746E7EA971055FC27159818DB2E464628E362EEA21A9C5250AD98
58DB14F128F2C1394D38F5D12417141DF703A471BE813269CDB23E3F8AAE820C
65A72B14E8663ED16AE4BB7B979545FA7A3EA413E6435E0BAC5F16EDA64F5AC4
5B3B4188BACE769342E1B5405A3D87A3E8D337E8C6BB74C0FBAE053BFBC86746
3ACA563C0B70FE33B38C5F5C0D704B90D8A081F5A21ECDFE0C800CCFE29086AC
1AFD3E9F3A37C62656182F8FA82BDC9B6D818FBC9377271CB5F4F60E2AA1422B
4A52A35434D55740380F28026DFC190C9FB8F2D60A87E9D6C2FB65E3B745EBED
917DCC5CD77BEEA69D2C9698A0A2BB3FDCA2C338B1D4FD47B06FE48A1B643DCB
AEFEE774A7636F7D29FDB77B8DFC56FB7769521857ACE49C2A46A19EE83FA941
F1F79A39384D9C0C69F3AB2E22B142FAD9F6EC6F4D9FDE36E12BD766206EDAD7
91BBC76CC9F6EBD6668BB435501709CBE1CF23C32C5C2A877B57445EB3B879D2
FC850D78BCB7E116C1155981F8B1B7225FB495E0927B42DE27F16AA7DF593762
67A6AD250B378667E70198B04B040132AEB3747E89F9F2A213AC9D008558D32A
23DA61B5AB7D18DF90C68BF29FF638630D5E69872C3B7D905182BA65661CF042
EBD958B8648F5B650425B86336F3F57ADC4C3A02CAAC08E87DB5EBF6DE8C6E40
CEE8B7138105873B76925E5F08EB999C4A24E1F3EBEFD79B17D31BC0E2D12C4C
52708F03EA1F6859B3F91B885F76E6EE97D3A813F2635231F9C93D642EBBF666
EDE5B814BC413C5B85E31DB99EC2A1D6861801C7ADA21BFE167441B26E1E2BDC
6BBE9A438B41B5E3A7006637708163CF0E95AA0C47C15DDA87893AC37C3130E4
81F084FA674E69515E490C819676C2E4FB666A4125C7677FEB8C32299E6751AE
0ED2F1CB6AEDC00E0F8D8EEDC6C735A5CB813F1DCC95BD568030E63AD7DC317C
6F61B99A39C65B93D0828817A1079F40909A01A2F11A01FA256D2C57F7A28BFF
82D4E3E4CE220F270536A6424468A2A55C567AF75363C7BBE849BA0547D3867F
34A50839A7061287272464F0C5CA47C965A265E044A366CA620896AD19EE956A
8049A30C2B93FA109424AD69F8C369379C5B6DC1C695DB16E43912308DE3E3F3
18F592F0C2559951F9B1ED4D9B66D0F691BE22D45361D74A216C4D91B72AC393
28A28481B8377D8A20E2DCBB87FEAAA6C47861D12AB22FE1DE62CC65798D5614
58AFBBDE546B5712A69F199C1D84CC20281C24246CFBE9B2DAF3A9DCDBA4E5D1
BA82CB7082E3F560522D4947B51182431BBC02250648D7D2B771FFE8B272F269
14D4A76B275B1DB785C374A227624FC944DD8E80A0316EFAC25B7CB975195EC8
B248452D9D09C2B304FB2F5D416BB6387C2B0EB06223AD089BB9BF21B6079B1F
22DFF38A0E248B9733CF97D23214A30167C32E63803515168556062D710FE258
C6E3AD9D3DCB888950940F7E91F5B5D25C03B5A25AD033C8443DA01914A20EA8
F2E6CAFA15F6E10D5645DB2EEF7D627BB5DA85DA1DD2009CBFF9D2DD159FF95C
211360B517EFA263CFD0D2368C13381D3BBF877CA98DC6ACCA103B099DC2F3FA
B7A6C1A01CEA32F205716B83CCCFD20C8ED17A3D778B36C1F28C88B7151637D8
ACA1CD904829034DE2B388CCBE8789A647604825949FAB2921C78C670DD741AE
E988968EF346E13CE3021D1A0DABB13746EE4D782630708F40346358D1E71DCE
A3889ADAED210ACA14904C4F06EF1F86542C5ABF455201647355CD7AE4106036
F1B7EE78A25934E8D077D323F961A71FA3CCCDF5A2C468B48D08BE2763346935
0AE028DB5DC32E84F6D20CDCC34837AE20D6FBE559C10A65DD5ACF4BD1AF9BD0
2D5280D6763618A3803F4777CB8D89F7F96B93EC116373B47C98A95D9C332C38
4DD9CBC706C928A414FA1FCC656C3D91023125015202411418DBAEAE0472AE86
C7CEF889388A03B9BADC361256A312AC34F3A4D860D8913EC169F62D3F454A67
DCD2AA7A2527B1C5D97A19D241E20B4613D932FB941F118FFD512FB3560FFA1E
35F8249D0A8F141A95222394672B524A6D6D924CFC4511B34C56B345FD9BA9A7
09D10FA506741834CF6632650CB2EAF3692F7B616F964C2C417D0673E6A32002
A1CC31CB52DA658260D5D5CFF93A7EAA0BF27E9FE30B2462E6D2C65B635A1FBE
8FD380DF94CA9A625F6050F62C2A3DAB90F830F1C69A78A63DCE7A9C95A8D6B1
571C510F37DD51471D49CA0CB5E72414A05025E6173600BD02FB79C0313D8B9C
B50AE03A21B8AB1796BA924F4DE15BB7B6F96ADC7A16C2DF182E15EA7D965BD3
068C252B8D072728703A92D39050471C7F3004C75FE4A60C5561F831C3CBD387
0D4949CFC9760257CF744D7784E6D87D0E5CB23FF362ABB2462BA4D89FD83BC9
BF9CA05269ABAA8CA02A5492E381EC14C1FA538D03872375F0BC214B2EAAF389
35524FCDD513376DE002A7A6672C505717C0479FF1A0B0C14E2DF30A1C44CB9A
752049D6D54E1014C5C33DB3315BCED69348304F2571BEE22FCEBD72CCABFFF9
DC7215282A69836B89B7A95905002CBC54434685C04628AD39575A786BBED705
E48E43E132987ADEBEE02C32D536ADA6F793236B5E2C9A9967479E0A687877CE
9F249F121C86796D29BAE1D4570A03F8D210B84C111EA1FAC72E4ECD75C041D5
48EA5369F0DFC1D9DC4221D8E5DCCF0CEC396F6E588C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.0: CMMI5 003.002
%%Title: CMMI5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI5 known{/CMMI5 findfont dup/UniqueID known{dup
/UniqueID get 5087380 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI5 def
/FontBBox {37 -250 1349 750 }readonly def
/UniqueID 5087380 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI5.) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 80 /P put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB9CDB3B91E19AA95
B6070999687CD39CE05B0501BC0F19F4FCE5E19BCAB1989C541A47F00C4947E1
FD7D566D95445A20A22834570ECFD7F17970BBB274C172956BD6458D36A306AA
51AA40FA84AB99AB3D1C47256A2DC605467A7F2C77963B2D31C2CD1971FF9627
23D5B9CE163D84AD3071314F555A564CC82CFB80B05E31708542DAC587837E6A
8708B83AA4527ED523623419123FB743F544A691FF62C172E6FC42F1EA9D96F2
023DE87858FDA38BF3FD9E2AAC5F05FEBD28A5DE1E97FB1B03F6D7BCF64ACBD5
20083E062A50A1B86CD28E5DA789361A19511275636562527DA0CB8A62C0CF8D
8A46EA3505E7C597428C86B3B05FFFCDA0492897AC6C6F689ECDF468F49463DC
F193DE83E34D73E48D23ED37CC1BAC6D1CF6BFF1C6A0165B21B844326B418575
18E1D044C1864B27AF65AB4A031C767FB91D2CFAA1729386A7C1621D859572FC
B604B35455D870D5A757DB7BF44D9D079F4F70FC669A96A0A1080F3297B6353C
6161E0E815C054EB6709752A8C104D177FDB4962B988270E9538E944E2FF6717
6389DBFE95B71E95EC57335EEF4F3E8E7B041690F54039D546937028BD0E8740
A9F8719E08AD387878420EBF7D8D1807B6A594E98E27BE8C6314BACE9CEC94C7
D57CB34AA7DFD06477D62C981D9D686255817A22E3F49DDD47B28FE7CEBCDA0B
30515EE8EC56542A3E3E68B990E5BE8FD65B953A0EEE2B066FEA586C75E4978F
0A0357C0C37397AA22B9EC8D9081B44C71CDE7991903DD5E071B87D081A57064
A143042086EEBF8640F36E61D8A0052C726C25F1B3CCCC6A58868E00C30D5CD2
034835FBF999CCCCE1CA0ADCE3A4EE4A36475FF6D00E1D7A8ED65CB0213FCC76
AB7DA81B9A97FEF3A51754A48C76E80198A2475DB6047623FCBF2CDC827229A5
C1DD7E79197C29CFF591EAE9547A1B21D381FA04D80E87F41C9A00A71B5424CC
D7550DFE38CC7BF2B11B810FF09DDC48046BEAF8EDE7CBF8847DA0BD5FAC93DE
09EA6AE97B193E9A31F1174C337C72F4CE28CD59ACDE969712C57701EF3C48E1
38C650DA766470DBA252DD9FA657F7738D31A864E26A89C0618EB611B36B321D
C48CD0F10C4157E210657C6CEA4BE0DA047F414C16F18B8A49E4E783164A83F5
E59040752152EC549ABC2F840ED955F90188E8F91E4F4533CB5F42478029B90D
76A996EB3D99BDF9E1B3019AFC030536449C04275DD78343702CC302461DDAE0
9CE2AAB36414A34066ED793CA7313767AA897AFFF6676E1AD5D4E3CB3C3A66B8
C5E91C170C41B7233D544D8EC3FB6E7E6EBF4E1CFBE49E3F00732256EB2495AA
9D206A20E902CFC57ECA3CD1DF324C834C75DE927C473650E4FFB299509557C5
9313ED07F343B6B4FD9F3DBDA9B3242756575AF54DEAA7C6DB9F1B9E1128989B
312A505411EE636BEBE0823610CFCC7D347185E09CC8A1A78CAF7F20C9668C91
0DAC60D889D17BFF3B7AD694F587ADCBD4E48F36DFA34FE98CB2E8A17929A683
0B66E005FAC311AAFA9814DC9CB2DE3059E0966106CFDDB18035EB255906F843
C8473B5E66E8FB4582FB72BDA4F4EE7A8F3A178F02EF1264C0692D7CBA2B1906
DC27331F86B6D88D3233FD74CA88D7041B4A2025A7024F467B64222ACAA24DBE
112C83886821994044EE5800F1F81F7F58ACEB07D15E22D38EBEA6F5C4F7896C
BA2EC301F8FD150832966A0C46EB35ED3EFD0192351AFD1FB9C394454BB1FB79
2BB86FFF5B846F412C1D28C560C00B1FE876684EC864EA6F88E7B095CBAB2B26
29EB6928961BC58633B7D5A5746996C3DAA6FCBBD2D42D59C1273B786511AF00
B60B0E04C7365E4AAC4AC20288ABDBF0A704B6F7CA2D9FC65CE4AF36A5CC463F
F97844B79F772F1E0C6F4A6DCD7AAEEF16A4ED9CAB55E692586C5C9DE8701A3B
111D15F99AD44A3F375E7C4A531020E9AD5CD77212BAF0F9516B7E865F5F5042
50524EE6502209FA562C94AEA4555F868C9FF68368EC6C2E52253E0C882132CD
DDBB83AF15DF29B2DCF516A004DB97AA9487EC2CB1B772E8C84DB1B82841CE64
D4D10FDAB7E162E079FCBB9D4670AB4D2F9128E48183A3884EB8C74DEF7F0E70
A587A300CE834A739244A237936A78D31617E4F8D298EEF7A783BC573BF464E2
9FD1F0592DBA4400AC25327DEC2F28F8EE0CBD17F012E9E15FFA98CF1F1F9265
C2E4B8F3ACEC102196B4F9F973D747979E38DA36558D6CEFF3538CA7E1427352
CFCFA0DDE3C02A42FA39CEA5DEEEC5F3F7FE7C1B1AD98D51446772195F08FBBC
D8CF46DFAF7D78A43B70F9B660406BC43FBD32374C022C3A58CB24CC43ADBD80
4E7AD6C418FE43DE31176B9128496C331085DBF6FA883042168C0FAFAA9DC403
7ABBACC2B18922C4458B49FCF241C0399E969937A2779184DEC8AD5AC3266E40
3E81D9B9AC5A06F9DE81785668B2CCB9BAA20F89120C9EB9A5F4CDADE6F67C61
C5E89C6014F4772FC208723146587687F8E14F4E63F2FC952D2F9143275F168D
B51AE0A66333D957C9D5D7253A2362C30A0219219BCBC770D9FCBAF0F7F45FBF
E85CAFD899BBC1EDDC416ACD9A7F83711BDEE28A683900E672453F4527F44816
1F284A4C488DE221333EC9249D1C70C3FA41F37924B813A3C54BE3206349D955
8FBC6AA9115F9061C9674958D40EA2426CBCA704E0AB35190F473C72086A2B2E
DCD7E6C1CA9BD9D7C0C2879E414EA6C61923A60FDDB53957680DD30951CD3B0A
6B743B1E7952601F61D4413C3A7BDA4CC1C65DA9D453704A1333512560B2EF09
C2D6D34B5AD4AFECB4A07A7DE5122ECEAF0CACFCF48E78F440071570E3F171D9
96E2C6169DDC77A3B9A61D5188428B035F8128BA909C26B448B6C95FEB52707F
AE0687C3987F75F1BF90A7F61D0C492C49457B59271BCE48F3FEE78E12D3271A
F5A91389DF2ED566990BEA84AB699B3651B2E81975620CEB607E2882F7D29ED3
A4279439107AF9AEBEE47CE85DE5CE9595A96A118ACF1EB1E935E2251E0E7F1E
D675E5D89D501C9CC98EB274B6B00B718D3EC50EFA7E170F2DEA2A2D2C8B5760
E85A1AD504660A93140BBAC19A48B456B3FA48E05776CE9DC05426520692922C
4AE3FBFBBBA2C4EA2B92663E8D316B9D5E733E0F2FA092F24AFC98B5D69063E9
8AC28D6EF97D3674C04176197050E49709D7558F7A32843A2278160DFAF9CEA3
9A0A8907B19379083365EF866E2272A9ED2B662614C57F81DDB145E9D460A572
C573296761CF028B0CC562B5C73B1933F0F78935DB0771D1780C698A874290CF
4F3D2D0C000B9A4077156A0B15F6FA23CF70586D3E341796ED8BD13BE5CE69DA
D169579BE16C6BB5D74224F380490855229FA64A762AC6BBD0D06ECC13E57E56
FCE574D51744431CBC8A369698B3F9BE35B7C1BFC59FCF08C04E3554703230F1
2ED2DC4459A256FCA63A759407CFC0B4D8950852BD11D9D631DD0B1EA09178EC
B5C85FE885F3E048355859AE345B73EA0C9FF89DDC31A7839C86CE36FB7C9C65
33257339FE7DE8F9826AAD599B41B8AF40F47BEA4399B65B7E114FAF14B9347E
4627B501AE9905A4EF4483551D8D5B5F291CCC25506E38A5DA92E127FECFAFBB
F6BE02A63DC1B5090A11CE8700402A53B9DB788ABD4910DCB8F1D0C9FAD68668
0045C5EF2F0F5205F4A4CC2DCF43479DF053E2DCBAD3AD3EE779129E7CF4DE95
34D03F05FBC72CC02C5E1BF394AC39530D93C70739799B7E2FC84D99EF7E636B
900185158DA3427B30E7EBA29CE9657D3103060934EB58A514F6CC06CA0EF378
2447416AD37A066B63F2BBD53B06BAC2C915AD28CAD86AB1725BDCBC12D0368B
0F0DB1885ADA0B4214F59DFD86F15210763091E3E5E7925A39F7C58DEA801563
198D8146DCEEB18EDE7EFEBC5610208CDF7D42B23E15AA911BDE63C0EBB78D9A
DA13B882064E1861DA9B4688A242559ABB1BA404A516A4C7357D18E4C7AC7D41
878E2D8682B032DCAC20FC72BC0D18F9783E9094F59D3A35A977CAE583B5E517
4E8A8C991E5311533BFD4FD0B9B7DC8F129705509D194DA9F18135E7B87DDADD
D06929F6D65C8AB18895447C4E542CAC2FA8DA064681418E49807CE61DB77720
4D7538917F5D113CFABEB51A0E633DA5ADE4D3A09462D2E4C11125A31C3ABCB8
D2905C09E4E91D11B92F405696A4F1996282F44F34A19748121C0E86C3DB2CF9
30073205E35702C191BCC6005822AFAE9EB440CC7739C51D391807AA5FC768E3
928AE0860D52535397395FC31BAD93D8887146E6BAC26891DF852FC5E277C3CC
45A9784386BE5A1926AF84E7F3BF380A5ADF32D73CA695FF1B78215F2D2349D2
B1C3AEB04DB8B11A611682E7F4FEDF08716A801D84D47FCBB5FD4E9AF027635A
74E8C12F7AC159840DD60728DF43615BBCDF8EF80B1D761D34ACCD561F5AA2B3
15BC21A4856032E4F9005F93F7FB3CA7613C32E67D74796C5C819457378FD94B
89E45341CC2B774F16C035079A741B0D2D54B43FDCF69DBC30DE45BB3695AEB9
CDA1C7EDEDBDEAE0079C5FF03BC855E5F5235CDD99A915CFC78373A4604E8E66
3426FE7AD92B8FA0FB0CFCD773434B5C624CF3DA9F77315F0C58D42CE9180BB5
2D2B7DA554300CD38C592CE35966B1EA45638CF064AAB4CCDB2CF3ACE7A816B8
360F2F5D7EF9A36DFF363B87541744CF36ACA31F9B17872C96B8214740C7C0F0
0E251B4B3306C443487F71ED324B4896231B91F909CF28AEB3409DE1094E6483
E851326B4CE4E56DF03A929913926A8D4C52C7DF7A6F7EA62BD9343AAABE9BA5
403678ADBD2C125B5DAA08EC695F6448373355FF5B91A4FF16596A5D172BB3FF
7CF9AF0B6A744A2451C7399E969E6E5A9784B9195A497B43304111165973EE28
3EDA3949E5D891E1EA363F8A8EF4ACDC82CD14BB931480409A5EBEED54CF8284
55FD70C98822BD9A31523A3C6A6F26B0216C07B6D63D3CFFAD15A1B83BE55D9B
4008654433D80F11754E4B4B09FB22569164A8DE5669629E07ED1ECBFE365287
690C6F21274ED9DE2156D06AEA66A323450B29E4AA42CCC9C9261DD499FD33E4
A974570C690D2C0A1367A7487D57427C01203D2939E89A1F18A4ADE84313A2DA
B12EE671E3B42F44F6B32E12F4F2E51479FA3420A3A13087D9BA76BB1756AFBE
C4654792600D79BF52A32EC8E02587753351AE7F192D08B7EA9314FE4CEA31BD
8646E59F96765073ED1E3788C8DC7C0AA2892CA25E5641B338F5F207D37B2757
C7FE8E52649C38062566E420F8F0A6B83043F758DE906CF91413718028C9675F
5E0F7D09633361EE152116C675BC3A90D807D3A19B848DD34BE3BEF950287C7F
021E231262ED6A134208AE2FCB90B7436614D8BD33226D8D519F8F3F494ACBCE
32527307BA114CF02BC765387DF54BC1E231CE3F51D09F7A9178FE80A62D8371
533508ACF5C454CC72400B444D177A36B9A096489CA2761F1CF1F7C788A9F7BD
334A5C24AE6A648EDC740E36B28D6752EEDB64ACAD640CDD66CB98448C7CE7B9
8EA7CEF9E2A80EB270A22ECE1EAD0FA85EF5E0C83AF23F0B4E4669AB41A6B427
3928CA4421E216A4346FDCAE5D1349809C97D059A2CB6BEBED01CE0BA1754863
100D49634FB84A06CEE283104046A90396245601756BC39A63460C2660F54589
5A690DDE53BFEEEB398355E0FCBCFE9CFC664195CFE5BC9C4905700FB9FECB7C
6E644861E81E0C0581130D253D861801958F04A543EF20C99B52E246139B8D7F
B7C78E1E658701FFDAE6ACD2A7E79FD434B1CE834DC7F98D16048A2964EBCEF4
BDACEA4E6FB6EAB3A270FDA758BE633995D1A39EE148ADF8A169173F877089E9
1A560D068ED72051FE7FE1D6C3BAC81EF265950598475B84AF1486CFC55D5903
3BE1479996B48A6E9ED904C66700DF63029ECD9BF1794BA67A7C0A005B00DF52
8A6A0374F4E65CEBC1CFDDFCE3EE53B57D78203D72A0FD5F9699277126B4A5E0
70B9CF50FB9A46D0685B563CDAA61EE9903F0079B22ECC56F0BDA3F1930FC6E4
637DF29BA68C83DE60EC2AAADF31CB46F337126706EEFFA0E8DDC29E5488C2C3
E89CE98157CF908EB04C55ADC7FE853E152E0D963915F5104834A9F73E0EFFF0
BA20972EDA0F691CBFFF3B0D379B0FC55B77E4891B7B8372F5F79662E610AC3A
7A02E99A18D5E87E519C45CB8CA3AFB38A74AC99214C1A182437C15F57963CA1
60709AE4D7A9527518FC6EB1ACB5220932C53F8C1A0DEA53B1716A105922A90F
10E116FDEBCB7491DA52872EA22B8280595120AF86B49759E5D61FF3B39D310A
68685F464915FD4B9A19F7F797BE424748C94F4636B2AA06C07C4A4CBC634CF3
04E5B400E7E4F0419B112DDFAA0C4758560F83D80A525C09B67B5906D65FAF7F
6E5D42E5D0AA0EAB4C189E34CD1AF532F27AFF45FB1B954B3DCBCF75EE60A9F5
018F023784C394FFB581FBCFF4DAD820EC8C64F08360B26A89657FD7F50AFDEE
FE8179573A3CF350FB4D216AD4BBF496AD7A9191941040560854A5A22F2DD997
0B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B88271093BDE64DDA024D67F098D
6C1998506DDFF7907AF00E4A13A0E7C93046411CF6B38DB4AC2A8A0B67A027E7
96725D60A0A50B983A1541C18EC1999A99D7AEE5688407D62BAD5B13725AD3CD
0243D3EF4FDD9E409795D8022D4063BA844909C67ACF82AA9CED304D5F84A9BD
1EA3C7F5D2A7BF70766158BFA2BF63B3078593F3EEEDD0B6083B6858AB0E3925
8588CCB7BBA9438DBD430AD29F127063AF4B9F05EE48507ED3CA9D232187D3F3
ECF6B44F723CA243C91BFA6CBAC2D055A7DE56C0038114145FAA7D6D35070A07
5B65B916EBDF3A8A76849653DFAE3CAF9561D85CCEC1974DCDECC6592040CC64
5745DFBA8D9BADBD4EE85AE9662F32185133FF9A7E44D66410BDE8B1BB1873F5
DEC1D8341D039537358F7EC07365A462A58013C7072979A427CDC52AFFFCE7E5
4D922702976973206C0EE5806C33706C59C7361AD626D6CE7D73B3F566F01F27
AA275388FCE7FD284B031E6E262C2511B3FB2D6B93E53332C2ECF4BF165C03C3
1E16D2FD363B562B17AF600E4EFFAE42CACA979C6CBD4B624732090878288562
D28DA255FF658D7B2BF12E71C704E590188B62B57234540987FAAA373A4E6266
1D72C99948D78EE0BA5F56079E2B75EF5612495DB6ECBE036E13DCC1B79D14C9
5F085D1CBCF29D52C7CCB0AAE0CBC720E909CF719DE6804AB3A2164CC5D2621F
DED2AD5EDC14F9CCECA26EFB9D9803197435588CB476680F7FAE7B8634DB18F3
061C5289F14D2E2136783C42F2AB2ED12973BC60AFBA29150C76C118E72CB788
E61E561574114577F8D14ABC37C23445297753EB71A3C330F984885006154BA3
E1A07EAA256B8E5F5EB5139762EB0F4A641B648B0D781DB48A55B5D15489BAE4
7835562F4B0158AA1C2FD39A76A40238DAC16668DEC357DA709888966E72E933
1F68EA16A3221BE420EBD5CD48F491BEAEFC0E9A77A1670363452518416CB3FF
BAD590D0A3E461EAD5BEBE6EE7B2A42697CFFEB22C6BF46BBD3EA9155A30AA89
7FD1F319335E45B9E6977E4D6AE67993F7BD617356C8476B612AC5F8103603CE
A940D6978F7FB59FF1123D8C3C49A4D94B1EBA8D4CFE205EB0352BD1CB601CDC
9581B8ED3B44B090C731EBB86157498AC7037239F9FFA8261CA99CBF3D382D49
F0117EBF3D9A4DEFC8E6FF39C3F4022F8E1AE5C8B8A9DDBC74642AB0267EBB3B
DACC6B7C00AB6BC3EFF9588CAAD1E91DE71B0B7CC7787D549409481AC250F039
9CCEB878D275E2E346171058EC303E62B84EA810FCEBB2916BE110C37AE06BE7
70561CD930E8AE76E353293F9F839797A135916197A48D453611484DA293AAA3
39402546DB208EFC3CE2DA145B6B40DA1DF5E911DD91EC9F234AE3452CEB3D20
4B6D79703CA2EA91AC3B5951B557D62C7728D6E3F13BE05939C2A6F9F170560C
0AB39BFD238A0859BA570499CAAA419F561C1C0BCB99679553C2535B4FDDE702
D31E2527083154CA648611692A2D022AA1E2C6D5FA580B6E77C2EEB26C6A643E
7C1D168DF865B4775BE5F71D4603C1BAB86B4BBE77B855707A6B4A6C3D5C74C5
2D718A2D86B0C9E91D82C2AEB7166DDE523F70B48D37C52368A01241FCE8B63A
EDEEC917A3C5481118EBD4082FF15FD4D2BE60F57D29418B6B3C5F03D5EA9470
34BF163C67D62FE7359ED7D6632610F0C415EF01B721C7EA2AA27257ED5A6F7F
D2B04DB5CFA9203230F7993823679207090C3050E146E67410144A520FFFB43D
E95ADEB994D805D1D5CA45563A79CC5F7ED4B3290D46159EB4B4078DCF2EAF61
D6DB4562070C6CBAC35F30F6CB05D1BBF4BB43D6C34500C2CA15C4B2318876F8
DAB863B105FB0B6556A0FD48B2B18A30833BFB6E42F481CC0F17D1CFA6C986AB
89AE7627D870D1588C43D0BE771903AD8149E290CA8A0D07B40DE8C1DE77798F
DE40AC38F719D6AD39CBFB5A1CD90A36C054FDC04B24344A3F4EC7B3B5543C0A
1D0BE2F036C898D679A5EA9277400D24565905857129CD19C78FD79522544CD2
197683012721AF99F40266C93E167A980E163A6DFFF1F563C444D56AE2FE8875
DA609B024F4BA5AE8552C714C735AA927BE53CEBF1E520F0BDB2A7E5D884DA06
DE22A4CB8C422EC24BA32753E251959AF0380618D20CF6E55E735E411975C3B3
18CED8846BDA1AF07CD5CAAC96750AAA19C2C88A955A6054DC6C870D8A01E61B
0A563261451F801E4C4D81072ACF811C9F3288E77167611093559B2B80C140FA
4F9E24228CA821F2375B8BE4146ADB116F7F1BA549B8F55ACAB556B49A3FD90C
9F9CA3F90BDF06BD3E4CB6CD9F496828F3534B9FD7412EFE43DB4F162BB3B32C
17E4B95223E2209051DC79181842DE940D70FC5DF985D95111656CC6B9F7CDB4
9768B975DE35D4BDBF05F114FA901FC180C702743E475D50EED191B8C69A9E20
273B0F1AA060BAD26E8C75D2AE27AA8954D399AAB045F8E695099A7F2928F1CC
E609F65E93449184BC2CD55FFD7C2D7312C9267F0084177D97D9479838ED50E0
2FB2831359FD54412A57EADFFA492EB797E73745E3DD053C926E21B0C739D80F
1941F305CB9F54D0D02975B62CC64EA1151E7B6F849623206B8BB082B9324BD3
D5FB33FEEA6D0AB4E9209DE21B799A55C99160ADAE37DF86D7DCA3F8E528348F
16007EDDA6801B291B85BCAD77E6C0D9962401807ED715FDE613DD124075E19C
74E1D43C365E0873DCFBB083FDB1FE29CC758058C2D8B0F9CA49A612D987EBD6
2ED57FF424D1077BAD0B902027F834C54E56E9C7176160744B5039A38D4EA87A
32F9B3B0D8D067D070F6B757CCE648FAA516D35129533819717F97318ACA39ED
7623EB8797C63DEEA243C0E8875A48B68B48839B4FAF26FEF15A33360DEA36DD
169F49E2761976E0C60A01987CB208FA30F498DDFCA1C931CF70090534F800C1
46D2DCC4A79DFDD98952CAE93CFB88267595CF7F68A64FE8723F48630DF13D85
16C0B75D81AC62D4C72C773A12172BDB369FCD752D3703CD7AF09711FAD8D07D
ACECD7FAEA855FD9FBDC964A1103A9785AFE660D80FE05C1EAE274E0DDC98F5D
515B872C2BBF859BD03F133DE0A97DE24F46B16367ECA0A3881621A85E71641E
F1A2E564564EDA270520CE4943CE95403A1C66947EEAE9FE3592FD8F043952E2
A354EA47583C770923C5C3735F390E459CDBA7F80B1C3E6E66681A989EABA515
7F8E73258629569E5809DFA9C13C658F1F7A0915D9CF30332718B1AC92ED695A
B49AD75971F75804EBEFEF44E230BDC164E6454AAE04B2803D2029D2403864DA
B4258921D26E9FD8C35D97A9E32B31FE89B9DDF49A9748615BE773180F160957
4A270C63575A9D8715449308E1C2A46526B186910033D3AE324E948DE43BF41A
092F1EE25DC462318014B557766BC8CC69897A3F85C44F43758C29AAE37D404D
A387E9E60791FB6F600F87D9B0AA35F0B7D64523848F5BA195FFD993FC1139B7
B6CC38D6E9BC9A676DF690D4FCA45F226749A48B5F2068B8339AD2FDB46C9914
EE4BD65434D9656E920896D066E8814E086F72C1956F6DB4902BCFDE8CACD53D
9690F49310221DA9B3F70ED3AD58DF8AAC7630A345587BE74DC5916F1D92F145
81DDC43B391FB1FC87AED56096B7351DDCCD8E499F370949ED95A3D38FF8C07D
D83B823AF14EEB96E6933F18DBAF35020BA5695E0C3C7F1DEE9C1B0E01CE4105
38613AC7E98D969B7A0A663E8676208E86F4BB556BC41685108BB74D68E2470E
2DD01FCA4868B95CF1A5BB841E6F1E2DF60551B2BE18640E69E27D694D9D7923
0333F0DA514F6BEDDD695283C71298C2EEF2EB6CFE2285E3160B58ECFA67F9BF
90E55E7AFCA9DD5C2E0E2759610F9889D27AA7BD7091EB2C26F04C8BE89742CF
9A2137D0396287D9C4C1294D84D84CCD7A76FA695F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/UniqueID 5000788 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E948890C25563CB26A068ABABD94F3D42213218F2ACBB2F5B317311474B222
BE1844548554B37C97284940D5B7AF9E4CBD884D4994A76CC1ABF8E6AB0676A4
0A8130F05B0ABAC088FE4F9FB536924A55451C8772B29087B8E5E649DA3B449B
4A055214DF69D0218549440B3665E4D20C5A8660B3E0C3ABBA3426E7820E1A94
5D273A6ACA180B8A4832B68D11C794B5DE97F8E087E31A187756642E71C9A742
D5779CD52C76A7DA3F652FD48729981B74F06477176A737119F6BF954D1E7C03
4C59FB4E7CDF93E5FF73E788384CB86104E932B2535AB6496EEF3D46A13FF5C2
7989F99B217C828DC72755D8226739B01906B78E47AAB2F14A63FE37D921F901
9671B7AB9EC5424EA70D88F8B38E742C99C0143688AA6F1DAA4F35B53856A3D5
8A0B27D05467C4CEDCD48CE216C74D604D0AA75E2064BF532A227512C930B144
34763B8BD519CD1A8C4538BFF0C4E3449C3F537E76F039CB3B9DFB593185A61E
CD1C60D7BFC4EB87A8FFAC45FD2F982B521988050DA0E2E8E5180020CC795EA6
D50613126305B8993087046AC7F42B0E8726993D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 38 /ampersand put
dup 40 /parenleft put
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 65 /A put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7C0263765D340333B5CD8D1282FD5B0F5BD4D40DA12A5CF44075F33F9
BCC0B4C20EADE30D0ABB3562C00540200F1E595C1E625F539B70014AC0D537E0
B2E643F3353934BD4D1B0D0F2360BC730FEB120FBE2446A76FAEB6AD35DF8106
7BA49615C9766F14CC3F3B90ECE23EAB46FFF8E85CC6DD4F34E29653D074F5E6
00AFF7C95EB2FD824BAC044F1B265AB16A9AC5C6BB3383A1DBBCBBD4C744B064
91B09B11F8F25E61F7E1AE146614DFB2DEC5D0BB3A62D3EC19791B18BC14928D
957F344C793385D84B93A1608CB0E89E518EE293F2BDF5B7DCC8D395E454E571
91B532C36889876B582169202E205AEC9138880EE3D018421A0129995799BBF9
B8C91F254881E292CAAAC613CBE3989F91928350BD00ABE05FF157CD8AC8AC83
F38A011C4C1FB7035B54BAA07F75010F85A681695F2CB71663D081CEF2059667
85DD8882D78BE9A73C6516081F1F1E80F386307C544FACC5581A308488840883
9D4278C7A14C6D06FA6641F2DE52712636C09FBE30350EEAE43F5C5025C65E7D
0E53E4FC8A3D86C6458A6E19B4C8AE32D6015E658A270C39D697250F470621DD
31C4766D3A736CF08E115C6C61BA0988434474315CF2083D4BCDD6B3467B0D20
A5BF16EAADCC73028E5664758AF125CAF82A54C3EE8257A772ED74988296C52A
FC8A43A8FED71655529A25734EB5BC5527F61358F620C67F92FEB7AE3C0B0627
430C8958EC0E9EABB6388E03F4527338853E2189C54FED513D6F966DE6F316C9
1097F248CB8CECE519D1F6541F46CCD5C10F319468573CEF97554D77800E6B0C
5982FD1418E08D3B31B0B1A92791B345DD51843A7ACF3914266B099293838423
D8AEC1B88ECCA81390A9DD636120CB331719E283DA27D5F1B0B6520045D0EFA0
C590FFB8B19FEE4405A2AEFB2061D78F9AECB4074DBC9006782C8CE1ECF50813
ADCC1461FBFD6F28CA2DE5CB7A6508876E4E8D68D9E62103414EF17C48597ABF
01CD6D836AABD89D461F9C0C61BB3FDBCC87821A74BBCAA08EAFFDD1C1D580B4
1B204FCB3C31D2B43ECF47C388EA2E2EB08C28D10146810EAFD2FC7A080A147F
DA106952FE4389DC6B205825A14C623C55E82FA829BE25F1A9B96A4DB61FD698
202CF9FC01C0AEAECF44BBE82A4C980BDDCADCBC178488480923111A972BFB8A
DE1D1B0D98C9A823752F594BAE640DA5FF8D2ED785D7E8364E197763E7C7FB79
F2CA5F605619EE9631DF19032F2FDEF200D48B99DCC155EEB8ED417729ED64B7
4D6EF2B24558E460C8C5C2FFE4C9DB6E312F0D8105B4C264EBABBAA524991270
67776F70529968EC90412E278FF6AC237EE2EA1613544990F90DEFBD39D68FDE
43BD0BFDFD2CE5C99BD9D0DD76D8C170D068BD6581011B66F4927FAE38664B43
F9B17745DDFAF918A1DC1CD0AFA6EF17FDFC2A9FC24786A85F296BC6FE94AD45
C89409ED218A45BE33C6526295303E5A1844E2733235B6C3E22DAA99E1CDC8D1
1C70D53CCD2B31D36C01EA34D2E2C2277B6824B5E47A2A6C85669D322B6145B6
167F7058BF0E8CA28B413AC0B3760E83F672629B4CE3BC4DACEEB625C55D9CFF
9A9FAFB80C3293C62329072F3CA6A0515D640765E79A353CA280DBDD960AAF91
0F677B5EFD2F941B2A104D4EE209904DC79D3AF84D964044576167DB16AC01CD
49C3C3E57948F4B18AFBC4BC7817B273EEC0E1E4350CE82BDD84A40D36A73329
612B951DEA2D6FF32641223E6B06B4A67D3E66E7B0415AF3623919FA019FC69C
076B435F45DC8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.0: CMBX9 003.002
%%Title: CMBX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX9 known{/CMBX9 findfont dup/UniqueID known{dup
/UniqueID get 5000767 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX9 def
/FontBBox {-58 -250 1195 750 }readonly def
/UniqueID 5000767 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX9.) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4347EE3E5AFBE73BA
31023D79A7299D8F662042A8D8B6A7B4E86F48AE98EF848E83FFDE68E17A0832
A181C126D15EC79861796F03957F5A51462C817DF752097718413D012D19C9D4
423A5EAE1EFD4EA7A9651BAE6E45CC194BDCD03FF43F255E58EB5E50CA26BB98
B8B11E21DBFF2BBB04D039E63C453EEDFCD9378F5E7AAE3A93E8691DED5865B2
B78F540F8AA3224BE372B18904651D057608DE4DD729FAC398A80CB904410451
90D66C44E943517A8F4969673B985D9D244FFC743E0AEE309EFD224F7029D37A
F6EDD96E2F88C9D071FF16EDF055955D31DEF10808B343E948BB4F6393D275D0
44C4DABB75332DD716E8127283E8D70511F8EAF4D1A5F72E2F8503A2F964E5F9
39304CC17ACCF531A8C0B6A9D58DBA6F24A4ECA62EECC939E8111E4BF79BDF77
D656F9998F1EFD2ECE3E61CA526106662273D5AD3E74D08E9D4453569B359C2B
E2455F2136B4DB54ADDC3C0256EB7A11E1615AB9323ECCBB6EB48ACD469A2020
A873E88B28AEAACAA01826C1C18120774FD5324DF9AD36FC256706DB24FEDF34
0FCDF04B12ADB66876EC7AEC183A1EA8BABD38BADDCD0EBDE11A5A1BEADD0F7B
83585C3BA141A8B296872F712EC42C625DBEE9EBD2C414E57CC1378CAEFD00E8
DB4B84F51967F2968329B8503C4B37A56F6136DA89167FE3AAA93257140FE94D
D96C7F85C6F82AE1596511ADFEFDEBC1B41B0395E66D2074B39B5565AD4687FC
89BB4BAFF0F7568D9EAF069CCBA2DFF61C59E2CB2F4274459792C5D097FDE6DE
0E40AAD8DD8F64C28D04EE50AB79EA7D3420CE42D39FA9080E9E046A4F22B5AE
AAA17FE750BFAF7BFF097E4A6E9362412C55E25767C311832C1C0C76005C733F
E046FCFD4CF49C6181C24BD299E90F20A0A0ADC868C11A8AB7F610186D0483A1
B3BC4FAFFFE12FD746777209B4DCEF0E4ED15D90F19BF2FB2B56231FFDE5D40B
146E3FAEDDBAB365D88CED98629B9855AD6E57FB01BB82659BD320D248E5F7D7
B584DD43E1F5DD2C91945DDB772E5A62AEB7080AF36A83D2BA8533E7E6FD287A
924F616F8090E9FFAA607A21F38718D668FBD6BA3434500BD01EDCEC00354F68
E1D0E9A921DACFB83FB61C1A5C27D027CAB348C4B7E2781013B68CC5A2BC8703
2809A49A0C2E9E004D56844EFAB4A8763B103CF7CFF980C9CF7F6BE28814CBDC
348E2486D9379DFFCC0E9329854D518B49B98F582972B0D1D18A3319EC00DDF2
F64C2CD2DCDBA287B279F98D16ABD1D140246E8B66C759571981FE7402F14C94
18394A4C426AEE4B0688D86D08B408763DA3537E5BA0D6A6796C316FDB0193E6
77C6F257BEDDE17F2CA5E661F434964BAC9834BFF36F563637872FCDDE94CF22
F076D1C2DF6357D8A26D305D52C9086CE36F49CD92ADFB4306705A0887407C9D
59B6BFDB82379111C9E33692BA9E2ED9782CE4334C6125933A2F210684642DF5
3B129F955BADA1E86D6B80CE299FA0D1C0AED1AD61686AF1052A188881E2125C
98083BA8255B92B9CA0B48EB57F936790DEFA6E6947C0FF4083FEC296FF3034D
AD657C64F2675EED2B4EED1E88F0B1338762CB4C64C79F111CDE9777A000F65A
F9979943ED7C445815BB59052B91F0FEF7219E3DF27E1D5155B9C42B7BBB06EB
1815997FC3471CF963A15B1C5E4653C84236CC5BF55A31B94E394C635B95D847
69E8134F4FFEAE836CD6AE71F58F48AA2F95BDB1E2CB89DEE590EFF3AB7097DF
AC185303E647628F5D87E0D82E6685DB467A0F8B7D3AB2B7F3F11BCC99BD48A6
FA5D4D75698454CB74451B486CDA6B65547C0CBAA563EC3574364540AE7B11B8
F9E86BFA655CDE88DE2E7D41851FD208649E9C011E04C78ED9209FD56E2447BC
E1AAA0A3D36F6406C60F6B19347CCB7D56A84D961E17E361F92C5542109D9BFC
FEA2FF9775230EABE3333EB25A40E29016E9A8255713AC8336B8F7DEB89FEFEF
4006DAAEA26C6BA1EF494AB99C2BC960D9E07981BABE909B5C121F2CAD48C938
A36129D10D38AE8F5C64879F61138FA9F7479341F5C5DE86376B65A642B9622B
E58DBBFAFE07EEE1D11DE9DC34309572868586CD92D39FADB711883AA85210E5
C82842EF225E55370FE0AC600A170687C60C8091B0625A1C5589186F3C7C1218
B15B5CC3A5CDBA7085338D963D929A18A651EC7CC39B8500899DE9220A1BA363
78698E414607C34E06E29AC5BCBAB98A70DC2BDE0FDDCCE22D4717EDA7D95397
33420EDEC2F1D6E7072FEA85945378A6BE9C7F68DB4FDA6B5BBC0032B3C02519
F4168C804B6A101AA60EF4FC40C2428AFEEF5A80F9B76D561C8A21B3633E13C5
215A14D54B8A1E6143A9CA0B5794D20DF97C35B3C9E9A4673AC2123E7DD8E216
044269B1D6AEEA46757F8D9AC5C8A92BDC1EF22EE0575C80CA7895722CDD2BA6
F9A208E6BEE5319E63B3B3CA197D9739A4498AAAC9C7484D61418ED2BEBF63A7
F5283A075D1DFD4B2702E1551A0D1A90DBBBEFB6A55B5F29C869763A856C4E61
EEB3C8E14E3376B7D01A4E265C6C8056ED23931DCF669A0EC9427F74A147AD8E
82E172FA6C13DB1281651BF3D14163D963EFC7384BFC4B3B9274274DCEF647FD
D6DF0CC146BE8AA660D709526B394CE253369281FDB45AE071319E8FAE4EDF10
2867A431E22779EE40D885E95AFBF62916D9900016805D004C0375D29130CA14
F3E466AF350D1A5D181816EE1C4BC75DC09E4195DADA5AB09CE9EF2C4D5F7CEC
6C16BB6EC791E2870DB46B6B06DF421E7A2781D82A07D92316B553D068A1DF5A
8B19041F96ED637B932DE184F8B856FE1947F5FC8AE505F0E3953B325E0FD6FA
825EAD072AF06E258BD35607A1F082DFBC2BA5251DEDCAF68B4D03086CCF84BC
DF70BB8D2EEEE3E0EAEACC8440AA130273E5C7E78A15EEF66A9A1E0D5E022188
0AFA50FA55C6C461C743E1845FED77378D639839F548D6827CF371AD3DFCE592
B7F6E29FFEB6CB92B33E24E34875A5A92C08806F67E18AEAD86447A977890AE2
30A452F33B609DE5B792D9CABF39A086C0936AECC081CBBC810B3EE1D35F9717
260E76132661E3A8170759084AFAB04A6E773E9714A6D486E0BF46F336A7CDB5
C325E28E747295CB0E8FFB289F4907BAEC213D4D0B495A246A3DC359B995E9C0
C5322D750E13159B7242E4C4DD27932AAA130BC6B0400428B5E6F928CB8F7658
EF02F7522779CDBB67722E09774C419489192FDAD3DF272C95BD9BD64DDF0BDE
999FC72607F52805DCCA5EC17150EEE38B866E3D5199E5A6CC262785EEB11D51
80E79545DA191071487EF70C7FAC0CA345955F797912C1268924DD79D0FCA3BA
460F43E74975C04296E34423BD366A4EF7EE9463ECEF08F7E7BC8BEC570F812B
066383C2EF5375FB1504537D902818D63B30385421FF81AD92A1C153852B1427
A39685A76DD636DC4ADCC53F2A78F795F48EFB23807E5751023FE324CB401281
60F8A8DA779A245DBC26E73B61A1450F25AC276E1B5240578E85E1CDF5A784F7
D4F5BAFA76F70300972E4B130C685189C4010B9035A5CBF0562EB3B387FD89F5
C53A25D3E883B506E0B477389DA5CFA82CB157D8C30F287678B0F9A17F5A8704
ACB5DC57D7CAD21A4EBA49248F277F929D3E49B17463EA5F31A4FC11B0836E34
3A5FDDC6B9A45113590F114B99566D18C21464E7FC1D9AAA9B1133E5E8E2D14B
8E143E1E16595C42376694A83684E3B217A17F158DE89549ECCCB443701B520B
E20B972CA5EC6405C479C5054663D48A22D105AC98AF094340B5964D0C26D9CE
241D2706D3444C1405B2C9F7C912CDFC87EE8FBA01C0020D1AED1A6205A8A45F
8504B42431DB5409BA8AC472F2FCB4CE698F6DA92C4C8BF1293C2C998B771540
3D933EB5E976B7D2252DAE9584E5C6864B29C3048EE159BCB7638CA956E07F81
F76391380AAD2F1DC2DC201BAC657A1BC93F5569A5F612A4EB6B01F136F41B87
E20D4DD6ABD7ACF1275FD80D9BBB87A45572979BDFEF59212F1F6D9423FEC976
1228499D626A328569B4BA2755B1ACD20796398AEEC5F3C61122D52124996535
D0813227F549FCF59C6182D6514A70F9E38565C8C98D5F797318FB531B5DA58E
EC60235B6F1D97CA5D495CF689C3F9B3260998ADA1204AC00135C7C72700DB00
7C06798A46E897875BE619508DFA2201FDCF689E51C3D85342247B059C0DDA14
766A31E3E25E792F090DF3EA0C45C3F64AFB918BDFF92FF0ADA2F71866CA190B
87B2FF90C872284652619F084E2259F044E2980101A62004AE9F4BBF675C5279
BA3437ADDF2D552A033D2301A669EE8BBC840C0028275D077B8E9977D447B396
F1D82608E030FA43511BA01C345078986B8C35B6C6990D018C2DD2CBC7774450
D8482DBB262BB816E6A26A1FEB084FC2027C62D17790C80C65A9183F23BB2458
34FDC5D566C1B667EE801D0521BBA520A15C0C923EDAD84AD6A83DB23806711B
0AC2631C15EB1D33C26F8D65852EC37A3479152557366929A63B753226059870
45CE6403CA23FF95BCFB6F0C8DF8CAFCC0BF27C59414217CC6552F5945D9E6DA
AF83F4AB1917742F7502B069DE44A6ED3BEC966F59A84FAA2F8DE441C11FB122
DEF1768D250C0CA5F2DDE6FC4E24FD3AE4386B91ED2A492A959BF7E4C0AABEAA
5BC2D933147A4A21FC5E5CF3B2AF5C0A768A8B79337FA3934A43E24F9F7DF24D
22C5BFE4DF1FD57289A6E1C9AA48D32D20F613AE94B4308E0D3BE4D1BC95B33E
A9911B82EFF461D295C5462EE2B12A3E40B89E0BC778FB76F8B847B6AA99E061
3444A55D83FF839B926985B0F4E562D726FD99C5DC86DA24BA7AF38B93C90F51
A937E7C35793010F351594465B39BA5276F223DD3CAE1868B969D8EC93AA50C1
4C7E51D0D7F5E9F0EDBE1BE24BA5A977163BEC724D575749C56C4F39BD60F3AC
47B930C9E07A2D59642C9DE85EA6FAD1E7D8817812C049FDAEE148E8AB207B89
B2324191F1A82A7C499E7BF09CF1299F0ECF55EB0A2A32C5BB89411B4AF2A401
074718859CDC27C2FA78BC5269D5A38DBCAE55F6CB669DEED2C36E5B0D590504
B6162391FACA9F20224E6AD24B86CCAC0048EC7A618B3263F82A317B3969F0FA
9D5EA4676B27F371785FFF6599B61A6D32E82DD9D511B04E03F14C95A4CA6CD9
5B59A8A7BFB2AE32E9357C7766528E9F74BB8D0B9317F02EDACE2033B7918D6B
8616F1C1B3E113B0F77B0A1292E41F8353DB55EBD872290491AE1FBE95EC034F
DAC1394928930EE297693598D97EBD0720A0A7B4A5DF4EF4BE0E2E0968E64CB8
167CA1B8C40A779023AB6F74E0F1626D8BFFA96EA09CA88524837B18DA6152A4
3F0DC3C3958EFFF86B07581B416720FADFFC4AD35F1553A18944A6DB8FAB0AE0
A8118C09DC8E905CA32904B44E0541FCC7EE555335E61108D8346B4EF697DE67
7F67E1E4CF0EE2F6D89D10FF2D115C6F8163B8180378018F58C148EAD188E969
C60B83C7B295F30614B93FF925BBB2974B0B9C68C2BBA6E973DBFB5500A574A4
F7348BD31C735A1E57519990582D8F7D97F8B63D9DCD488DC569D5B392FF26FE
F06F9762956D64E9C258EB9B90733BAA8F1912F3B9AE88C6D14DB46B7131BCBB
D47CE60D9C63FE0B9620D03F615EEDAA3C76A7285F9897A0D476F35F5CC158D2
D148CA1E5A96D16253B360F34336D476FABE9A434AAD5FCF65A27F48C5BC3519
DCBC35DC1D324A270996B8DEC6D3833E76A434E05074C7E3FC8E5633D6B25B7D
69D9BF7039DE4E755A7E3BEC8A4E5929A98FE265E742B269666C75644E53E6A4
C5AC907F7DEB319BC88CD1A7F29A0A4D43D471892A674D50C70BB6EFE5740F97
50522F2EF056E208C0134EAF15DC9F85C7C06066782B715A5EBC22AD414A169D
86A2F606150B6F903D3AAAF44E75649DC410C3B8C845909BFC8235E573A2D291
19440D724C960014917EC802414651E298160EA70FD54BE4EAA1A1007ABDA8B6
085A89221C3DD5E9C759C19BAD6EFB91360CFDEE6C4876AC19B4BF67A38BBD5E
0BA20996BEFC1F8C427EBDD666B30DF5A2389F1F3BCA17132FEFFD3231570AD2
61CB33381A0D2E2FDFF470FAC3A60E61E99C76A3F4A6BF32FD4B2B6DB6B27F2A
76A5C35E24E78F7DF28AE1B7D04A71097881CB67E060DE537C1A318B95964FAA
1455264E48DAC7689EF10905E381C569DD65825089EF325595388FA5BA6A1EA2
E2536872DE92D46AF3BB3F1DD920FBAA4481034DF831FD15C01798AB04A73B50
1461BA7298B2EAD460D6E645A9ED41EE0E0282C335AA716D7563AD7CFE2841B7
0C782ED3F6D31871350A12A41AEFE21E9A03DF676671E4C953E51F801CBEE091
BE0B7B413B7EA2479E2529DE9E49C03CBE8159DB1B28D2E290826B6D01B35DDD
083F85E9CAE378C1A3B7065280D9FFEB04A02B76F1F0E547328F005CBD39936A
5063812D1C958FD4EA6BE9FF87E5FAAD483055819D1DC39D31B8417B44F30B50
EC95E26103A0DC2241B56DC62D424438A5FDBA8AD4D9B417F0DC31CD82DD772E
FEA23036A719927A4654876985FF4AC2D28A180969A76F3584D001A2EFAA2BB3
7F0CC228CAD9A485F3FEE3E0F0059D3BD8484FB97593A6EF08F9D352E3860613
2617ED6138ABE551DBC67F0151D0F9CD83A613C245E23FEE6FCC8858592AB43F
8E66FDC5A27F9312091478D102BF867B320431F7A6EA42EA763C51FF7E0E0FED
A6A830AC95600C837033968174A9406D0DFA72FD65ADF153E5CB3420CEC76A3B
43DA6743F24C6CFE0E9A7E78D540385B657CCB379BF5E238A07B836F907017D9
C0CBA503FCF625536E27B77A262A0EA1C3DFAB015EC859FFE5BB26197A05F4F9
87046F3AFD3387CF1B040DA7B7CFB1EE92816C7C172164CBAE3E9204559C2A74
87E4A41AFB16E7789686047067947F41C82A26E3F343E7359804BFB3B7904F4A
12FBB7EA0E8C26801ACE0E9093D7E2C3E288F781E3E6A53B8C121625CEE7354F
B1A059AFE21AB4DD2B43A9DA710F2D811F63DC41699FCC43330DC7AB9CD10F00
C959F73155E9D63EE7B20970C7AB1B9A8A51D0DA0ECDB917291FBD57CFAFD9F0
E1636B9DEC48FA7FE5B225283546B01ACF3036F1B5F399688F1657E41A5F4EEC
2CB1324C136CFE6C6B92958597B952552EB7A8D58BA7773CF685FED451D89392
C290D38D67FA7519ABD024B85D3002D8592C5D30B50726C7BD17577FDBA79E38
3D99B3A08797696E593C0BEDC50706C986E6BD05AEF30108F4BA192E956D2942
72F59E1A025FC31568C2EAA1D5942A479203EC01B37626F1EC334DC3C6527C06
41162B68D66E7923911921E861FECF78F36E4BA60B4FB8554E83AB554054B2C5
8C05D3FBA010846BC5B32E9ED62C6A0E8D92B8F3546CE0406A87634E2D96F5E1
F007DA0161E75DA55FEC10F7564CD7CB9AA0A016438D082D9A9FD107CEFA7B27
BA3C61B3A13D9A30E4BAD25B2FAE3ECE3FEBC9722B448E3AC5DD9FF784718F6D
DF58A8A7DA91086BD86AC776CAF3F4F2DBC2F0AA81600D53D2A0EB178568DD96
1ED459E1CD3D897776901284DE5673813ABA0CA7ED342130B261727DBAE566E5
F57FA86A7B4EE5F48F039FB95D318DC142E26022D7F85B34558E99078C5E6467
FB2ECE5B519F7F42C0A29B5C062C6CE6F2E1B611B4C6033E677C436D2D22121D
35E02B314EC425871A9760C80B1EB6A04A6B96EA9E36FFFA2CB830EC3EB2E839
D0751AA4AB1244C1A154ADE5803272A4D03EB18A47B9D091234019D2E2248398
D0BEA2FCD4557D0D226934EECFDDC7D0B0B71B47A2787B5095BACD95228E9869
ACC993754B6924988396DF3B2EF015C1E1417E02C197B010E49F7B468D51C051
13E4DC5801A9A1822013C4B64C9BFD510200C2E03FA050BCA016D431A70FC1CA
00F7391E9D2287DDCA33C2F03885C3697AC4D8949A3526FA5C8A4255456DEAD9
5D881994DEB86AB350C472628B2E15BCCCF9F12EF83CD6BBCEFA630D0B38E790
7C5C2BAA23F39C7E68A73A54FB4E9E9E4CE34660A7B6C084967A50FB5E53F680
FD000657D8244CF19E38D28C66D2E466B4E18359D1A86AAA228B9C47E3E78C0B
22D2600D5CD55A311F4C7B24E484023D78E9DB5A2446FF209D4729BC929A9E00
082942A5C533BBC5342091744EB5AF7CF0ED05B26D6172499CDDCC90EA538A55
26FD5AFF81D04BFDF114C3E460822D3330ADFD72F327E9080464FAEA119534AE
334FB676042AD0B802ADD20D4BC6325B8C959BE921156A13EA6DF16B0DC33766
4C939062E91B9EB2ABD7D057633FF4C59D189228D419D2BFC4702F6EBFB1450F
359ED8F931799C971EB12624D05DB17E6B91D593792088596387D9A8FFB373A6
F691659983D7211C5C7574E8A87A1D4F89C3686AA1C5AEF8FEDCE07C722F5689
E9AEB90DE4695D829948C67FB72435347B748ACA4566E410D007CA937064B736
315132A346C9508AD3F4AFDC3A5B7D886A2ED9E916BF4E2A6CFDE20C890049E2
9BD47F34BBA6A9CED5AAD871C6F3DB3CB6FDA1A39B3A928ADD60DBB52624D5FB
1B25F96B37C550630D3A4DCE5C42C8791817F533F32C7450F87BF93AF51B5D34
303049E0AACF62CABEC59FFFBBE936A6BC9043253602FF26392A4FFC912EB706
98B0FF1D7306F399B1EBDB396DD61E302E5FF08C45DB6FBB31B8B0B5F2C12703
A8FEF3CB0A79B769AA4D43C28B2C6DBB6FF9DE0CF2277ABF85C006F2F5CE1628
4082360CF93972572BF5C2BF3CBBA40AFA9EFB4BBC3B696AA6B6A5E2738B0DE6
C9FEAABBDEB5D8D36DA8C8FD7EAD1F56CCD19576D0C57BDCF65375742ACF7BB0
EC7ED9C75C437EA5AE4493E1EC093CEB07D89F6ED472013BF4C6E33566B9B182
BB46CD1438ED39D172B1FA08431E2C45F5CD5D218FC8EA3F389348BF0C8D97A7
FCDF58E1250BA9C8508A52C0F6FDF57DE0704FF96EB5BF93C38FE62FD8215DF8
326EDB69E9F0F9D17CCEB42461F23B0B32375DFAA1EE93DEB48FE83DC7F85104
B23C2FA9346AA2DFC018851299EEC6BA674E1F956651246053A6078E6AE38645
C1F016279891C34A8CDB95199E2B053D0068EF437A7FAEBC1B886AF323DAD2C5
B3F40C4DB20F5F5F820F0EABF358993A7C9DB5AFC79136937A17241C7EDDFCBD
7165EEF252486B22B9893DE52D7AC4FEFB284273A3B594FC5FB2D74250EC45EB
F20BD27D658572B50D783D56905A5D776890F7661EBB5A7F739FD9462301352C
A613C2315DBFDAFB6E438EDD97A43514AD0F0DE3E6B2F0C50A373F3BFA5B69D1
70200D530F5A991422345B74776AFF7630341E73C9DCA09F1705EC0C52852198
3204B2B35C3C3A41F2B07846EABE10FB8BAD49837358070C84439DC2C41C7D24
B14E83D143417F424D7F9DDC8E3DFFF751DC12EA990E6DAA561C3E27EF2D2467
D39DF129C1F10ABE9A3F8284FD719C56DABDA874532FB606F5B11C88157791B5
F2C6F7C539A016EB4D5459F188ABA09CFAF7664121D5277BD5E0858197A4FD95
50DFD3A83CA9756839908628060F57608B0D34C24FBF6772903E7339F60F112A
9482511A4E8F11D9AEF8DBAB340451FD7CCAB52BBB7847F15625CAC6F19446A4
D79B02614CA62D9ACD4C350B1E321583B42DE5E0F96B8C1EDC2ED0FA6730E353
F96428546CD82DC30FBE231E404F8BF1D0F8C9CDD6026FB5B16A41815F275705
8FA68383305E14C97657455325C4DABBDBC092264B4EC0F8CD2F8A9F0EF35E56
EA4BD8115E60AE0E07D48E521A28DB8D99528E8D35AD279A63D9AF3D9067B049
BA2CDE9A391CB2B1C0D4A21E7A190FCB28AA8D01CF4BD9A075E217EBC634D2FB
E92FC956F09EAA20364CF78B34F251241D59DF4B9AA3806238A2C0FAD3F2A355
781BF70391F1610036E7F8FE27A6F57C2DBC69F7A38818CFB001F9579A2C9929
5FDB9B6DF46AD9DCF998BED53492974F78EDF499107FB92ECACB303752923142
FA8F1CD9C848C2EA655F54382247A0AD4432B18518115A4A1639D35DCF90CD96
2920F8597000259A86F4DEBDF769CF4978BBFC8281FE59EF15A3C79B198D8BDC
979ED256B3E33A01B89612D865D547054EEF43FCE1A4AD4FA74290CB967DE455
69B02BE36EBB2CFDBF6D26FEA4CD2FDA1063B9042B3CEA11D5B7904E4EA330B8
A4815419135F3F70F144A0CEC07A3290FADA7C618B270D2D354FD4715CC6F32A
A4F53DB83F609557E5A7107CFE178CDCED99F906C7A08032BC315908CC6CE8EE
B16AB61FA543FAAF2E2659B996891C2CE3D773191C5474EB8ACF1012318BA17A
68C5E9A316A70675C873E8278BFDE981B49B793FE82BBF8CEC5B5665AF5C6C7E
236D2DE8B3312C5B6B00F617EA5989C8A313B9B95D580A4BBE440839A5FCADA0
DC01D39F523468C5B09484694717B86390A4A8DDE855F2EB83B25DA38A425EAF
DC892FAF5F3C49742FE88DE570F7908C069FDB297CD1F2BAF8213270F8CDEC6B
57A97969041D28C909DCFF03624B6CD1FFEF2E6B85CDDC016451372968DB6F76
D228CD3499CDD6924BD6A5928B3497785069BD62FEB5860CB2D6AB5B77A9E12C
6F363858C3277C07901DD9CBDEA0CCF4A7B037593445DC3C1A99ED016EA343C6
354AAECA832D7E6A67A7A1A14276C2A4A3B099B48B8568FD9FD11E7B13DDFC90
BDE86B79AA53205F22DA17E0184431C8E0668760995E8178116DB19E391A5E75
A7AB21A5FA3247964933E7A1E3020E2B2E46E079FB14211EAE3022785E3F558C
00AE89841342A2F6BDB06ADF1B9DEB51CC5D22C7E3131C26D1803468A44C941F
6AA244E2B0665C473673027860EB202E3EF743DB2B2517C735943290F6D1988B
1DDA28E6264CE3CF8764FDEFC9204543D638364402C6E9DF8DC62B4993385D96
F89E13806276273BC426E1BCEA451260B7E3F4E8316A816B89D878BDA087851D
27E46C9FCA3EEEE3B2DF5D50B2C7B593AEC45F0004487BE32CEA18B3FDCCB0AD
F81A621DA433B6A4E46B68F90ED8A474D6E0EC87C417AB2BDD12E7362E37D6A4
60D63D2435485946976FE9113FFB922C9B8E3F6175817583604B563A62741E39
A0BE22A12FAFFCFEC66D0902C843A0CD96D25789C93D9A4ED736A0B6BE94761E
EF59654193EFC0E374879A4198FB57134BD4E4B8993EB6ABF9EBE7DB64B911B0
044EF685AECE275EF4CC8D5FA3CAD7DCB9C38114F9393FA43BD1B212DCC94E31
55917803875A39F9ADC69344F34F4229525E97A9716A7E6F8FBAACBF66A38250
4A8CA8FF84BA721C6C385C610E9E827AD0007760B92BBB7F9D27DF661C6E5DB4
BE0AC35E2F61D36522C6857A17B4CE0CB2ACCBCBC3FF2895EC9DE6BCD0E51686
A0B6D3A659CDAB56993F9D51DC4E89286114C4396F73327839AA8559D8DB8148
4A34A9C4CE3BEDD545EE1C04CB2CB5D7466C9C7309F62B6C64BA879C487225CC
02618C0682CD2716DDBFEE4FB4BA2E9A3D75ED78602767B371291CEBD89A165D
1CBE4B0948571E0BCC027A7C887F987A760592F5D19DFF0CAD96D89C174DD476
8846FAE242E704642806C6B0562AA4928A2567160A30C11A3A41520E3E3BE0AE
A6BAD3DD7C460E24192E24085D4C7250975C18B0A78F75D86D9F7C1E986C9AA2
59A19ED85B4108E27AE3DA9F520EFAED2C0DFD7B11A199F9A9FC302D250DF4B8
338C69B20A803343A3CF8A3F08E3782C7CC940CAF082BBB664F30B3751FF8DD0
6BBB339746EA18470BAC23C8F1ACAB3FA4CE41A338855485ECC8464B5431B60F
CC07BAC09D56076E94651FE6609F1C86F0917C8BD5CB2A18601D41DBB1D04906
258AFDF92D4E745B7AAFDE4F6EEA724828AA01921F48C6B248ACF5F7655B6F81
6E62D99AC2321BB37A5661014C4934454EAA5941D42D3F81392C5AF2F54B7BEB
5458FF28FE639EA1B17E8DC0D1E335E442C6478305FB0E81F3555217C931DA52
CECA4519FE14BF1759F6A0E2B9158AECF9EE6FAA766FBF422FEEC286EEEBA574
2B2C345567EB8B379358D8816747B371EBA0D922199939AF67AFC013CE84B016
F6C9DAA864659684742E3012B123429675E5693034ED5FE7CCFB10CD3CB2E631
65F5A8A1AC94E6025FB9D04A30CAC554C2B5EA0EB4722F6C9D1CEFFA800148A0
A9D0B7C9527E2C3BDAE31A9DAEFA7047145CDF8BE39CE368504247A69CB95DD6
C87C06DE28767888D276D2D277073FB690D3F915D43252173F552179CA31206C
7280E14990C653B33292C16189A7E5F131C1A1F2E7F49203CD39528DA5D938C9
02D13853A13AD1A3031DC90807FCA686062766F09173390BEBE001D3EC93E668
C31AD4CC6DCCCFF415053017AA26FCC88DFD54F7F32CC2D03E03987885E14636
0C0FEC5034AAF5D1F17EF236FD795A02D75C77DED531C33E9E70420E07EB327D
2E9C72E3BF1A77F12D42C6B96C2717C2AC8ECD5264E98300E1E2653F2A70C3F7
771E43932F60E1DF2AAE34EC1FC57D22FEA419BBA8067C6D0E2888F63EC5FA37
A82CF6CAC81CB1FF8EDA6F6FCF7951ECA02879F98B70D954E98DA4FBA1F4FB8D
3952F304772ED94B0B6F5D3C055B785503444854552E579ACFA473BF3BEBF3D6
C4B531233FC9870B163246788B81A090B9BFE39CB9ED0C1EAADFE0493F6AD921
0A6BF88412FDD58D03F170D9188C8B54A1308B05EFCCC303B7071CEFB012491D
5DC51E0F96ED1519C678F6A2342DF95707BDB79C642D28E7F76B6BA99F9E9A5C
8F629979F842212571139F3D22E5817D635C63A392B95D32B0D6A987CB51EB9D
86DB7631A587C7882FE408E946BFD45A8B4060486ECEDC3D297B511F5C265B39
63236A361355B3BFCA6210B95FBDEADA05DC4FEB2082C068C7968AD16ECCC942
85F78CFF8608E5EB663080AAEA7FA156AFD062E02DE8C38463D5A9D395512377
75DFFD73D3309934AD65667923696671EBF70CE5EBCB7E4BA72909066936D19F
B8CA16C737E2EB37EB8A3629283DD38DCCC887D6CB9B04314F4648D334D667B5
5C5B2939BFCDF454CB443CC184813EAD859968D6FA4D314B6A2A1ED7F7608D08
72A9D43A8ADECBEC46A7901C3563472663C96CB3E52B22F91AABAB795D5540D1
A2C360BCD58F62EB5994E9189BEB9942AD660C65C589D1F28EFF440BE6B11FAD
E577A417B67C8504CABFCF326F6A31FD5640DAA0995C37FCF89FC8EA76202E92
A8BCA066F8B174F8DE76B29849EDC4E54CB497AB289E4E393420DBE0E83653C0
17ED9EE09705380DF0F24E814B3143CB4A009937C9EF0EB983125C668026B5B3
232552BD7C4322484FEA4BD022E4C0D8F2C6B37348BC6A7E29936A6A90BB5A5B
6D751950A4CBDC39C715C9C29704085A504274E092B3D4523DBB3F557DAF9F6E
051418769DB5F3A23AA0EED21027C40918E5C47E272F9AA264BC0822BF2A417B
4E03031F6267771E91EEA2B5A7638489BDDC5F09F8266C380681DC29324C33BB
34365403BD83BCD00D6B93B1070070004F184D5A91858BBE3F3E62B138A09043
E6D920A1B80B10635B43EB06202202815A0E5AE5D41A1524B11BE5F48C434D27
4855272293D83C529D774CDE728D6A4ACB226B6A0E5D7CE7B057593B2E618B64
29CEDE7D457B0233FE1135C71E0639D28AA050A7E01BF7F8EF5BDD613B88B478
3F33A8361F137D733D9AD625354FB43F96D6B059C8CE70C9AD585854C18C8751
FB21B780E24EBB1F5D2012B39C859D69F3F21868BFE28571B5C9753FACAD4592
A80CC9333E2DBE52D51B9231F1C15F54A980D4F6908AD467005BA62FC775ABEF
B67E5F2B7346609173AB298C017FF100CA091C283CB0E3B9CB1E8CC453999DFA
0AAAFC261E0C0B632652FD79964330F94AA33E3DF42A741FA480091A2A4C9B20
B41713764E70CB714D59D5485AA4CD4119B4F1C5EBC7F9128A17CD4470F968DC
0BA725CE1B40A64D0B7C6B053230042583AE175AE8827D995F7A39D953A47B16
C62C309B8BE30E3B7610FCE3EF127E078295982A0BD70D96AFC832E72BCC63CD
EC0FCE2A62374CBF4939EC07ED3A33124084D8F3BCD4985DD02DD1AA61DDB22E
7136685A31374DA3FE01DF2DCB8A450C9801E7298ADF778943315E06B0DDEA27
12E5CB69A016ADCA22B79DA389B2B33E1B77BAB2204F65526A012672CEBD7271
E6365081D0EDC72D620B02A0C2005AB401D370B06F50502470DA14972CC3A43A
7A6AC2CF737A3493E0C60706DADAAA7143C80E484A05260C04556831528E48EC
B88E40ECC7C957B8303B61D07AFE63D9A142EECF0EF76646883648677CFAECD5
E8A54FB1C1F4438C4838BE736F59DAAEA607BCB77738F4A3866AFD2EAD40FC4A
F6A5530D7AB684CD070B3A0A31AC52764086C0DF0F35517546075F98CDEA14FB
67C6FFB509D99CD2139880543875C177BE1CA1BF12587E2430E3C1CADBBA572D
AF4A8E675470524B8AFCEAEA7A5D4091C24E8D26405777B063E20065943C156A
99A9B4F12035E6EE72A360A554B5B84503208E67199183F9046602875D8D84AD
6354FFF17E7CCBF7447EA3FA16F977A39DA429C434A19651FF397347FD24FDA9
FD07D36433CBA16008CB18D6B374FEDF0C5711E3EDD19C2F8A8910942FFD966B
42F0C64B6EB34376F86513D9A884C585970943F41238CC9A8836EE45468CBA1B
5026C7E1EF4FDDFFA49153BD2E2FE4F4D783CA5B2ECB7522ADD34040597E2B9E
2A2DD6F7870C54D7E5EB3A83165AE392416129F3582ADF590152514AC4471A55
031CF3B654ACA8E9C1236BE9BF803523022E3BE5AFF943B6B4FDC6D80FD7BE5A
3A76463B252051300CCFBC9E5DE441A0892F233D0DA59D7087F1162B063B641E
364AE35FA6FCC87694301E4AF25A9CB4C6CA152E2423150730EE1180DD805D87
1DF656087FBB775307BF309EBF64994588BDB0E399F1FB6DF9F935E43595CF21
7D190CBC3702F3662A6D4A29284EF83DE54BB552CAF27D6149333C42E8F3A214
A372C22AA54B05CD58CAFB2C4C96A7865731C189D8AAB07F9B44720E022AF4AD
003A5509DB696674F81319C7E9A458BFE17BFC2C05D5CA0DA04F9DCA47949980
3AD6DD00A510D2648B49DACAB5E5774D5FA1D3DEBB89A81969AE928B65B962DB
9E92BE24F78D90A25CC7024D6ED39985B58C31A9AC0A38719E83598E7DC1BFFA
047DA52C81B510074E5CB8E961090466290AA45368E5B662CBE1999FBF826968
CC8B02F717547C8CD41488BC187F0C0C02F823B629FBB2732D0FAC09D53DB6ED
1FB30B6AB4B439A7A9CADBD6D9C1F0173C599F5EFCC518DEFA4EF82D09ADF95F
62B4D04845B1EAC1EE5A64B3ED6EC5405D053C297848A2976F8D11FA7B07B922
D3E92001573D8F88BE4BD1087EE37FDD3A7A8F9CF993BAE7F5DEF438CEA9BD49
593DEDF4B9F1E1C8B85D045A793066F57895E26E87869090808F7B1336CFA756
49F8FC38F2D07C68FB17C30FE62201313E6790AE559473FDB9516A2A3C127916
59C6F60C467F8456924E461CBA3E213109F83464C9D3A5ADC89205F218EDF948
6254CBF083A39938BEDBCA3A53A0F2AB2F827809B76ABBF1C705854F6D5DB976
B03BBB967EF2197CE69485514B23BB00740120A96973D0DE1C6F1CEFE7357B59
7236A90350F6B77AC517028369EEC3E4527281815314ED226017B1E3FBC4696C
5B973AB55E54ED932A4B5EE01A58BE8DEE957CD21573357A6275538825BA0EEC
756419E4EC0AAA9FDA304C47377B413C1670E911E962D3534CB60460A057757E
18B53155BB8F0EA119A8998AAF62E154E3D3750881FA7A92D1BD137E1C2BB25F
478217DDDC55B277110EC87721667D28B3C316E7D3A3FB9D4CDA79A3D127EA5A
FC4D1076259F38B7511CC1CE04D02AB64820AF0745498BAACA3D9CCDD9157509
D1270508DCBDE539911594AD71B44267A4C4CA86059AEA0BA96965D9A38B3181
7750F1A076A78507D3DFF1D79432FA343A237764DA05289AEA0D9F2AD64BDE97
1AB63EF3DFD40CEC341C6555673029C3AA7F19EDAC90BF56BC0CDD495D9DA580
08ECCAB9DBC698C72876779AB9CBD64E838E4C1CE5DEA8C87C26D07D3180EF3F
817A22200D33DF89603644BEE902ED5C1FE181D2D913DC43C498581E9A0C1F77
A6B77D15D6C78153E9C5F4627A1466E4D0595B297AD7D77F8E354144590430F9
A47C48A5B1B3EB4F8AA04E84C2C5C51352D5663686C6B11D844C201621BDE6D5
8F4D6FE1A8C602BD15FE9336C3E40DF7E6DF6A57CD926A953E7A66761DBCE5C6
5FE354260FD1990ADFF5BBD672485C7EEFDCE6D2B7CECAFD88D0ED05B41FB4B5
77835DF298FFCC98E908EE151A7A3F1670EAA792F44FE4915682EA2E107F5D1F
D757F43C778A1A810DCD8622FE067D171A1016CB6FAB6230B83B9FA898495D2C
A2378AED0C1E5C9CB792E807FC7AB75A10A1B51E99731898890F6ADB7DC733A7
2829DD138C371D236ACF47497FA0E5835403A5B11AE13865AC052FB5302B5C49
F534D58C1340E7A887C56CFD7D1F2D53D30B8574FEE3971CEEB2867C0A0DE30A
4332CF932EE4FC87C47F19F31E5A942286CBA880128EFD5C2B37C6D590A153B0
4CFC74F0F8FCD84BED470C39CEC3286848D25358ECD27654981F0116DDAE498F
55099ADB14C1A787FEE46482F328CFF2B8D109C9C0E26066E470E19859871474
60EF617EB6CD3413E250E02E1DC93F8D68CB3D39505899709BC4F4ECFD0FD865
E66CE75CE5FB48DDC033F560E565C411A8587CA32C071868E46CC1E57DD4B2A8
3B39EC2F2B2786ED08080D268DE72D23C7F2FC78D6158F374DE780FE20FB4FDB
9F94BB887C17171802663188465AD97041DE95F95AC7EA3A357FEAE7D55AEA81
3218E449FD62D44DF136980AB9E08A4768118E114DD199B2EDFEE1678EAF0047
A1C6608EAF70B8B1F6470E429EF9FFF470EAD6C85E415C39A9DC5632BCB9DED7
165FD0468B236A68525F6F3BCC8BDEDFD0396EF27CEED7E65AEA1E935462C6B0
5B7EBED81B68E6FA1680246CBB166B36049450EE28E7349FDC71E799CB6AB137
4CA5BE1B06301808AC1C2C34B6BFA45626F206EE9330147955B0B0EFD87D8B7C
F786C4B47F18E178584CEA96D86AA84D75BADAFCF846E1789DACDBE3FFBBF1A5
041F0613F7C106AE8F4EF51BC17C8F4C6FA5667BE5D25F43C3ED12DC614049AB
A018A86258C387EF1768401A929184803ED16304C9A5CE72FA375A807E9462DE
4165CF72EA298B767D1971ABAAFE64EEA7F6FF6271BC405B3F4050D5FCD25F73
E5E6866EB3881ED6B1A27A1ABA31CB53E4618A6A09588C69EF6855ADD6F242FC
356711E315832854DE75DC5F39C269CCBBD796EE44AE2772EDD5DA63A04CF9B9
3EE6D65F623138C7EB55EE3AC95AC1B40090540FF0FFB3D35B7579A895A905D0
7B03F1A917B42ABAE6CC4F2C059EEF6AF679906E395534C740680E2B3BFB4790
AF00C8796C5AD2149D3420A53EF39C04D8E8EB5A75C76FB94E26413319E01D50
F57395021841653BAF2674003C032CD87561A31C30A583359075D2EB856AE635
3FCF168215CC309B459CACD694BA3E5D66A5EEDCC8A73184750E04B4F2525EFC
2EB0CD784AEF90922FD4278669A6992ED25E805F0F0DA4F021E463D39608674F
0853B6AD83EAEB5C99FB394D1A6756FAA6A43F1B78633AD5CB16A9C0F9E7A4E8
55598E4386DD00365E0B290048B6DBB5DB67129FD2F92DEDFCD48E2BA093A5D3
7BBFBC314486D04385DA6E44EC509EC62DCAE4EE399FF9A28007624B1B6650EB
643F76D98355EEABD45D44D6E176E4B8D07EBC164DB7A94E00EA51C140525FE2
BC22F856696214676477104553ECC1D254690AFD7800BB1CFA71BDE127E6B5BE
C47F1E87BA7722D3224385CFBAB930F59B6DD8CB4A53B0B8B93E1309AE427E70
3BFE6672BFECF5416053B86DA7D84715741CD7876D3D0F304397F0F0579B8430
190CF723AA530110133D1B9FCE141D35BB5381F9879884FD562EF9FD8D1F16AD
5FEB62C7ED1CB9633CA328E782FE89DE8FB657150921BE4140E58C4627A12760
F46EB11B068A6C9A23311821FF34750AB0E5B3B76F88A7FB28AF05316577346C
B5453ECD6C5F811A0B74A72846898EEF3C85BE00D01094D54C48F51935DB264A
E79F0E8A08B5657D6E30CC2854E7D43A1F18D35521775461265EE101899F60B6
9B1CC0D96450B78DF6065CADE86BE3A01DE2F3D4859FAD6FB27CF2AF6145C923
E3FF07B8CD35DFDC7BC8AD03617A23855940F432BF90742BF589A4C14ECF696D
C0DE44698847349FFD50E9BFFCC4C5E02243372038EA53A1641F998714E2A750
EE674D3377242900544F3EBD2D4778B3FE4C685F1244E9B665ACB8DE844BBBF7
0F3BBAFA1975A9981EFAAE30AE236D637E49075B791C1FDA5EACC678EC462365
C19063CD4F38C34A81928BE4578EDB00FACB268C0ED8CC26CC2418CA09C29A1F
BDDE5B63FB4CDA75EE4138F8D7D69F7C5116F76DCA65394DA88F25A2B7750A97
225A5343BFA5E6234CEB3149F83835EAC261801B5C5805241D8C40B829D5F124
30DCDA299F9BEF2496DBF4D38490C6C4DBBE29F7B2A83AD84ACA20199AD77768
012F7B0544D391C2C4317FA16790393D3A67C17559F9A6591DABD47023AC1A45
5715789A68144BBFF0B7A229CD800353E2363EE992131CE324FF774CD1F624B7
BBB2C81B4A3FF8606FF9387DD359FD78653D1841FEC838C268BFB050D7D4B036
5129D836C773A38854156174C0F5ADFD562F5202ADE986B4B00D49CBF4620B99
4580C0560597785A6428678A2BBB00DF4BDC000FD98C05041A18B7E9E7478AC2
3C8A360D0F7078BA06B5618980C04BDB1B0DF266BE471010E033D1F6B6560D43
90049890064E74A75A394C548E7B189A76B157B77641B194931AFE1A88678CEE
11445E2944A8A41B7199244723311726367A2A192E599FE476CFC45CC88D7578
D8BA78FDC107AB9238F2AA48A12A720044EAAE6AF8611EFD09A28103BCB665E7
B53078133E2BB8E059E7C010AED5521F4C9507830C8B8511AD845DFB7D8BFF68
274FE73FD1B108120DE00E3C4A4EE69DD1F8809E0FB5CC65D95910DCA646D287
5E7D2D668FFD8D0785B39CF2D6B1126CA1052B1CC00FF3AE4730B4AB8572F7C1
1941552C1734386B3E7EABC6B4BEF53EFFC35BA38B0EF5FCFD1C059E7C4E7BF8
57B225E3D37D64B3B43D99B92EA6FBBF6346FEE4DE88976885D8FD7C76DE829B
EB0938F15179A0F109BAC454C4962A284623F42D8D226DF25F53643F40BCABD3
77E7F3EA547C28FCB8761E313500EB7364C37321321A7FB481DC787AB0D0AFE7
71BFB8542045C4E84A03433FC38CB60DF39B7B080621192A48E35B0B212F2C27
4114042F8A73C66A3DBBDA4113562F3ADDF4460F21B33DBE5B8CD8E4B2310648
D905703F5CD540DA316B5E4976425EE319353B499FD3DBA03EF6E49AC4D07730
A59352D616A707760255F39F16EFAC6FEBAB2291D50E8E437F5451A455098865
7A278984008B8CFDA2D375E1953364CC3B429EB7B9891560EA1FC0A59A5FB3B8
B073E902443D99FD929580D459E54711B2F5FD79163E295F9B9CA637709D78D7
AC50326FAFBC88F4FF8F6656A850E4060A9FDF26119127579B57C01AADBD0435
D7D7106FABCDD995842F0E9A7B64A2F93EB1C047F64EADA767C29E351E623573
59439D558F6C2FC4E7D84BF7CAE6D544EF9D88F8359256B45795BC6E13038FD8
27F097CC00E65A3297ABFD69399C0DA45389036E461997F404811D1FF0E4B7E2
57EEE2F1F8F47E4C4C630C135337678EBD0E3C39AB021DD556EDB1E1CE8B47F1
6BEB03F7AE2FBD010B8223CB4C5F7012201B1B9062C7CE402AD3894658627134
F2F409B4832014425EBD675F168BE7392B6F91174F411F088956AC231BE2B888
B37B9EB5381D6079E42B16F4D7723BBE27354B091F0E7EAE7F3CB3BEF0F2739D
69E75CA75C18F2A4CE1B9DB71ED3BFB546C0DA43AEA298D5228CF29D28A7DB17
230A3563360205BA3DE60B374C4A77B051BF6EE69594A63CEE79EE753AF4C37E
F4A6D5EE4C3FD8E89B14A8F3407AB48E0B30CC1FEFA6199B8A3836416BF65E53
DAE48EB9F3AA08D8790665ADADCABC4C5EED1433A464F737F8CD7AAD1FD8D174
7FB54E71977C99FDCEAEA386E276ED9B84F65FFD03CEA47C9462E4FCB4910EDB
7806E090DD0F77427E5EEDA3AB6F778F33A374EAB5F8CC670DA65C360FB6512C
EE65CF00623EFDEB6962F0F2EB6F1CADAC912EE422BB053A1D4F7A4C566A1D14
CCC24BF3D4B001711021B2157E93B9B0A128A17FAEB1D3063EAAC94EB34CBFDF
2915D70E93F902AD8FCA308A1CF611A234684FC78A5BCEFDE4E81F0A6F537D55
89BFC998D8D538CC291125E0A92AB3FB6586447E85E84E6E1E036CFF9E7D6CF6
E88CEC3F8F5A1BDB8089EB9BBFDF335A53EFECE27C53C87873D1E6C372078117
F75548907D69CE0CA07D658D34DE08A63AB714709CA2E7F2643320631922CD67
6BF9A4475459B491E6B0CEE8BCE9396207AD98A13B882926975D7CEFCBA2D973
ADF4ECC440BCCD255FDD5F7D7D25BEB4CBA3B5124E928BCB73EA364AA588EF10
ECDD8EB063A77C3FE3DFCEC3D79E0708782D3BC0D7603E61D766FC31BDDF5936
B95A2DB498C5F5DF692E6A3EE841D9EC9BAE8DC7DF2E03144903604DEDD7CC26
34A462CB684B7F9CBF3F06A34B646BC8B229DAED5A22A24F4AF67D4594770688
49B3E763ADBC9B7A9D6559B8604C00699EBB249E6ADF8830685CF0BEFFE548D2
B33564CC16BA52ABD7BFCCBC1752922E132AAEA0A481BC9704627B6A2F346369
FE7AE2DB191802264F3C06C2E8854397968ADE38D43C2E7F93E70F918FF96C0E
A9831B3ABEB386463B67B9D36BB018BAFCBF33A35DC7203106790E648D9AB756
3AF9E1E9ED04C40A48EBEB9DC038925189B7B127771E46FEA006D6D89B0F4C65
2C0C38CE598CE8BB2759A822DE6EA72486C1D195CC79E6CA4045B84A6452FFC2
7A876F73A410A5F869533880B17EB5F831F8DA5451D3660E074F5FEFA633191F
F140A51E3DE2EC555352EC64DAF6B3CF594C0073764A5336B3B67962CB022FDE
3C9BB99F07F86299FDAEE3411CF1A4F91A5766CBF05AA35CDDEFA42D71CD2CE7
D2DE5C774DE04681707131092A22073CCAA0858D569F27C1CE94A64A231A79B8
16190717D240BAF25FF41F2E6C159EAFB6CAEB506101ED1A8A82008DEABE6C80
409B50E2011BA74AD764BE68B66694BCC360958CABFE32ED1613D182AC0384B8
15AFE0DBEA92448FE49C728AF9DE5EBC1C51C61A474709BF414F3A1DE1237A3D
D4F425B3A043F87EFB6BA7B1A602B228E2AE8656BB895F9BE6B637E9C2173EF1
1DA5B53E9FC8B01A7684C888B6EEB9ED488FC4C381BDCBC4877C25363D43628F
5003020540364BD6F6FA72EF0FA280BAB157D35254D4A5546FF0C8EB67425617
688AD764E7EDAC064CFF20049171C18CAB31D30F185F9DF685F10E91161256D1
9EA033DF3F37C580007AF8E4439A4DFF86C82520F881DA429928BC45147960A1
950F0C5C4ABEC7E6DD92AF6A93D4A7219BE4BB6D65CDBD0039C17D60AEE1AA02
9DAF6E5D57A3ABEA29332186C07B2FC7DDCA6F2CFA121EA80960DEDA29D33814
9AD4EC9426625CC3FF391197A54ADE1A62956687347A2BEEFCA662A241E4ABB7
9270EDC2F2C8B6D5AFFB5FD0092048BF68861C74D1D154340F46D0F3081E4A66
0E4949662EDC6EBF6C1EFF6DDAF7FEA3AC964176681FCD59E864B8EB04531A0B
431F2880CC8BE7FD8F401420065B69B8F6595E7BDFEF80BEE815C473DB530B55
6D229CBB7C239D8815CAA16EF16391EBDEB1727EEC613101BEAECBD40B2030F5
1AD0CD34FA72C37F2E9ADB3FC31435D6B6F5571B56525146762DE99004A931B9
7CAD962B1686AE3E48A682F46FFC16C4CCC245EFD79CADBB1A13A42DC57AC722
29E268FDFE5744A5C5BEAB5D50B392B3C454ECD8CA540D2FA29A55121AF7722B
A87166B46703521153B77AAFA1C9BEFC71B9D57918147B4F8EF72DFDB177ED19
635F26BF0BB31D25C0C2672B18B07E401F953BA64F0EDC3AF0013F6445588FE2
3D1E4D338689F31243BEFBD8FE3EE2D8CCD84305EE636F9C01B9FBA95A3C54AE
7716
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/UniqueID 5000831 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 64 /at put
dup 77 /M put
dup 92 /backslash put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DA3EA18ABBBA3650DC361C2E77
EF9F97618B0C337A906FF39926D2B0B7883ABBA650816C4C6B34EEA836994EEA
AFEDDE56E0099D0E09EB88EB093544B9BF4871200746A0409C475FC4232A38D8
F3105B0FF44E4F132378DD12D9E796412FD0F9478322215E9F59E69396C35AC4
097C4995B60BF4D8B3AFD0A002B3A6E4FA114131410D5658999B86DFDD3005F3
AED1FA8F077AD1F27EA249221585703F20FB70E37A26C6C3F2E101693C94612B
65BF89F37AA3C10A40EE8E49915F1A1B95D2193D8003DECEF9D76FDAA33B1AA9
CEDCB21C2A3B05747FB3ABDBD904B66EEC60CED2867442F5FE445587EB8C6D14
87A6B1B4871A8371A7ECA6A159EAB295B167CC35ADEB8512FD0C237421773BE8
A081FB687F9C5D676F2944DE6E6B639C37E8E49BD4A6F0903E0C31EAFC4C7ED2
C3C67E71D8BE2B8D5784E8A6F19A9A8929DF9833440E160945274682F435DFAC
575048CC768BB8F13AA21C6B125E6073611BE138AE06D13E62E7EDE3D0239474
E040B3E446165FFE60E20B75D2A5F9EE021B22256621C290A8F3342F0347B8EC
CFA6AD68D47C05268EE3AC8683F4840D736EAB585C6284018DC94FC103B4A882
ADAEFB625EA966F3877B3FFEA518B809A4BD1844C53097822677903B6D5C2FCC
2362F2A0F0880059CE845D6C94D27A27D153F5B5FAEC605D716922DFEE0372C4
D06A471F50B54D0BD43DEDB23865E6834192E0853A1710DC6AD26C7776B84CA6
B2E3AD42CE60631CD040696B7E046F35CD907E851F95DAD8B43215A97621404D
2711D46AFA4AB01D49458851749E15D20AA1591568EDFF0D4C6C02F7942D23B1
4E15D8A1FED0407B03BE425F798B67AFC7F5B39F3684244E9EC42A92EE02D35C
80AC695E4EC3ED8B44975B7A945882156EF8F2E72380AA1763A398225EA82697
2FAB0733BF42804B8C89FA655B4F6C2219411DDBCF77A7CB688478A2CCA48168
D787F961507944612E704136F85835EEB203378E45191BF8F56FCC8B4FBF54F5
C1C9CA4C1F9BD34ADA40EA07F51972079B54A6CF6D852900F0CD89829FB78747
27DE8091C6451BB83BA12737B917A50E81EE994F25AC1292E3CDE8F8E929216B
A2C874DBB9D437A667EF8A4FEE6B8A32E364FFCC6C5641C25584331C4BFA97EE
3D7AA6F26CE5C07B311F928F46B15A35A8CA00C1094CA8B150B261E772700704
29AAEDE204F6195F072322BF86C75D542D0E09021619E0532C4DD7B4701ACEC0
2ECDC6F2697CAA682E1430CC4928E3A11665029E624E769F2BA0D748EB119B22
23E441A6B1A2836564CD5D1AEC5B03F412BBF6B7FEC5A012F6C5C3FD626EBE1B
0C66A068453DD157B162EC9185B6A015B5DD59AE0751558D59ABFA9D218F9321
99AF3BD13F65F2F5AB1D4552331FCE9D5E75EE053C7D3919837AF9D5C71DD197
8D8EC7F019D3673D18D23619FD243F5BA81CF94164790936502358BACF891061
93E4BEEF994BBD1E0082EEB4D6B1B5BF8ED5A465BC9CE92ADE491593FAFDFACF
81DDD1621D159BDB6121D7707AD3503FE880FA40399C1A69E208D9696C52AA79
AFCE7CEC77AF91404F67F273E3C7106DE30A0B1ADA684781D65532F1223403BD
4A6F427E00978A13DE84100D079519904FE47FFBD7026886B15197777CC5B319
771A048239BA6A77CA50CC20C43D5ECD105196ACF14C3680B959DF6993E085CF
2CCEB8304DF4EB663577DC8EA72B41ED8B12C613544070E5FB9CD63E5994EF9D
879BB2E5DFC52EE4252EEC7C38C19870EFB612F151BB7952BA0E89609018D181
08E1E2C575EC59B51F33340D4BF4F021BC493A16EF8F79FF76AE613394304CE1
3A3AE7C3FD7E5C1F74614E477E225DDDE72F9EA279BE68BB46250EBE6D041D10
11F76DCABED2ED83391EC451A1C06E198D5C6BDC09A3F626A2D702CF9CB4F903
2E12EA7836814CFAB5D88931051DFB47A0999BF1041A4DCB7D16F9B179C0C9DF
D717DA5B65BF497AF5F495AFB0F495EB493B59075647BD6663DAD907A6FF5396
B526AB2DF59710AF1C3F73458843F3479B3143781CAEA0D923C01391F4497C26
77010F7F584803671A88755522EBCC2E424E08EA8214CD46471E761E0C9E5443
5007538476BA31DB11AA6819C8FA182FA28370C0F348360AD1450A3FD391E654
73961F26DB521C2F285DBA275C8547355AA805B594570EF6BC82B6FEA17D564D
DDCDBF71552F62C85FCE118097005C985730CB50D7E67056CCB295B88B7E030F
1A900F658E65A234A6FAF0C53AF41563783308997552626D6002F807CAA804D9
EC0E8CD160AB14E6D86466A4F709F6A9F41C0D4D861BA9E1337E9FD59D1C016D
76131140F3C68067B81548E4FFA3F9C23D0C6EACD61ECE93D01B7B64E0B32E26
1F8BAE4665F0A8E3F94DB57AFF48F84EEA35486589CFF3664488CED3BA661E18
9C616CCA2FE8DAE9382CCC3C7F0EBA26E8842ED1A612C3708C7057B1F27BB520
83896F3674B3D68D618AD8464B81B687EAA60BB3296A009072671FF2A6418098
17D8D35A84E1160D38F25551F57175C61D38561A686F50F3906DE0F423A94F24
FDB56CB85B59491D7D86655A307FAA9DB29DF6E2F9B30BA21E1D0BD130E65593
0A06A80776A2A23BDDA3B60F32108AE4AFF6027D1D8E81CAFD3F136AC38E89EA
419C83FC3BF4C088595B2DC209B6FE4DD598324779F22FC5AB8391D621DB9A7E
D3B647485E124F9DE71BD4FD722E16B1FC341B0BDEF50D752D5480AF9C8673EE
7AA6DDE0C81803D2016AD901E6A719A41B922CF57A56E6DB8F92EC4B713B0BFF
202187C2892A23DFE5E7A152472C8E87409B20DA94CB1F3DF56753384C7D55BC
582224B0040E9990F1B192F041D3282A3291DA0590FE8B6B2A409818E9CB83C4
713D0492F918A4383888AE7C3E275785DD9141D6DAFD140B5D3C78CD70A4C8AE
499A2E06A07295BC477344FD94330D16CAE4FB69B1B15A8C737C5BC2B49F2A38
D4C7BF28B3D2E759C82CDA113D70B6B6907D03CE85A3001E31FF039196B3EE3D
FAD55DB3ADEEEE122482F87852C2F324FEDE46814EEF1111DEE7FC1E506A291D
02369361C8FB6F9CABED97D2D5274A24535984C7D6CF30983C6432E7BDCB7DFF
DF0DE9B2E9F8790CCA4D020D456490CC70DB72F413DA459B4D84299B55FF9321
1FFAEDE90227BDC10E5F42686E963B6C5A2E535F4536816C99A125D998B66486
BCA9D04F7E58CE3038006CCE17CDF65CF86DC8BC5F26D063E765457D8D5B2802
6DD325DC942224F8089B45FF69D5DC412287446C6306F4C3B77253F6B02A668E
3BE2CACBEA10127D70D65F88EB2DCEA203AA5AE80C929DBA5310143C6AC9D0E3
9B6711B1B4C8F79CB10C74EFD515BF30AE5B133644CD4F5C1E6741CFEFB2F853
FC13DF560392CB3603357838121049B36A3C6F3349E6BA39D975315D61AA6199
912D1CCBEB76BAF60C93CCEC0C9BB38C4028857B58ECE7305B491C84031D7891
CEAA5002461739216E418B6F589D1BD46C3C288FC20581B11236B59804628E38
AA719F10DFE05E1BC5775F7D2EB053E7C93E1330AC1720671C0F77DCC43D7DB5
EBC98FCE9798FFD04D476D02957E1D5CBB3A4F47906AAFCE9DD13D903CE3560D
38DCA5F740CDDD144DAA0B59E834274558E2DD2F3E1D2960EDE0569CDA0C9217
85C52D9BC9B98A6878D028A3DB429DBE783B09CF3A3ECC278BD6278DD2F3DFE3
65F9A26E447172A8ADE4A2C50CF9DDC7E28372730B50B7EAE97213571A54D75B
0EBB46487B8436F60801ACB9F3F9D2B0B1E054AD0389899A177325E218150497
C5EE87FA0688BEF8EB296A116EB455B71FFB766C433FBEB165666938D0101221
C1469E0513360A30767EFCD60C1159E1766740C7E8A9C77AA26EF8D5594A1E2C
D59E6B5AE983B10BB18AD12AA9CDF812786A56C28F81B83D313C936CFF3D4EEA
40423CFA0E72C7F9FF5E75200B0CFA829654DA818930F91345BEBA6ACB55ED16
9A758DBBBD0C2A5A498921DC38338D3C0D69BFBC515D67FF9C769D2D2B55460C
F86CAEBA4CF1D4C6AC89D862BF66E05E46DF4617D581BFDED03A6147741C42CD
162EF2C8FFDEEEB6D8F174DE20915F855E2D27A8F862612D705FCADC89A6E426
D0616B013B04572FD413A195201E00CF93C0E3F6245E3F9F3BF3F01E7C8B2719
D9BAF68073945F2B940E6F07798A2E59D6C31D02CAB7980ECA0EED3CF6439FD2
5C66625E8067BA1C40F53FBA0EDAA53FA85A1823D6E8B6C3E71AE46FF13EB5A2
857A892AB7C349D431DBEB7C53D6A7EE33519EC0FBC140E46941C363BF84A4FA
E3A49CA35745D22FA89F9AA58EE7A1EAAE5E7ED7E807A182E0071182A85F1411
5DF5DB76247360677171F49B04E51E09FDCF33BB5D3F2E3E9AF2A30C9A359D24
ADD175B6D09EE4975CB0B123628EF6A1995215C7CF5AA05F85BACA90E1D30096
0D22C6EB987762BFD81F55018F597D8701035ACE7C00D59E0D10678B6110A691
82FE3EB32F970028E5AFCB3CBF1C44C72283DCEA90AC383E44DECA8913DA1398
14BC0C624A0F7D559DA85CBEB1B92D579BFB9334FFD9DFA26E6F58FF8CEB1171
98593E45F163F6EA0767A788B37384DEBD662118EB346A64F95C5EAB55F70715
AE05B79D9F3AC04274B570C3362934E40AC7FB98156C157FE45DDBB3C2803DF5
B574A4596841F7D7797AA8BD8E1F9385C419D2C56E3F9AC79B968B48089B5BEC
0533CD6CFF25607A42133FCB1FC8FD435AD59C1C5E7BA6352B239618056D9DED
183D323E5D0AD8BFFD871F9F82AD7C87BF4CAFB29D01951C8A78F6CDCB5F88C3
C604A16AEF53BB8115892335BA8E2D967CE856182C1023A9A6B88023D17A58F8
A439D60464E27061544B3AF011EAD40065CBB33FC157518D34844A5539FB9BA7
821315BF42EA8FF7D2AF96F1A5D75DDA52431C23F574B30189A9EC13820EA63C
8BFE4015EF7CF7EC96021C3F27F89089AB8E7B5CEA37750474DA41D25A4C90DA
D3ACE94C1F03704BB7CBC5EB8B762E15FE55DEDB015652559ADB115A5492FDB3
4380E82203136148C9C26EBBDFB988CCF1641B9D56DFFC008CCA41063EE1A481
F469CD9803A7ABBF16601D8BAB3A1EA50CD71909E2D6B06898F06DDD95BD54F7
377B5D3C446574765108E211D4F4F13B2509DD7C4A4902F8C535DA3CEE13B411
2D1EE29455B55ED76E542210036502DF096998A216254F95E73A88868569E0A1
A9612E4A3D18CA41BAADDAC8EAFD8DDD68906D8B7D52F949036E4DC00CB1D26A
3958960886D3BBBDB1F2FB0B1355D0A82C8CB710837D6440178B397E685A3420
750FB04FAA3CAE829EB745EC26CF3D7E88D4853F58F4228F02587751EDC7EB7E
17337033970242D895939A30F0A0C215C393CF45C62B5447339BDEEC3EC61C00
DB9503A53695F949088B7B3B3E60A04BC4DAAD61EF8D39EE254A19F24544F8B1
A1F55AC70AD82FE27CDCE3A2DB38B2D59873D965D2B2DE443600ACEE1E306D43
81087D11506A3E38EFF04F7F3E8C2ABBF0042CAD6953D32C31B7E04EF7915803
77874220843FD227BAC8DA514A2AB79B918D79707F4918235F2641F8F4C750F3
79A77179A1BA8F45C8385B2D7B1FDA03B9C4D3BF7D47E5FF127017F306C373D8
FCA8A754BA13013D5B737FD3F6AD52E256B526BCB4635F631B785200F69A136B
64DDFE4A13C23E7E5096D56424D2F774C7BC11A69A4324049984DEC1EE34F30E
EFB4499BFA5935A19103101CB4A1EDFEF88FBBE7542DAC102DB97D15554EEF43
CE28D6AB8BF50E4F5F97D9C802489C3AB3EAFCA8262E5B369B28D45E8800D969
F6B1B372B913ECA0658067767A5B13E777D57A3956042DAD7B48AC1E95332F7D
3551DCA19AA0BAED8AFA03010B884360BD70F16F1A81EBD0C77BCECC72A9A353
017839F0EDC5CF1DE920BE03212A80871108F08BC31FE98C4B8751C87B5E574F
8EE6AC9842B54EC9B23F5A7549B938FB729A3D2C162AA8463B6C6BA2D1DD2CF7
C60ADECF28ABF37C3F2E0F4D54BCD22CD292DFB48878963CAF5FF1A7DF50F03B
934159DD3BE2FE5B50E131A13BD08D044EF5A418F25CEE7023499FC1B3C61940
FE055BCEAFB6312D65614102AE871E000546CA8E4A3AAC62CEF2F638B0FD7264
2AF2AFD7F1B500C50A76B20372BA181BC2BB6AD0E2A7A2663ED1B8E4C0E44397
A575F38FC5A427CC0D27591AD571FA61B9F31BAB2777F0A5BB9A2AF54A73D854
0726A9BC23C6B3C792929565986793B8520D4D72630B33815E51F056D8A6AD18
58435DC9A06A2A23B468D9C05C76DFAB48E6EE9E3BE12182B1AFD812F0452C9F
BB8C1E7A888EFED68D909F08E0DBFA8BE587D6A927C5166F91FF8AFE71A9B1E9
42BA3E53B51A95DEDD96A204A719C7204A0F6CA3CF39307EC7FE479A88075416
AB5D77CB7ECC9F3AA9EE9723376DAF3DA3CA92DF9C70337E1736BE06FC429FE0
6F918F0E69AFFC22A9B11B45292BDA69B3DF579B973EF33A3CC0EF4B9596E015
AEB227A609C7B3BFEDDC7E1C6498058C4F856791F7AA08BABB085C984A3BC775
2A86FA5AC7392E4EC3191E2DD926E6E60C2BF365206695FFA5E92735F61105B5
250125ECA5864C0B223AF7C0D43936D6FB754DC3E21C25984CB5511FBA3BAE99
55733978ADD85AD01B5D8B2FB3F2C02ADA7C7C7F6B6791765A45ACE6D3C11491
EB5BD51ED73B4A8AE472E22CE0409213D27BDA1ED148F4F1CBC4DB4D93EF5514
639290C7D35D0DFEC530A88654976F75D55762BC5FD3111AD4683EFD7FB0EE63
9C2FC1EF8B756190BC8CF5623DF5CFFDC85F3439AE551B84EF64512885DE4814
5D4AA2454D17BE97472E2F57B987BC560481D9DCFB8CEE24D1CC7DC22DA23229
D03C57FAF0552492AB955A3DE5C8CF8587EDB0874A45FE4F48747441868332A9
D9D3A9BCC8F2231B2B8B7F471BF970A6F67524240F4E31FFBF6172887D74394A
DC37DFDAE7F486C9A0B5DAF7D5037627433BB08E68FCC886ABBE5301CE8D7912
13EF3FCF78BD7B88EF2BBE338101848B5938F27846B15441A16922FD54B68139
BC2BA6BA8CAA96E258C49B626B11148E0DB5CA45552F88FF9A04F5C7154C406F
0879E536B614F99A66F2C36B14266E4B664DACF0D956D3A57E1104DA11D461C9
B5BC5BAAB4B6BA6D321429CEB33B52C8D0774E50815B0D705C458B0226A5BD5B
B0297C0BA501E3EC7E1BA6207F821B54053ABD123E3FC975FADEBD06C63AAF1C
03D344D7A39D088EA485B017A5F55174FA6AF8CFDE0DFD0A5AE49C1E0BAC7643
09CF69BA0EBEF8E9B3DB85308CC72FF1F358BC6078FBD73E746777C83A10677F
E06830ADE99C6BEE37FA781E2AE734F3AC16894C848A938106CFC3D6184D4CBC
9DAD701B901B57D0851957525B5FADABB530D18C63EC242644B816EF22FFF24D
20B02793B8870289A61F0A080EB090FD5A9A7386AF6D29394B10B6E925D96C83
8635C486D9DE87E4D1DC444432A64DB6B390F6CD4A44BB04E7E8AC810633AF68
D909E2F30B6155E1C70E553FE1CD7D07FA811069E44AE7C97D618D6B98C830B6
FE3A3002ABC00F29657DA057E3959EEBD259CAA5F31D98C11702896EB64AC9D7
E2B599E8E9CF0E27A7DA3E7F9001413812A2060384A18F8AE8B30E261E28624F
2216A761F3F70D2BFB05362CCCD0C6D3EFCD00F38EF1E96020405D835FAD4E10
B002B38A08C8474778C59E74845BD79318FE77A1DC8834E2485F25852C297B9A
2B2A4C947405AB75D20A84132F1FC2EA71CC5D801701A80E220B56B0EC12E869
08471D02AE91AAE88BAA54516ACB338671A80A433605AD03FB220ED7856821A3
93A50BABEDB1948E75FF4689DC5B16F514D814CB4CD017B47A12A034E4D51BDE
4A986520C664E23510718463730BD2BF263CF81F7261144A722E9A8A7EC63961
B72594EAF2FF865E051EEF5D38C6A05B75A53620B0CCCD1B5AF93BE664720985
BDDBC8DE96151AFF1CD17C80E03F9B8954834FCD7DBB7829D1FE1D67C2BE79D9
278B10D073EE359FA9AE417C87D5683CDD48413000CDF6B656AD912E5EB0584A
FFF11B705A46A52B0BDBF2CC4FFA81387365055D876EF3254B331CFDFCF5D8F4
6FDBEA404943D25B5BE021274C650308A4C835363B72144F2BC554D92F733508
745A440DBBC2074499942502040A68F1E182CB238DC43A285EB2E44496A8920C
70C71DD637CB4CE80C0565DAEB5F6D877E62896B6987C07EA41DCBD8AA07F15F
51B6A79AAB50DCBD60CE21EEA93982809E8F4E7F236115891C3326A1B09F970A
6D8546E89E3B586C646C1141C66D8999356A3543C6D5C0F6F9B79521BDB932B4
8C52144D911593B896B989B0752A63E454B1B87D285B4F04792829F346DFE461
1159DE8154BDDF1D70D091FAC11AD5796185F0572161DB37F1A13DC42A81D2C9
7295129B7D8AF7982D1BD7FEDB76CE57F8E850FF7C2ACF2DCC8BB0570B3E01C3
40BDFD88CF4AA2CF1B1A0ACE16D5A35BF278A3ADA29CFF84F4D163E77B9725F7
33E6B61873363F2C1707FDB8A10256D81DD6A1D16BEB706D74E4E83A3FD9BF28
C031B996072FDCEBF9CE84194E620235671FFBDA5A028730C6459C08F237DDC2
BECDF1280909D7E9DF6559ED717E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /epsilon1 put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 76 /L put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1E24B79433A73BE771A305
ACFE83195EFA1EAC827EDBDDA678979C87FAA5768355728EF195A9456C7098D0
9D501CC27070F27AA426B145218C9315AFEE5B4BB37010E988DF32E2D7CBB3F9
F236403EC9325531A6CF39B45B12328C9EDCC6AF76A0DF223531C12CDEC349D2
325D6FAAC3C41E378245A0E017C3352B9CB7F2A1E4AA3D9A44E39D5BCD4C4FB8
7316BC327ABA5D5F5FF14BFAABD822D9433F0FC61DD06BF1493BFD06A184A94E
7EC0C67DAF6DD7825A6CBD56048BE3943949B1CC8EACE2424FE4A69CB97F313B
D84E9C59411BBFE163267D4BE932D830CC8E42E2CFEE0EB76A036B6D9FFACF7A
F3C0EF69030754FB5C0DB9755DD7292B4C730C54C0F76DBA3E6C934A72101EED
2901A35F0E97C666A0F038A9C215D92BED63C96741F3ABD5F9F2C4B444B6919F
E7C44D0F515535CA4864DE403210E35DE285BDCA6D19C77582D4C1390006F9DE
CBEA7B882AF38F42B1571EF3731FCD943CD830226A248408018582EDFEF29E9A
04669AFE475D7024E86F51F136F36FF82EC005C37D0878A06C8A1A0E2801FBA2
7F360C9B5ECEFDFB060714B514D154B576C81EC14C96FB35C17F0366BAA5D380
C1AFA7458973C66C877BE2F91E86395655EB64342E5FB661B18AED902EC8E281
39848890E16B162178D1176159BC1063DB3004BFD2FEC9938C3F94379138F209
AB80C495AB3121F1C5BE41DBD3CAE4C065149EEC89F7413948D7E7C994FF5C90
54EE02EA08F977DA5D34D525BD8FE740139F536FF45032A48C0A4D121BF24125
B60C9C72344A9620A42F6A14CA5A175233D9E0DD87D2C8F8A6DCFAF6504FCFA0
4D7F65793AB99295FDAEF9D5C6CCFAAD37018CCA129A9007C71A54221F011DC9
FE694EE608BC4F53C6AB29F5F62A013C7BEBDA502B95360922E11E9BE18F73EE
151C91D7942D284F306E47F443EF2A8C691272ACBF8EE6E7EEB066457A535C13
5530113144F40683DB8831840BCCBF9D7A95D919705F7C8C071F49371F9D9B73
E87AC10C675D279E2441AF41F05C1A664F44F2D213CC5BA59B72C9AD40741510
C79B2366312518A074F33020A66210F4F8E326D6AEEE8542826F06A5FC351797
180A59FCB1A180C4DBD65E75830B219FFA6237180BAB48B3B8194E8180BFC002
3667EBCCF4FC39E0C84C1A8C1D01D2E1E0890E1A6E21D2D084569FD24D068E90
C7F3584C14ABD4D00F544095E550157144D055924CE883D05F0D7AB1B06A93DF
7D6416B208F00D683188D55D96F971C4A1432D6A20E12CDA7248EA4C3D179CCB
94A8AB10E5B6EFDF55B879E183F69A53525C19E0DD2B7E627483EFC7345E0AE5
E370FD6AEFF7F47FFB45A6FB80ED7B5749A51FA899B2B619C1754093FC25478F
5F72A278DC8D3DC4CDF0AE58065E356B7EB06AE381682218B08091E69A074065
72F097EE8717A7AF2513B0DC4A7306208127F1FC35DB9C07FE0A238F7EFA24F9
B285BEC0916F9DD618D6CB860AC4FDF9938B091D5A58921C74489CFC38B39BB5
E46C8FF704F310A206161F3FEC64D1F7645FAA0D73386BA47CB8D26279BD3AD0
8B0CF942157068F62CEAA0509216B21ACA775DA11F44CC37DA0A2B55B0791D7F
3A52A0570298196ED88161206C266DBAED344EC62FAB10783BFB21CF048F75A9
06ABFF6896E5CA6A600B035BCA131AE0875B4AFAC8465011195B707B8E847CC3
8D5D73F25E2B89CDDD9B2B023052C0A9FDDEF4FCBDE3DD58077EB59C9050E382
66BD41F82CBE2689475A7F0F33F34644ACE9A7E1063523104D3639B6A73159EE
1EFCE7C8073C903CDCDBEA5320A3600D40196149E644D41AB63D2A64122F8239
27EBA9DB8123613FB58A2F87BC2EE17974060D2FEC1F218A06443A26717E6EAF
A989620EFFDC20EE13D71B51333D3498D1728D678F247F9630549464FEAF5868
14BB4C60ABDE46F6295E0F1F9CFB0042CABA898441FBE5F349C8B715F6EDB1F8
1C1BE5D63959AD1D694312D7CCA89FB853B4FFC98308307375B1977FDFCD6578
2D50E47AD1AE6A33F9E59D0201F1C882CD34887FAC0CA2605FA5172BE2E0D4BE
5E317D0C666E7EDFD9EF723ED64FE5EB89CA1EAA8EEFFFE7B1DC12BD59CCB84C
138FAE80730D8BB73CA139B4AD293CDFC3BC7BF81AFC42BAB882BD8520C230C7
42685421CE3D5750D1E72A7FDB795A8E3D489807E5133DD52963F5ED3638AF75
C3DCB9B6C605D3A92908F43F25D7A8159C1F8294DA9204B46DB37CF0A58EAAEE
C1A5B580CD3BEE9923ABAB5F0525FC9FE0257FDC3D58F065280FAAA128EC8EF2
E59A2FBD3F7D85BCAD11DDF83D775F1217F8A8716E665639FC2C05B871E0BB1D
C10BB4EC74C787172AC1A2181A7CC9C61AD58D7DD84A14D7576D41D31AE419E4
72F138D6BE12322EE4DB542475A192C6E70E433F79E8709756AC0385312FB99C
B1003F3D07BE2942395052659A0A1C64CF9FCE2F8E22201E38EDDB1F8A686EFE
A59FC2677720036D70FDA380959E4F8348015DD0B6731F4A47B4B442956326BD
E2F6832C59B015D984430B7FA48B5D185D75DBEC536B69434C08E6A3671CEEB8
AD2F52F4B6A9278A7FF8C0CB4E133B95918B3AB505B46D6FD4D7C01C73A77844
263B7F722A9B07D5D2A6F6CD65CBC2C3C8B66C8917EEF38879079A7D71EC7DE6
0A160FD42B5303B734A26E5444CA99C4410B9AFC76AB26A852B0C85EF6A2AA90
64EEBD6ED4AF951B0B22A2C31E9FDD805FFB66E36B95AF405A4393A799BD47BE
E61142796E80B6C3B7AD6A9600FFD720A9C956A420218A194526C2B04D5DD62E
697FA6AC6AE2BE05EABAE3FD7915531F4029BA6AF53C63FF9206D48F03A6DFA1
9A1074C1D1D02F7BDD83ED4C8E2A6353B4B34FAAD34B65F245F3C8B98776BDC4
4952DEB517352A7842E90089603338E0C280B43DF5352A40A7020CD71EB59545
4BBCCB85AB9CC227F7E95209E4EB353E4F9E98231C308968AEFC6A4EB3E3A609
6C5E94DB60877F0D1727D0349BFBEF6258E8A5F46269A84DDAFED4B78F064ED0
D99FA1D4E341E45B03E059F50FE1C431A1FD4D14676CB85CB0FB03F66DFE8227
5C293E6D9DABF0145D6824F0511D0F369FCF3854E7D5B507FAAF6C65032BEB8D
61686DE734D9F13EC7A7F21AB3474BB0367F16CA71D8F06C830D65EB8912318D
8BB64FE01AAF5FF8D773FDB5760040D49FC2D38EB5AB52D15B571672FE54EE02
D880D05C5E0F0EBE24606641E99EED133014C3ECC133622ED1A270722F505E5B
C1C470C4F7A005A8AD0B5EEA7350C5482BE1F31C14A11C45161FE4B75F8C5BA3
3691AAEB454E0F915B607B60D8E636561A9F1C4738C047162681D57F1B479EF7
8208F87957A6A15FAABF2E37D3DF7267612534E64A76098688AB03CE618143DD
B8D1BAF0878D500F4065DB31E5E5BA2338AAADB555BF5DE987597B09EE078F03
94D27142366F940FE13B7AD78D2BCF579EE0969378848F46C39059A2D71ABDAA
A71F3D2DDEC42402F871E02C6286CC570F977981DD76C924D8DD97E8A28E79FB
4AFEC8E5A6868742A3E8AADCDB4D1875EF528557278F9CEF2A46C49C8B726460
D108C223928B6493FDB41F9490CBA344378F0B3D78F997BD79ED27E0329BA0AC
F22DFE8D42E5A86BA41BB83894DFE914486D128D56A1EB3EB4E9F76557B5DC45
4EF3213ED60BBB9A9EA5889B41E5FF33A76C08125441FEFA4C4757F033CAF0D0
6EC90FC678F55E074AFE5F1E12DE69D2876B89082050E1AD795555705D9B862F
F9B90B69024F75A741AF6468E37195843B780AAB01A1AAD065DAA8DAD2B7F770
C903FC2CFF0D0DD0A40CC09FEB89916B5A7E4EC256933EB7FD20C77BB096D5C7
23C30F2990A0031151FCB01485E4AE909C6113D082BBCADD917ED4BB4C275B0D
E5B778B4100CA8915847C0D82F0E86638E0125776A07326C56CA3EFCE8036C14
40C11D711347D1969755CB131917EFC2149F65ECF3F5AB4400987FAB64E4053A
A69D7A44A2269D8CEEB90E4F073A610A830B9D1420B4EA3A632DCA7A2307BC1A
5AAA9AC956901D3433D439861A724BF5764CD4E042AAA082A7A4FF7A6C621EAB
13BDD4E2316E8028DDA8E6AFA7E6BB259B5E1AA6B2BB5B204ADE056C3D1FA297
F79220BC6F6211025C13FB3EB455BBCCDAB14BD6630B9B43475E587F1A0BC5B8
623C58788518C414B82C3E662DF4976F4E10B908D1AC4DCE698F121A5C4E6E1C
96758F100038AB707DDC55EF0CD0B11418AFDFF7F3E6975A583D2D9BF46682BE
9FF490AB20B006B41EBD0C70DC112ACB95BF3EC8DB7C8A6F8289D5B79FFD551D
9C83DA30C8867368F3110DEB50158BBE6E046F34F81F0DC51C2EC6E337881DC8
46CCEEB4724B0CE2FED0DA8C47935391C1897C6E3505FE921BE6C3B62BCAE3B3
EEB2B97436E564AABE9F96FA8D8C8CDB93F8819CFEC5991C623D160B0A131DBE
2BBFD74C8F780241086A19EFFAD0BD9A6CF50337CF7CB62E0F0184059EA6DE7E
D38DA6AD9371D86851D780582481268106F938838A9ECBE68CCB15E06858EF80
13DC4AB3236B120EF55028443B32627A6967F77E4537611621E2458940B9022B
DDF2C6E45B3B6555D851A363A45AAFB315F416021C5B31E0A2CBE41BF1CCC917
09EDAD04D0DC99726D51A49BF0F79CD4899CDA4D9606D8C23A86548EA3511D80
55103B1018F3E8DEF03F340DECFA8A0070218636D8D2E1DA83B02DCB8BE540FD
5BC6DB2DEDEBB7B41345A014F25A4EC9A60C1B16AB5F4894A78BC7DCE5FA7181
9884EFA32D4C2F3F4D1AC91A466149F07F03DBFEC269A61C95401E4F411E1FD4
ABEEEFA78B3A954844A9E4886BA899F03348F45C8CF08D04BA014D02D857B6BE
85CA38657866340087CAAA1C0068209449ECED61B2B4BA20F7CB044E03F8F5C1
77A1214388FBF35D997B86539CA8594B0FF79526ED36BB4E531386DF4DFCC2F0
D414858DAA3CAE7AC064C309CCE6947D0C5A8E70F69EF2FFD9248E1CB8603AD9
2A7979C7345E23456E827B864AB50F924BE1AB00A9ED01A4032C7309149BFC41
F302A1CEDDE36EB98771EE6EA3CCB15E6C65192A237D21D17CD3BAC0C88770CB
B03A20FB0DBB0B86B3F5E84A13BA1438CC4EE4F51D9DFB3BC5D8BC0B539D0FB4
EA5CAB4B78AF63EC8A6BF132CCCA2CDF12E0E6E35F0D681CC4391F35FC2176A4
8E7031BD1B0712C017358198F1C539F60B15AB2180F0ADE2900BCD9C9D0F01FC
7923B4ABB91A1E35389BD407D8DA33B98186F85C8EB3BFA4F22B9D41FF1528DA
1C94BEA6A6AD14861B94DE0D672BCFB9D281752643F141E00FD012BFB8E10232
330FE4C8BCBD0448DAFEFC0D5424D6EFE7EE2E0FCC2E6B6250FAC4807E9BBB42
8D518C01EA12951B13CD7C70512C46AAF4599239B9F80A8EEEF94B226A866DAC
059142F62C5904461C7B405CA5A917E09C5E3CF6AE4DFC772A60F2B475FCBC2A
D6E60B9B7D469D240B503D49D59DF3DB0AAE3AAD0BA070154ED299DAA093E960
A50B6C6FE97A83D504D27F86C40C2E1237F7AF177F9D6C39323C9FE077F2E6D4
384B25670D1E48472A4E3766DC81282EB425D5E96AED32F61207A9433C18816E
07A5EB0FC2FABA52BB96A931AB5B4DA688E2CF727392D9414FC5AA9831BF4086
01ACB7E733C224255035E2989A215D1AF1887D4DEF16457B419D3A989A0652EF
AF0E0ED40E20235F25C86801E24A89CFF99FDFD2E192413A87DD37C9606C3CA4
0B27DC92D792C6CC8A12DAEE572F57296AD3E1A004949FFC4BAFD495B001383D
F7ADED1F1B87E3F4D467872F0FCC80D9A14BEB541CAE4EAE035C8E9566D6DF55
5DA22100C02B1B20B10BD491457125D6BBBA38B2F8EC377601395F3973FA1807
BD454AD858663E652E8EAD26B4A667E5E34C4363CB784F3CECC6D60394544FD9
3DDA4738FFCBB6A745446FA76D06A170FCB59AB559C419CD89E34C596EF82EB6
891FD03C3BF8E0183FF6C7F58E35FCC9D093AB7FB21538BE009D5450A4AA6CEA
204AFF10528E007C9A8183735D770E01F911C9AFA8995B0DA5E36F3B388E62B2
A45A7E47E6CB3669EF00FE5671FAF6CC6EECDBD58EA0C78E14676E054B371CB6
19FE9922560E81641C45685544713C199F451003774D139B8E8543D683FB72F6
AA4BC1521810C3191F657A46BE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI7
%!PS-AdobeFont-1.0: CMTI7 003.002
%%Title: CMTI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI7 known{/CMTI7 findfont dup/UniqueID known{dup
/UniqueID get 5000825 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI7 def
/FontBBox {-27 -250 1268 750 }readonly def
/UniqueID 5000825 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI7.) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C525641D2B175DB6E
FE5425043CA62CE886B802B23F41D33FF06CB9EAB7DCFEE2AB63C1333D9B042F
B0A32D7634E2BC65BD7B7C53695C585079EBE138B40ED4BC7D06B30C88B5E0C8
E93FF20138D513B24866986C4A633304FC4945EA8A6C6BFFBA1FDCC8F7474BA3
D997548C23060E15A15687E9B58A8D2E2D749776BA364A2E28FB03DA767645CF
34BC9E787E5D3A5B05F67D169D710592108F4647A0004F71159950253FCF9A25
028DBDB4FCDB2AB5F17E49A5DEE3C366C693E0784A4D036F92FC97F1C0A0C08D
E3FD9FB57AA80ADCBF047193DC787C35FB3237AB63613A9244727FB93754EDFC
323A8B936100717C26AFD2A4EC3F66C438FECC2D6EC4C2728ED313AFE51896DE
9BB5E98049A4940FE2EC90074C0EF991AD2073AE06B7AA62C2D6A1E74E72D3D3
739BF7461E7AD856263A57673F6C7E33C07E330A9486B20BC9FE4D2908DBAE9C
1078C36AD01B070C267BE3A1C8D1212DEC9CB71683F464783AA3503DD646FFF8
C0D859A4356E4995246790E5A2FFE5D46CDCE889E32516264498AE92D769897C
A8E5FCA9C15392A3AC0BEE3573EE14EABE243E07F10E33BCFB4CDFC7AEFEAB6C
F62C21EE29CFAA994A575D56C692C6E040FABBFBC5C0C79A23174E728658C967
A64D87103716B3D29D724DAFFFD2DB429F9C60EA4CE589C3B5FDFC57297CE277
80E9A72FFED79394E57C4CE22C5CD55433B3BB329F78F35B25BB3F635DD11897
75C1BE2A808F26E0840D95A04FE7FE0A85B2513745D1FCA46A54BC1EABF596B4
F0344BE1A8297EC0E7932E1C82051868BF9A463ABFE0C63ED8F0760A44DEB196
4643D15E499017B5BCC3D28C576A2E0523BC3C282FC3D078B4F944B22506D29D
8EADCD89A7E73BBA812C34E4D2728C387AFFD3BC4776236A1DD646ACF4ABD7FF
6A09AFC5EEDFC35F3E9A3C0BE49425D85B0E1A935DD5C076062888DA3B4DBD7C
72BD35B29BBF1042EC8A64E64AC472D3E446FFC36FE86ED8B95B65E6756EBF02
FFB1FA08D7CDD1A5104AFDDBAB721951E5BB5D091BE3F827DE1D2667ABFF201F
AFEFEC030C90440D358259A25A2BC111BB56B3E53E5BE0AC8E366CF112C289A5
48442A1E48C0115DF1119349ACB1FE6983D805071DC20D576D9267AACA497EFE
CEF2593A4AC5AF2167627B00C5EA97D125EB8A47E58CD9B213D74F2D37F8E474
D9E3EFE626E138F6B09EC1B90E207C2DE0539CF5AAB4A5CDC331B295D8202562
8482DA317D4BA1404A291D299E0A0F6024696EA9225E4C7B15839F733EC4BFFD
E85B7CE1F0883A5A0B4544E534015E25DF3BF5305682C20B1625C3C6A5700087
72969CBE2D79712C8EBB9F9776DA3D6A7A35C79C6508F8962B1E34007F4F9EB3
E4BBED40B4C76C56974838F6296ACFE974A249F80FFD668AA8159841E46DE0D2
6A5BA7E19B006D7DECFE918E0B792F4D0C04FA774F6B399E165F7687B4962646
2595E5B24DAAA8BB1BF33B972776A258F3D039FFA6CAC49B3274F193070D95EF
B96B07A2C5A413FE43C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E
7627355D5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B515E62DA8609
B45B1BEA5002053BC1F0896E9FBFC00A83FC660BBC5258426108155DA6C00024
AAF2DA69949B5DB8D9EA06A599F2B277E45DB331C6BC2F40660A33BB33FA468C
9F8C6B65CB2E273BE3E076B0C57680E227163C6183C06A4308A0285526E98445
8763C550EE9422B987AF5EA62E89630C007C63E4BB5FFF01BC59793A20DDD35C
BFB5C79B5416EF06B967B572F3C58ECB0A3798C438778F42DCE24943ED290743
6CD8F32177192AD8EF12373CA6E493DA0F045C1CFDDCD49F6E4C067324CA0A3B
389CFF8E2C408D8A4083427D4DD8CE33ACB202800A75E581404334E3A910EE37
9B6DBD1D296C8C164B7B9E1B744A09AAB39963E396F5EAF36D7A02FAC04A666F
6184E9CD0BC31B6C3ECD327960336FB1F9F9EB3B63284E0BEFF29DF468916260
15E6DC9206DDD65F43D75762520C3D6D221FBCBC530EA8ACD715995411F785DD
212848B1DAF379667F67763E6E4AEDE090130D1632153135992A292A12541702
3CCECE5CC690C755E8D6F4FEB9D0C1F5C7BE9E5388520CFB9F705F227E131FD2
ECF6FAEAF05ADC9D7343FCB8CDA6CACF0A89DA6E2F0F58DD74ACD2A670F3AAAC
51C82B11ACF98BBCD1D1DC49E6A8B9815116137E9DE4E3975D3363779165F11A
4EE8B49058750A45DF8D3548CB628EF51A05B36FE8317A864CC5126C073A056F
A1F3DFC27F4A5516782E58C26CDBB2C24693F66FA7BDE6430184675C5BDE38B8
FB08777618A8057F0B8102B14A9122214037FB150322003A0B4EC789F94863C4
7DB0F028D37EBE23863834060E0E7A557B97E9C83B3D1765C08A86A5BC59EAF9
356A0B1A4652044F5757B3CAF077A53D09FAC644D69B3C8FF220E23AC9461FAF
3EDCE217FC3222278BFBFAE76E8A3BE95920C58711CE421E21B3208438871E76
468EABB998E3B8C5A914F2E6D8F3A8390A3F3802843FF261BD4629F369E1E5ED
9A94C4B2724D31091117DBF20F6857873BFCCFEC228FDF1F42DE699A5B3F6633
00EFE62983F273CF97E171823BD3A4B2275D0D7B4980357B1CA613F8383C90FC
080A28C3CA09B30FB156C508C88DA67EA995A4805C0F56A0169CE2F4F165BC67
75D9256A9A182D17804CC75DC09E4195DADA5AB7410132B32AC9FFBD8E91F0EC
5E16F90B4845926B31240ED66CF7E7B30B09A2F0A8B5321E1D41A85C5BC9592B
81E62AB9E1C7689F5F3DD004B32D2F2DFCFF536FA73B708EEB1EC50431F01831
497CF6907E3E0AE42240C1F95CF761BD7C6D063805D473C94371C07CA1065F38
B6B75779F8B4B08993CD240F4ECA804E083034BA706FC89997A900A368D1F65C
E4D4035CA5F16EE160DA90FE84F81DFDD7B89928BBA041CE048841E96F90934B
877CC64D608B2AEC9BEE8B80A0E5181EB32F93463F93E7A2EA94AE70A60CFB8E
94FB7B11A47D9F8CD338296F9B8993BCE0B89AECB520FCE80452B8C5668A7BE1
65484C4F33340EAE118D1DD35772DCA7EE26E9D3097832357431FA2EC7AB1FC9
50E5C8CF1AC6CE26AC96066F5E1141461BC4E9B5D9E8238D6344C201FE1AB5A9
EA45B0714D1BE5DC27C06046BA9A3715129D41065DA246AA3CA2B2C81B1AD030
1218981023F8F5C0C500FCA63C4F745CEC91A8DA9B80BDB28DFC525950F82EC2
E7867CA9E096DA38FF5CE0DE0DDF7033F4CD1EBE11273B1373B76168930EBBFD
0A80E139FA67DAD2DE2F3F5A8233BBEB24354254171B18D4195F613047E63686
90FE10D47434A7DD0C619F2514DC5A46A4075E7B8BA6677E38956368F84158A0
CB37CF43C2E48A3856C0BA0F69BCD63F6782D8475D955566104C34C0453E01F0
9AA0091C9BEB71FCF385D90027C0E69AD0EB7C91B61B2976E31BF9D9AAE65588
498881E5F9AD116E6D4DEAE2182FB848DCED82868355E08D395E1AD26EDB5C24
9B92294E3DF2D11314DA237CDF52A5689AA1FA4E49C4A82381E5C8638B9186CB
633333610FF4112D7D02C3CA9AA6B44F5CAC4582EA66542B552A88598A759F3B
E3DBC0443A40B25DEFC7DC0114E5465FEBC3543E82494CA44FF09613103941F4
6BA67CE6FFA9BE0FE7A71A1BC60ED190BED3C0B3E7A7702520631D0A730231E5
F3B53095017F80525DC287F0A8400E1630A3D92F076A13E5E3D947F9F0277FCB
890123AF04932938C6938D7533D2429E580566681049AFD0AC057B59708BADF0
8FC7E5DF40CBD80F49503331A81A5C56375F5BFB4C4BCA6FC94B7C6FAFAEF6DA
93C704F907BF8558173DAAA78588CD8C7D1B13F838AE94C4E5152C29CBC171C5
B8B3146FB0CE369F0B0CEAE5EC657E60E74321BAA347D2307CC55DCFE06E47BF
FFDB7A813FC6D30C0FCE5BD3E77393CFC51B38EF275C84C866E69CA9C74C9AB4
A6A6DC7D12DB626552D87856DDD69AD28AECDC9756A00A0D32257A43D6E9CDAB
C8127E06C4FB513129926FF0395F0CC1C2D808C97635D33BA2F8C833F2F84F66
3B05BDE41F950EEDEE73DF90F644ECD7A72CB2CFEC1FCF17A867E0B0C0F5A7AA
59AF4501570A50EB302F85E542BD29ABA6D74332400F4C8365C3C9E988752F99
B839B7A0F630C740BE32D1486981D8000FF636C90F694FE379FC0709EE7CC746
F883810903E238C932073A90AC78E8F7DF9583C1152C559A6CCD3E5C7C0BCAB9
73AF3DFA8615A7F299FCF7CE7206D5F4B9040D387CD3C52DBD08E0E9A80C9616
5EA0EB493768C53E93FCE41BCCE064A047BE8C050266583ABAFED74E2B968BF8
6CE1507105B9503D6FC29CE61BF07ED568B0F1497796B6CF781E7262762C1675
F25E86F56CBD7E68B03350481DEFD02438DCFBB7EE50FF276387740E79E5CFB2
CD7A6FA367377707DF63029ECDEC47A4EAD2C87CF75E4A9112444FB2B5BE55B6
C25515FF648509AD54D739CDF040FCC34B6A88788E0372528E9B112FDB8C7843
5D557151B6FCEE99F53BD5FFF13026B95ECBAC75A0EF4F856D2F150817B0CC7E
20AB39ACEDC30E1B777C6F06D3B893DAC73FAEEDD93EFE3346C6255DEE89E26D
E279834A7C2FF9FC63E5BB9AF74295CC5F8C6CEE33046B00DAB455A40FD74A3F
B7D9B4251448507F2463443E9141E68D6C244EE00D1E009E7F739AA650C7A651
4901CBF31A83D7A188F7980E74F75BE0EBBDAF01F106293F5E56FE9A440E5CF5
89C2C6FD9026198136C5F0B51DC53C878577C932E2B2B549B3FEA7B8D12CAC8F
B975965E6805C79A02A08779D78D582548412620F69F70908E351852CBE389B8
A2084B98B072902E74E59ABE2E32531475866B3C5E515DD140B3BD06F77FE41F
8D7ABAD142B5DD71CE0FB171D93C72C1C113397D5C6BCA124297997581284FDF
3655C15DEF9EBEFB6EBA58153BAB51631CF70FF79180B28411419303B349E7B5
CFB24E53E6383A11041562E4F938100EA504B10FE0B58D0036273D44AEA380C8
D14901EACF5B826685E27B15D9C81F0C6E4581DFA876650C6F708A65937DBC9E
D53DA2057F6796D4CF06F7ACDAA3858386DB21B6E14CE1A4351C9B190BE38A5D
2A59CABDAA767FCE533243C6129DBC22634E979EDADD3B8E9B6C9407ADED11CB
E7DE1E57DA279A804612FF97E38F78A88B9A65186D33DE5043F2681518036CB6
05F77954E61B7231819803D8DB4FF8DB67F56A47893D2A65549AA44BB38739F9
C34A17A00ED72D004C627212B84D5B521CE8160C0F4D6836F02F7FBDA4F7B159
94A7A9719AFF6F28060D6798C25325F9B383F7BEFB70397BF0720C9D4DEE43CE
5A278D83310ACE58573A5C3A8B5CBBF50727556FED673F0E6D3D362B9A406127
A35F11282B39178A7157A0AD5E3F6B324D8C83805C6F12659EC333C89B849631
4CBAECBD29AAB3075239D0D3840D49EE57C23AE53DEEFA123810371BA2F44EBF
C8DC4BD214933E60B17971AFA46F64389621AE2037946772D7357164850C7EEF
9454DC7000DBA7F66EBF61BC00C46ACFE18C346C984477181FD298E5A2EA60C8
BDCAED5006C6DAE30796D7FE32FFB67EA010C68701A0310C07F97F04B928AA48
7964C458ECC4EC69A47DE4035AA97F97DD83E0BB9013833154D013E84204D9B7
FCFD0804760635839FB6CAD93935654EE8C9B7AC136DEE00EDD88D693A50FE11
2FE74E9B91DF1B2B4CD1E0E4AB2533A56CC0AD18305753A244620CD879ECB18D
473DABE960D6ACDFC3FC0ACB06A42DCCA04D73E18CD6E53123869411140CC9BB
06F7B54717E6437979E88248F7364602F4117968131676F4B8B05AE44FB24B2A
517FD4A7E3FAC0848F01788425C9497445B09F50FAA7DD10718F74DD7EAE0435
83AA8BB6BB68247DF6862EA85923F1FB13EB660D9F361989AE7D2F6E4C720D80
7B3D28C17D150ED27A89B5DD2C53DB1C1FCFC9DDE0AAF18FEF819FCF7EB75616
610CA0101EBDFE9FBF4A9A2A0687071331B07DB41E666F7186E5AA42BBA3D76D
9E2C0A1172F00DA496C9145ECB1CC5C900593C5BBFDB66C73B65A69B8E9887CB
7E8E4D4137123E9E22D1F08CB3B7CBDBE40A36D4C51FDEAB241B7C00BD0D2B7B
D493700B99FD83DAEBBA8E35A1B01105FEED52E133271E1F9FF215DA20CEAF59
FFB2D74563ED4317B3C56E3F58F367FA2D285916CA08CE517EDD722E8B06CDA5
F59F90BB13E2579B133C2D645F5DF5EEAE8A18D6115DB17DBADE038B8DEC5D71
B71F9203ADBDAC8CDE2A75ED88219E4D32847F1D5B1C0B74D6E03B74CF27DBC2
B4A0A1828F238B498664555F6DCB51A05ACB5F4669BFFF59D90ED267113C3CE4
BB7AA57C660229728175C2E11D451C4F132572CA8895D3963528AB7F4B65E4B7
F359DFC14A05E2211538FB21B4D0DC4AAB98F06AED736CCA3662CCBA0D937B3E
DEC8B155790F5A37CEC51BF0A85A309871028A67C2C3C451FED7FA0D45FE2437
B1C1550DBE4A512AFEA4679A30FA62B0BD33925AB97798CCC88AF9F5066ED9A0
818B1FD2A2954709907475074CAAC88363706F7C4AF74800974BFA1F0A080B34
8438DCD198325C68E88D3579FD298ED4F6C747E0335D2A4218BF03D95E6ECBC2
80A094FB09A5FB86923D79197F001EB06D4640CEEC20FD2340926619393DE5CA
EEDB2FEBE0818CE00B01ECB5834DB9395671C985FADC459805E29A7E640049C7
E70F06036015E4C4D1F6EF105AA6D1414F6DDF186D2B751F3DAB51F03819A8BC
1BF747716A4B3150E2FD10C1FF5009739F7FDF01980167219D33534D77945B09
1A12A93E748613E9998276569D1D97134980ABADCE4511795EA176B1F5358235
909E52F8512E6BDFB95AE41ABE56D672FA606B69D8361438805548ADFBB35F1E
CCF286DD2C100E646AB14FD73A283903D0DDD8CD8DC214A665B117C9D263C716
DA3460FC43621B9176D2E7E4920C4A068D6C13DBD4BCC1D4E7F790A8F9FFD349
EB48FFDB1B70376756E41C75EB4956CC901C6901BDC7F3F4AE48660E59B7B3F9
818F4D87D4D9DAAF84B4D947F0DA57CCDF44D2C03FC9BDC48B2D2311B140DA11
3485996DEC121F96567B91F2FD7AA9B39DE9504C23A6BD69A07E00C52A5A8B80
A42C8D10E764C3F9ACF723D221D29CF701E8CB168B50699BC434EB3793C19457
78EBBD462218F249BC2CB3B97315EDF9A1209C817EE4BFAFEDFDA894B8808B26
CA587CB7739FB7A91B9FFF302E727AD2EFE0BA46EF95A1F21A9C32B2B4F4FAA2
1F7036CCAA6ACAF7440FCD1E571DA4AED838F9EF1007EF7B8248981B8B15165F
733A0B6FB8D697B5758FF0E632246938A19BA25F3D5594C7EEE79D45A48972A6
8F66701041F42F42563CF2C57E9E9C173C365EBB414895045085951648719AC4
CFD520A335DE30DE06E7D13107EDEA3C4BEA82335E6063F2C47953AB23288ACA
F9A9010EBB8BC97EF4B1A21FC6670A8DCBF67943B672F7782D3EF1BC773C95E1
3523B5197F0E8920EDA0A2A4A857DF028AC0399DF5BB1E95642D39F8FF740370
3C8E4E80F6E4A00CC55A13A6C722A77268F33FA16B94230CDF2109F52AC97282
65ABE9C3BD2AA33CAFB4A15659737A36081C13D02F8FBBA8AA1CE951FD498D47
3FF1E448D7655E28E1D3F07B0EA05F5A756073B85FEACB5E957EFA5E03C8ABED
088D7F3118CC190632BDEA2B646DABE0CB35B69369C888AAB955C1C41F01D4B9
8559AD18A4180053B7E9268CF93B9763BA70C77A829AE89EF45B04602E42C6C0
B9768CC5723E28652053FE405016E1B8F6DBAA629B78A8211BCD40FAEB10782D
5B82ECFE97A524374BCB3721B63707254C53A523120636C294C00F85B09FC649
0E2B44BD08F8EF9F9AEBB3E81E96F921AEEEAA6CBBD95228CC6A5AED354CCC47
34D8606F88420E963EF20049FFB86DDA1C41E625A80D55975AC5DA348656E87D
F959F4D94FA23125502C9CCBDE79158D00FF6B8AFF1E0C2B43F5314E693CDCBA
9D643E9DF2801F52835E8586284247634E941D0079BAA75740D33A15E776E27D
7356C1062654690D2B2896781AD675273E4E179894830561351EBE2054280EFB
4BA5EDD3FB10763911AB574C7FAB6920079A4C7104DA53F564F40376D068DFCD
60003A21D7EF05203396667443355ED6D755FDD063A5835079C8B7FB2AFA58CC
21A892FD89DDDBFDA976C49A83D3439EFB7CB42AE298DF55AA04FA236DD4C84E
7E2BF19EC08A12612B7804B3A1CED52922E0AB7F80025FB2BC7CC7220C7E66F4
F2FFFE2DC97711C85D2A854B379BC82A29939C500DB209860593F6A7E9035D06
B4780E45489510921809980AA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/UniqueID 5000827 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C85558031F5D1B00F3C41E627B1DB9876EE658C
50AB296BCF6987C92C60EA329075C391FE8162A7ED4E48FEEF9A7ABD6C26A1A2
C667A8B8CD2647A9CFA8C792FFE0C2F0DE0C0E93D1A7B33E8E7872F061FD9655
F39311738856E18EA0D00B495CB2457719FEA94CAB84DB6F5FC372411D7A0AB2
ADE0DE96EFD4C911DFDA9E71FDCEAFF5D560F3F5452B64A5DBFC767F42C2E275
BD357515CA488B6396DBB3F64411CA16977271074F78E59A64D710D418B800ED
C6B89803DB4C49007FB2D0557A88D31529D26D85D8C0730F5B0F211BFCCA9C1C
0912397488BFF1682F60CBD40C0B23D0EC4E7D74B9BA9BEED999A52A348E5CDA
8AE12464129E9329C8F46938DBBB62B946D56AF4DB0E9F39AC7783C8CE01F260
EB052C4C5E8C5F89AE2D74B8C2EB1FAD9DA85B1F55761719AFC899525D91E838
CB6616FC860CCAA34020B7CE73F41385693E6B75BFC0EAB04352F5483F8587F3
3D37A80739B0DEE8B80F4708693CA59B24774D879A7FF8DA2355A2BCA9632B90
ACB9D965245EFCAD2147DC1181DD7A2DF5B3390B2F19EA4B2C4883D212135951
B336AC76124A59410EF51809710368FEEFA0136DB051034AF3459D520F0AD3B8
F1CBD02EB1D59F4E811300B7ACE6C2292CB5E4973E755785BB430FE516EBAEF7
2D3E690382986FF568DCF6DF471B32AFA509EFC0C99DF6B3DC7718C74DE53323
0A3FE6DBB19FCCE9829760ED129AF438705D08BC84A597FF410993AC3BCC93E3
C56D2FC9810125E03F6EB91BDCA4AD38E110CAA5BA3BF7AEFDB244B563547E65
FE2977749888A98840540FB9ED1F65E353A76C1A93022D3B94A5F1182BC69A4B
5602DD4FE9C6EF2F177C6287291545B733FAD7D857B7E551025AEBDF54FBE215
7726C57FB7D5FAB4AB174255A20CC0C6D0870B405DDCE6E07C9E7E71C1B14C86
7E1D3766ED492730AC836568564C8EC50F250AD44A573B759339FBBFF06F1108
4642E3E5DC03E8E60389E49F827C0F594568D8C660476CC6DB2CE4D41B1F8EB0
10B15EA77DE9789285B93F383860A225A436DA0204DCF33BB5A8A2F2E5003D9C
DB63B195130674A47C14C3FC5B63C945AC2FCDE44A1B019715D0BDE506B3BE3C
8A5F1B8D2A419A34B1B77ACDD4615424BAF4492ABD63C5A322B5E895CBF46A09
BAE5AF23C89A64A1171AFB49575481372C9888DFC32E7DFC62278B18358A62C2
E99CECB162D7D3EF26BC579C85F742828DBD3A883A0024F115D34C25DAEC7EAF
15C5910AC3BEC7C0D5CB69166A8349E5DC9AB56E7C089C676C36CFA59448B976
9517E24F2CFB3DF3658C48575396D2D602D1CD763BD420A8498F90BEB7257151
5CAC11AD636AF4041FD3E97888660B493E279B2D44EEDC1464C08E6D65109BE6
901B396CB2D672AFEF09E1FAAF13A695EAAF700CA7D7EE016DAD6DC2A9F68DDC
F9D86648A0970FB23865F909D5FC9FC4404D67C92EFEAE7A1446CB45312C2BDF
BF88879DE9837D710A56F15EF645845AB7591C1E4096C70D257B60968C4749EB
8E6F1635B3084B599A540CF5CD4461F863E5625738404156DAC9DC9A28A8FCC9
CCC3C9F96D629FA01840F36F925B857D63B036C47E786FED7C35917CFB3E46B0
40D88DB196F83DBCC1A77AF0436A50206DFCFF8339601529458E80705254EAE8
7A1516130F4EBBF559044507DF534B8DB673E8335F24355131B533498206B7E1
2F9F1BB067ADD29BBA8FC50A206C97B364093F570A7FF078890B8DE836F9B05E
853954182D710387A4E098D37336B374C28C1D4640ADF2613EFF8A14F46B0242
5EAF480CBD2EC48BDF38D17F7707E3A08D907B2883668B8706A87C0CCB8F8A02
21167BCBC0D02AA2013D9593DCC3F96CB65C9979DA3F0F3DBF5FB0DB6AC5700C
F16E084137A1989B520AC94AC84503949E97377ED929C518D6BB797AD7BF5295
5D669C9D5CF69AFBADCFF952F8643D363B3533783F9E6A78D656BE5DE813CD98
2C7D57381DA8B8E639E3F2E84BF34404443375F4182E9BBE680CD8A123BE12AC
9DBC52E2030AB4F4E18291AC08F6E0A4B0466885DDFA8ABEB1077AACC99828DD
DC30CA44485E74FAF91DC77B8AABC22261FDE33B342CFDDE30CE5E4E7ABAEA34
14CE77FA57869C9D5F20B6DB096615BCC3EEA0DD2FD05F5F7E1CB0D6DED63FE8
357934361C5B08D9296611279AA93A7422FF127FAEE06FE6B6F7EEE88FB61268
30104A8C13C43C36D0728EB027624C0534C8FDBBE70C3FEFEE0C5B65A5D08FAE
78C8788E6C047DCCA3DDFBB439739B55934CFA71A4A00299165E02397F951E17
1C7F4224306F0882C44B86EEE9CF20C4824B18BA18439174102C49DA8CCFE6AA
B1826B2506C97E144BF490E1562B3D55BFE885D11BAA14493D3401C5BEC1F95A
1AF810D09A69F2E3B42BD93B3D389F221A05A66A32A26D826EEE597A51610342
74EB5403CE8F524A6BA74FF8A29DADFF23AEB048052CBC4D03CBA805D1CEDC45
E137FB1C07E50A17BE942AB97F89B437C2BFFE29AA53D0AF77F49FE3C4C9D833
4054D6D08257A3D503327C2C57776AD3614FCA67DF1EC7FE297E7A3BD1D59C63
7926260DCC89362B542F096909B89F07A1ECC7BC7A234471350AF994D547FDE5
4033D91C9D2282116432E7F4B0A9A69DBEE6C1FEDEA6A9C57558BE8D3A3B3BFC
97DF1BF89A7951F0D8FE998FBE681A2FFC11AA569020B17AED3BDA319E82C501
0AE502D997D14314D1A7E84A2F5F55FC6E829767A83E5DE0764AFC81187D0148
3B361F62E4A099EE4DF095BA5185E27CF7F81F4313837D10C4F90898F2B58BCD
A35A49D2D59F1D44128BF25E28A4284C08E5D11381707BA3FB134967ABF85EBD
B65DE9A068C3402CA258A3793F0A46D8680D3B7DEDCE870A1D28D5357A5291A4
1BB28258BAF5F0BCBACBF90C3C129AFD3768CC0D4E7C33F041838AB46820E45B
193BAF6B91BAC47F98785DF6ED665A72ABF3C0AC0B875B490A54C4ACE9CC0499
4A78C8AF2C747DA22B2B8059451D473E4543687477C9833746E36F86DB176680
3E8063258F6CFBA8233B4B24C6B5B5E7ADE2797A9054CAAE9F5B3A55FA8F5A52
8E9F27024CEC47C468C457DA222001C99238414471D762EB2418DCDD4A7C76DC
8F86FBBE791D075D1038BC6F08F98A1073C64229874B24E72FFF776F0EEAEF1C
387C0B0BD4DB9A812711F4DAFF90A83BF39279828F91E64D1D58E1530B7038C9
AA46C091602EF3013D2DBB59A4BD55E3F82D6F04AC28126C5344EEFAE57E40A3
49B0B4246FE0C2387F3D8C9A4A8A0070CB79B41CBC28214DD2A85CC89D85A1D7
1534CCCF8660E8BDDFE7CB481C8D1718EC76B4126BDEF5D349E582BCC767FF00
90973A990F71C7BE59E42F3D8A628E89518B5DA936941E00EC75CA5375B6295D
CEF6ACCFF46D7BD63BECD36F985C9B5EA0FB4B6A63A546460D3EE1C7AD6E283C
3A5B71B7C05BE2CC9EE7F24361DE97AE5F34B3DF0DC444C06288FBAD62BBB824
FDE2EB82E190E3935D52BDA533CE50D5EE41E287577D05C56C5BE5853D453DF7
B7E64E97B0054712722D29FDC7C24164451D7A7148E6269E1A315A267A828429
9E0B468AE186B2879AD46D2C83BBC6931AEC8836EC9F984DD3933C9A33D30E5E
0D9B1A6A9F584E60A8B199413E9BD700E520A56268FD9A2D63E86F15147CC882
34B459448DA019B194457AB6FEED1B5E71C5269CF3DF1DF05BC2CF992D0ADA19
7AFD0F862D8474743F16B28488BACA8F14BDFA9B21CED3C9CD8D932398EF9EB7
7B1312266F8599E09BB6AA48FD9B26BF7103B40E6483716F0DABF8075698DA78
FF32A5F60B23D9D3CDAC60B421345041A73A4D12D6FA0C8FACE2D0DE9D915D83
EBC8E3AAA7A0C3FEE14609ADD1946A5177BBDD81F5557856B9CAB996C2CBCB23
12D6BC16A61F1967C1EBDC65A8BE1D3FC787A159BBCBED3FAE907B23A808632C
1D183F91D837DAC9BA3F1A2F0DA382A0945FBDE698858AC63E08F52C718E6C41
D0891B6E49BDDC7D91C78F6AE3A74E4CFD320893F7EAEA8BD445D066FF84D0C2
F45FA8253F048F2126A0147CDC4B06D3E1E78E4DB73130046E518495BB5DB7E4
6F45C5FDB47CD154189829E9995A1CDB20923BB50469FE9495876CFAF9477D91
7EE1AE45912D4FE2006617418C7D285524F76721DE6C5667082CE64CD6CBA090
37AF794A3183557A730FBD74E4AAB66A08C019B7059EE38A1BCE6DB2D007646B
A9340601E0CC2686078F91839E9D457C5244F2C524249D24DAB90DC517EA385C
9163CE875EE883888813B15C9657E13BC6EFB49ADB5C9213348253B70FF30A34
EE903A15E86E86F0C53063027523512719CD3F0917FD25444C9672D97A915C95
FC43656B2B6F05380FE132274BFBAFA3595D783FC0696FC02B9DAB14A4120605
72B7DE5E4F37F280EAF4FDCFC95BDABA8E0A1D6423273D002A8C592FC5F07E17
7E6BA0413F6C72DD44889CAD50CAB328CFE244EC5E9DC253DFFB9AA565184DDD
55F0B0079CBFAD01DA72F2780E325B73B44AD8391FB2793039DABAFF22A3D06D
F2D979EB1DB5A6F453DF54CFAE4FD89BBB378874EC19188A6EAE9BA8ED866DD6
61CB379DDE27C321AF5F60D3C7EA8622E861F6F8C111D694D4905163A9112531
921AE54C620D570DDFF7E55939C414E852D0832455AEFB861AC4B4DA7D59F468
61AA1D13BD01A05E2FDF5E1C5C4355B110466FD5258BF8B443C3A64E1E098861
C682A4E8F505ACB0763185872F8F34A7CF9E196CE23D0079AFFE8E8CB34D3568
4CAF6B5A5EB63331AF7305F28FF3FF3419218E1E2FF49167E3654EB666A747E1
B238EC9A492483C63A4B0FE1DBFBA11197E7159C28A5C0C30BEEAF05B265DA95
8EF4099514FA79AF2EFF3FEAD19ADB7A587DBAB7692B4F41917178B3EB5526D0
3340509E86396F8FD0CBC0C511BA31635097C2E804D55E997E76C0698D28B5E5
83D9CE6EC479D302844C457CFDDA05FE821411B0E9E3C321ED691F3C60E80A0D
049A7A67687476D5824E80440137B297F1B715DF13C5EE28030C25227E9AE8A2
B789FE7D62AC1DB604318465515D090D19DB21CB597B5FFFAF2748272F91D9EF
049511AF6BAB3A8DC2C1431817AB35CC4E83AEFADFA89F419B2B460CD42F875E
4CD73AD3704489E491112A723FC88AA4B88761C2DE81A1B2A5A6D96F9F222114
F2876FE7B8F54E3FA869649C9808FE8FA38502357A40201D84C612A1F7C8BE73
134782188C85EB795A09B648C0E6ECA8E63D435DBA9FCF118BE71868F1DB133A
6C8B4B4713A2E37DD51020D5C7DD1DF7CCBD402ED91CAA13001646C315579AAD
392F410EC6598D08CC48AC0439357AE1DFB396DFDCB7F364AE35A496E9B5373C
6C152E5386D6566BFDF32EB944BBFA46883D1F7CD6AB93CE390F73EE6B61061B
74769102138EAD3193B039123482A77EB141EEEC4B606FDF1451BE9249041200
C51ED8CBFA8F444A2B0E338C7098441816C6DCD337BE2C48435CE4CF91BCFB94
101F76E9A6478808F4BC64F5767184D244176D14C777E63DDB85202DCE3EDE9F
6066BA0F2FBD4C92D21043E3CFC653D67D5F317B35E46443FA72CBE45030EF8A
8D4F763A63C38411DD862160ADCD7DB0C211B59F7AFA221E53E151702C6AF882
ACCC8299C2E0BC436B96C79FD340161CAE53841D1DB58D1FDE767AB980BC2A46
FD15D25529768CEB198828B5C529176D680D3AD505E50FBB799B3195D611A8C5
58A9A3F3764CB7A415222661F60473F7EAC74E432225429F75678A7E6E285301
26CF54F5BCF50BECA5592B623398446A8E3794876B8AB055462AC65D4DD09B9B
A52639654E8DEE08ECB26161A1CDC6066D1E86379F959CBD9E0247C3B7A76559
E7C6D51953D85AC6C2B6639979FA62EFE6EE35B515E3F1F138C090B59D7A89AF
76AEE9B48383818B9557FD559727A78B5FF25EDC05E558D871A1294A2267680C
F198C7E8CE97A91A772FE64E3E87F71DD02A6DE1969FF66B1FDF33A9EB3C8B36
545CD3F2D41E639397D88D12A4E891B5F75C821BC996B0BA52492FD6D6032B83
B5E599C1BA2B0BD9C70EE40726B9FD156D31336355C0AB9BFC72936E8F293F00
3376603DD7AB4EC4320201955412B19726F94641D053ED81BEDD52FBC771FD1C
E6C57958AE013C3E6E846F5F4324B7A65B8EC1C24E892718103A28ACE52AADAB
879906552918BBC465EACCE78A55B85E5E6240097AD8183BF608DF91186AC044
A0DA7AA233394EBBBEC022C23084BF27781A80D4BC7B3964B13F63A8839CA059
E22A1A86B6A5F6DA684BF1E07316F8A0E43186BFC1FB116DF3D508FAF47CB9E1
B77F93DE5DD95FED88D627B04E589304B26330ED3EF4185310486F343B8F76E4
617A152FE9E5FC5990C4DB422D040ACDEED335CED9C0BF20E03592C3C2F6215C
6EF08A35CD47825D8AB5AE198B9E03C010D215F3389F547F4F4AA2CE44B4FFFB
094CAD5A13716AB1EDB855DD16293161388831A8A71D15ED6116CBAFF2223F29
C8E94D00991C98C793D5DD990CE8E68B5B6A8378E712F7914CE6249467A81119
10C756001D969460D92227F7D4264DBACCEFCCE9D85BBC15DF0448A6A5343EDB
64366DB95998D73F622D04722518183F2A5CA74813522118F43BE7A4DA1D7064
849B0A68886AF6CB869B36ACF0F6F935F580E63234D7DBE0481D663DD9A47A7E
2D0E0D11A995DCBB9903D28CC4855FC3801C6CF9686B1B39530ACEF35EEA7954
145135B1DA37439AA53574735BEBB9392C8CD7CBF679C8ACB1DFB798F80E8F8E
26A797FD26BA6B62790CEEC9D96D7C85299261117FA293185362D48FA41FD816
BAE664D6BC1B864576952A5BCD7E7F9EC3D36EBEA4D4FF867CF10E0181DC17F6
C201AC8CBE70BDE2A5424D243AA8BC7E5AB058C53B1BF30B228F1A44392BC787
17F6879AE57F9CB1DCFE174533EC4CD1D26F5DC4DF1F5B52E24FA9E92AC4F306
5D319490DCAFDAB9C8C6C47BDC2A7FF99B45D840FFA40813FC46FEF4FAA4B8B0
E99450F3873E3A85EA2F28B11485DF96EFB760CC5D3AE6173728BF349327EF22
87F7CE4C010B6426E5AFA94F034236C322A0E0D94862868510876930246F8D1A
F03C56680DA1DF5B28CA0629FD334D97A41F365AC410CFEDF6B7200E4783319A
C17DCFA2696CD935663414402EEE6CD99B684625AD3E8A3FF859BECA030AB1DF
F160A1F675B4FF68C5FAE8E1B1516820DA0E268861A22D518E9D8A9DF434B3FE
4044966F7F512BDE2C571EBE7F8EFE2167B9DD4A33BAC108386F4F5E5B1DDFDD
F377435BB872B1EF1BC51A70C75F5D5DEA2C3F99CBE90DFC788015C386BFF61C
48894C680599BB0238E68A5C641A78B278C4C8045E62E7DD33365B1B9227ACFF
ABD63BAF4909FBC25540DF28BDB830FB84985FF3840896A65ED045CF00956411
D4CD9314F835FBE77D59903CC5125E2406CF1C1FE9D6D77FB7D58AA17098FD47
BF3E8508340027BACBC418DA7163F22827C33B57209A53A016DFF2395AAD5595
AD356B776715F788DF5BCB0CCA839DF5A6B4BA49B64B3B392BE7AAAD4446E366
7379656593E4E3FBE14AE50DE2C6D3D62655CA880B7D69FE0B411D74CBB02041
740AED1FA5436E309A6E6410A498516BEB6228EC6A947E0B8753B06590D5D349
CB2468ED86B72310B85C79690812D48EF2883BCA8AF8DAE179357610A6198867
0CB89F1A9F1AB6FBCFC32B5AEE065ECE9975FEF24926F9FEFBE19AF36A77769C
FF3C3A053ED83ECE8F952D68DB7FB512BA383D05EAD78CA289D6824280D655AF
A6FB87E49F6FDE279AC19CB7C883F77765F708037D63A8AFF9987D998DFF0102
59747412277AA4DEB9DC1CA5EB1B955A3D99953B49170D23FBF3435DE8462694
4883E17732259BC5F2F4E6EDAFF150AF0C0DB198F3F6D82D678357D8116F56C3
741341FD608E1B6AC741D5E118D086D7E2CEE3FBCD9573E588C4A251747B865D
B37979E83E135189772E135403EFAD5247E54EED3B41340F22AF43BBD7D3AB80
EB5E15F67EBC56A229661DFAB6C31EB68BCFD0EDF9C5D0B3699442C127888AF7
A1DD4A8D6E0E3076A105D1871AF54F756CCD7AD3FB611182671FBECECCE99873
EF165AC0E5ABF9504F5106E53BF2556F69CC02615F619FA804A07C546810A06C
FAC47786E8F6557DD4F936FE683DC2157944AA0CBFAB723A83130DDBCAA51AB7
18026F0812DDDAA73F6D75D76DED773557080F112D0759CF4653DA9528A56107
9A0075C24B20492C238CF671642B56BC2B84E538C2C650726D48DF8A4C25EA7A
E94F8606FB5E4F185B29C9D1BF938CC02A5976C41BC23434866B134437EF6BE4
A2167DBEA13AE5F8854C267FB75AA6FC6718932359124ABB82EE2732661276C4
1CC92BFE4B9CFF75134C0D920F270438814C2E68EB9436C855EB8409A93C77B3
1A294D9EDBCD31AF704230BA2576F1A33854796682B27C539AACF18E36C7185B
A640505E07B00291189800C6E2743A05B3E9F16B7C91585DD6653A6CC3ABF991
65E0C5B22B4493B42A7EB874DC4A07992364A387C8C8724094FB8D7CBE7F21AF
5FF88D1DDFE3D90ED5925C76FF90AF9A5D07DD4E68D124A7C330D0FB11A5F2AC
24993C932AADF342803999E2D3DE0CB9BD79DE64CC86D764D4301DA54CE96B71
CAA9CF26833B0E19E89EA85F60420D483B54D0F12ED07E87D84310FD548EEC66
F83D7B3033CFF3D7C1AE5E73ADB775BD7E55FF5CFFEC76BAD8E876A0F344704B
D1D8AA7934956250D79175095BD732B4E3449D58B5EE560C8B38D10B8608B545
805D1835F05F2A1D765764B53659F560B640D916D48606DCF541EA54902E5ECE
30B589FE1B9BC4B8394F61D4F81E9E04FD02FE12B48ED53B1107C7A4FE1FBC02
390D856A38652AB6FB747632A0ACDB9B3781A0D5061A471656DA5A2CC61E43A7
34CCBA48B3302CAAB74DCA315178C7CB24EE498F8246B3A772748188820F2AE3
E5C35D609C18E7751FF91E5461E6BCE718238CA730804AE2D5C3ED2CFCB4CBA7
9A36C1E486BCE889D483EDCA02F456C772F84DC47B5496C0C712C769E3F3D08B
97BD4525F7C47CFF6FCDBBBB512EE020F91FF6E8B52DE2C34F022881AAF56010
5AD662A219D118BAB1A750D51459324E87225F421996651140A555B0746CD54A
653C1EAD67F0F9B235920A13B021384F3189657B6BEA736F713A124EC854B1FF
7E10E046EA07FD20ECCA6441532F231D8E191BAEF41BC02398DD2FDE4C295151
BEE3E23DE158BADB87CFEE6B271EA7C16FE7F68A2F7CFF184BE0C1DEFF32F6B0
77736C513C0DC2595C6B2AAE018D253B1FCCBB8E566904357E26FBCCF9A9BE92
9144DEF7F33AD8FD5EA4B72FAD52E5E1DC108129A181EA3D68261C59D7A662C5
814E5FB8BB009848CE7F894412B8169F2B200767355F7C9B3393915DBE8C62A4
0849A5361E413DE6872AADB2C528482B3A6719DD830747266127CBA05DEDE456
7D41E86D33F72336F92CB169B0F5A955082F686C7C190E01A217BDBFA9B8433A
EA7AD639A73853C7107884E3F67564D67542F432BF1AD42D444E30636433969C
A4B78BD5B31CC834816D1D8F33C64E3F3357666E580FF67C554A93CBEC8C521C
29BEB36E93B815B89B381244AF31AF0EF2F75BD9D6D0D3E91470CB890125130C
1F581788D9CDEB79DF70F63AF43360C0BDF3B6802117B83C7F0DD201D74FA64A
27A806CB31718F6C0CF4583721DC1D1597BB5D2FA7390D0B4B26E2433D148DAA
6B7A7FA20CD99D92E889170144792311A9FFB5DC181B650F9603F0857243BEEE
D567421BD911D85FC4D47FE4ACB58D584F05B6C561FE18675010A39F253D7460
EA2C8E8AB116C830371C01586722A0BA7E25C0E3884B5CFEEA03581EB0D2293B
822B8D7A662C169D5C5D22EE80B98EFB5C1D88229D44C46F81AF82536ED3544A
EB80B5FE81EBEA4543686BB5EC84E0AB8196203C9F24A12A7147223EB5F000A2
B72C2207B66C158BE017D922241053F57BF758E00132C732292965F3ED3EDA43
E3A09396E332AF77F0505A4C97F8904F5D5E5F9E97DD4AB5647A9E206B099356
F49F8989467DD53BDFD07FB9FEEC6E4D94EABDC318A50D14B20705AD31E826DE
6B25A28DA23D60D8817733616A737AD267924306A8EC3232D8A521C554D74E60
F8A339BAF5B54FA73705B7F444B14A0CEE618CB7C112F7034E998E5DBFB54FDF
16366F15C56390D6C81B96A2CA7BA88A5A1431D5D29A961482CAC83C68049EB7
87181EA96A7158B9E764ABB858BB15C9FB598AB5876D62F58D5E70D57D201F34
AA58BBC30987539392D8F200AC560C8CC91095A19AA0D24313B838154443E1C0
03BD0FF6EB57BD5BE1BEE25BCF23E68CAA6DEE532ED3B33DBFF607F28F7D8110
9D891A24AAC0626FA7C0626A6205DCA33EF61991D957B924B9915281C0286A4D
30D098880014D0DF3A5192DAE22A86D12308CB73A55B7E0EBD4204725E4EE524
B59771D0B6621A926126C23293626F9C5ECE5C5FCFFE92A144EBEA993C4D120D
295B16B30B0852D5DF998CCACE90771F81AE1F09F1F5942B8834F17B15274840
BE6FC4A00CEDFA852B8ECA6BDDD255FEAC416F3C5CF6DC784CFA27168914D4FD
46F380CABD418EC675B62DBFE26A811F5F720418EB5E09513B84720D1BDFE82D
C6FE460726FADC19D13340D3760841A494E4AFFD782CBB1F63412F32E84AF599
289039AD8FF8C3EA1F3C7EC77AA24F6AFCE9DEFD754BB85676429C5D4BF4194E
CD2B6996703EA1B9ECD6B36355D04B42D6B1DEBB926DBC92B0187F4D5809A6E0
F02633C2BA5B5530999C09D7E66BA7CCC97105AF06310C24D2EDE859426E0ECD
9E0DB64F4A1B62E8BC11423AC10F9872E6B8DC2301C587F9B1FF053E6C2A4694
21CA17855888176E0DCA57E0957A31251355DE444B5BB39FE4ED246AF213FC93
DAE95B80836FBBA40750E5CFE866828A2887AC1BD3267E93ED99576E189E8BC9
2009D45B1469F40CA19CAD156F2236297F951F54F0730AE3DA2A239F4B414973
B77873F041FD1EBC164DDD591691E3B18B10A96E8A59E5ADD2BFDDB6C05D83B3
34FBC0ABD115848A3B564520290F1FC4FF19CB75C054D2D30D347F90E09D1F7F
C1AF783941064116C3478EF91334051029B9982D5592FDDC139728CB1A9997ED
30D6271A18B60626C5CD4CBCEFE6588AB10C04549B26677B73A2E7EA7520D987
9A07DD50099668C867BB206100D0E553E2A8EF72AEC113D8715401E5F7DEF09F
937900D40776A5885EE74E7BB55BB43CA90F0C3588CBE9D5882FBE4F7228E185
831B03ACE3884CB3134988C41D43718F880A0011121F2553F3EBDD995EBC5EC5
586477AD3B0B39C1677631CB6EC2AE28EBCD96CB1976684C98B626F8A800604F
53D8163DAF905ED3FDE28F0D8AD6E235C21F7671918F16720078C1F6A65C23D1
7B1DEB17A6118E19F903A3A612D6567DB89C7DFDFA1AD2F321B8A62F2D7A242D
5D80E2CDC8CABE9F81F650961066E006141FD1186E58CEB6261DF8F85CB66658
B8C34D10327A837BE60A638C6B9A27882E06C7788D07FC1E51FB216D0B36E0E8
A6BE369AAC0ED6882308A5785F8BC7F4079C811030C875F0E3645DE62F031390
226B8AA43CFF5FE5C705BAB7A3E20F166E42D1FDDBC1024BF752EAD9E1BDE8B0
7CCB0553C2C46B9A13813684DC597FE5CC355D33969A9A2903B215869F1546FB
71A8F85349AB66619483A1FE9DF2CFF7A9737FA8A39B7BDD9839FC981A3CA55C
1DA4ECB9D10A5B60BF9326F45B8473FB09C7999BE9CB2A5C74753338C5A20FBA
08068B5EAA610700F891B5B468056ED8499B50A553C7336BA03EACD3CD4C2202
5C5B8BB0AAA7A55CE6F270BF764995F1F3527397ABC3D45C172D49CC2B9167B4
B0BD34C205488A4B8BC4C9671C39502BE9D54E9CE9ADF0F075226D526C10629D
57E64CE5B8705E1E164C211A3E8ED4F42268FE4CD6E98930588C566EB137C5F3
4F1F48FB1B31404158B385AEDF0D40136DFDBD7BD60EAAF63C9708ECFAF876BB
7069A81A92FD209FA1295AE2AF5D153C64D9BC79B4E006C3EFEC4E31A725D354
C20115290FFDAEA6D3B0C1C687D031F6C7E34DA087A15BBA8F8B2339EC44DEC5
BA83DBEC188C4644365B4EFBEC3F7CBDDAA22EFBB2CE70BF70F26C4E5290E6DF
4302AD8026CC2FD373E3475EC8D1FC3F324F06AE75FD92141637FA511A0F4259
EE806C261F2A3D7A29187D5A3D031C00461D8B959B3199307E801393DB6BFB1E
46AE5183544480FD1E2C67EFB6308C8A08996BCBDFF01E04D740C5B6F9CA65A8
4AB2B8BE838AD5477AED667BB11610B8BD395580D4EAE994E0E2DAD573AAAE60
5185943173241401E0C45EAC89158F504CBBABE8F575BB3206599BE77D8D571A
BDB41ACE511FC76ADD2BD8664646CC032E26409A725F8A7F24F9CF330F094CD5
43FE97759622AF399D1399AA59E8E24B94DDAEF48613670D14673FDC00E67DA3
9FB07F629E5982717B6367189A8643E5DC0764687FC63FFAFA5EC1F35C3A46C3
82362EA7F1401FA6479DC0309A89105689FE783BF8639B6743524E6992DAFE3A
40AB5E8E928CD413C3CC1564012F4EB538FC4015E17E9FF80E8A3A2CC5F3CC41
FE2AA803EB2C3F59398A4B9AFE493D00FE6B724B3476546C7483B5ADFB46F60A
408F31D9259FADD2B3DE8F8033DF69ED4B0348CE6F61F2ADDC5504FC6471B9B0
A07D7C8E1BBC5F2D9838FB303CC40DB39E877F1F74030EC9A5F91FE1CB1BD2DC
5232DBF5971469F5DE55D0282A7612A0EA10CC2193EF0473A73D5242C02FC778
70283E7F11C553FE6E8FA9E344FAC5F134F3F712215B4E2B47B4D4A1E9D84E2D
047F3FB26EFDF9F20642F861768DB7540AAD31F80A151C8CA4E247C1D7EF6051
7A18F4A81A20D2722562359F6E92EA21DB17E00482E226BFABA988A66FEA8D5C
F10470A030E2F158D8099E084A4EDD125C0AAB0678C9FBD71E751B390946A0A0
34512840EE85AD4374ABDA1C5A77B668EDFE028C718F2A1D1057F61F8DDC257E
6740BB4C542E2229FE7484FCDD03D95D7CE4CD0907EB0285D16BF85225E97AAF
539AD8F44EB2E9DE05D2E12B8FB1C7D3AF7611F20F4A8471E1A435D24C9887A0
9E7E732862A1673836605A2FCC09C4467F9079EF288D5486961DC6254E7C3D9D
D2035ECAB80125DCB3DAC7A10C21CF0390919968B46A4299343BD8B5A3ED2A8C
090622F4943B0272AC32A3537170965F44FE05E5DBE9FCE793F925DBD473D0AB
F4CCE47AA41A7480CE29AF82197B10E5DB03E7DFB3020353936D9D7195324AE5
385724AF72AB55AFB8D7AE65546D87A32755305EAD520E17EE46189E90BF5F5E
806C196AAFB28AFCCF276DA6EE428CA1DD1C3E42E8CC593AA26347E9BC456962
1C8E7D65230B9CEAF2339ED7E61FD9DDE2B1D314187494271C16531037152863
41629EBC2B8419AB01072CB7DA5791E066E55FDBE82760C22BA5E7E5A9E5BA8A
8E4DAB5D2399D09CCAD06C144FC630B89B6E813D9223A95FECC75732EE91B47C
6EF878B7F6CC6FC8ADED47C4B48A45F3B1E8276C13DD06914D82ED74AF53126C
7C0A9A6F70955C362AE2901788B71F9F7F465C749997A9DC29B580BF6B1929BB
0B8673AF751CD8400ED981707301484DBFB83FCE2DDC45A6EE961F3812C43798
E0DE2A28E8D3F36A6ADAF644788E9F08AFFDE2F05FA5D3C43507EB32CBFA320E
45ADF580B112D8045D510E090EB2E89E60B77E16BFB4DD02CDCB41B8DECF26E8
00A1C7F3E3D18632E8B0EA286D401548F97C19765839DEFF5EA0D34E6CBA09AA
8C51857EA1EEBA1F04A091B030DB9A6A39DB65E5BF6ABE28F34A9A6FD5C6A1D8
3F1B3E34BB11439BB9AB1654B56CAFFA69EFC9742F443E7BA1650EBC2385BD8C
1A1CDFBE0C579BD86D90EA745F7BDFF15171DA6657E292E04E9BB7E268FE648A
F7FE56AD044E4B4D99524B5163B5281851DC6E2A0AEBDEFDFB9A89CB1D975497
B3C0C5F962A071FDC00AC0CB2C195588A6B3EEA0A2B49FB546F292446C47C399
070C05B806CCA8D24460C5476695E11F9EEB6BD7703C493BC179F2EA0CD265FC
7DB57041407879BA6696A534DCDA8A6CB419D5EE0AC18E8B6E8145FB895A0603
8A1857E28614473B290910CE6A1C74547C540640188A3C590EF84BF2C55C2707
743D732E84E179F09299775062087EC69532281E261E30018DB08DC17AA01097
9FCF0DB559D6EAD1183600
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 68 /D put
dup 70 /F put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D8211BA44AC3CE67694563D2
841B62F8110E87700E6D1522A79EDECDA6C59DC3004C4C3CB2DFA31AF1544E5A
4FFE7802F51C8402B2991BBC188AB976B4E85B124B81A226930F5F80E1D34658
2C2E711A080DBC1EC1D661782A37A121F9F469BE383F47BB8E249300A4E2A660
56BB18F8C35B4B830993FB73790CF101C3BB9BFDF16CE498196B69EB18BA4DD2
95682F6E109B03CAADF1C109B7FBAA43E379817760012E13BC8E613700FA17B9
7CF678908EB36F200F6BAA8972A24C05CF85A5FB787A31747A2CF7EEB6FC19DE
FFCBD75C8065A8991E38C10077F1BAFD0ACD3C2EC4478692CB7AC11368F3C6C4
D18E16D16280D0F6C15FEB41187C73A78D4B07363926DBDF264DD03A9C212ED3
BB22F81033A0EE59A1576583C724501F278C50A484EDF227187BD09E9DBD30E9
5B506B87FDAD66F5E28FB2FB173BEF8827E743117AFFAE7DB3FEFCEE8070783D
83B836C15C644E7CEC1A22B409174EB5A1205FE3C4D85AA6935551A0D6E6CC03
91ADB92C98290DB05EC4995FFEF4D2CE4DEB9B884B0A075F82436DEC7BAA6434
B3AE34C038EEC4F3EBEEC2A274C554B884C3BD84A4B278D44B4F54BDBECEB0B6
278540EA16A9A943677452F9260231A773B864FCA1B035B5A791024B8BA98474
E2384651AFA9D08596AAACF76C918112D68501638647558A1313CEFF072FBD91
750D3D92EB644A1E86D3DC5112079A51EC72E75C0D7711FC1933AB52FB74A228
6B5D3FA03AA1DEF6C602BC185A50BB683087E9808B90AFD9CF6C40174BCDF3D8
6A3BD91F52ECDF519B3D1278D62C0428B60648C64DFD800BA6CC8D6FE62BE6F8
F4263CB5554CA474D04D3F8E8F055C498AA3CE26A0B333FABA151A52A0123615
E19CC50034EDA72026B1B63143E0FAAF106EA98997B39C9DE4FEFBF3DF6E741B
06FFF996D6393B7E83F26BD089AB9E1D79F6C8822C319EBABB752AEB60E5E4E8
4ED4FDB14597A7615EC0726878D4E217AA94EB4741F814A51E3145B10E384D93
BA936BDC1A5DEAC3F54771CB06A8554340C829FDAE2AADCB38625341D4474ED3
2FD8F982CD4F966ADCB3F3C8EB0C51056BCCE6C2B75B75037A65EB4D9C8E36C9
03C38C467BC28000E373BC750D183AA4B3548E2C8858E58DD524D1C02AEB0554
FEDDDB3D78616F055B94630E781D9DDA03B8294BBAEFA4B9EBB11321C6E05E16
706255F3369779DE92439A8111EBBC4882EFDE3CB7D3B59818FE609E0C7D33A9
07302E493F99939EE96DC5A3CA374192B94BA63464CD1C969D23D4651D2A5125
8C0B8E51D516C0E3162E223542C1BA68FBD49752DF67FB91AF4598837812DFA7
0F6B84A4993B79AF201824D765EF91DFF1458E4CE11029EE4DF67FAA0360BF30
4F643C6EB79DBD8ADB50EBBF13F4B4C3A764D2F07AA989DD0BAA9A66819B464E
39F0FBDD5216B6A54B6AF091A9E4987DAE06ED35A90FBA2C33DF50D8627DC66F
8E28306D56F2CC55C774B97BD5A865B91666FFCDF06A6CDDA39793CA11DACB1E
2C7755125372F2D5F5B9B4768027AF3A4DC2B47096EC179F03A03701989A511B
27674A166C396DF0A68B8F196FD0F2A986017CA6DAE147931A9E6422F9F77B75
2141F117079B02E86F8EBD69396A1887CDBE9311C9C750BB72E990109BEEFAA1
F75164634875EA1EA020D7C0939CB19B74BE452EF0C0413F229C372B064E85E9
FBECDD6E1D006A5489C432701F4CD0EDFF127BAF08BCB67E5EE268E2A59359F2
270D88CB60710671F549ACCF59FA7E35DDAE6A622A578A7BE5A098249A1C8655
FBBE1C7114F8A80AB22C5991FD0AB8D23F709724D3952095462D683F3C6B80B1
B6762C610F8763B618E3BE2C548514BC5D8C85E29AD790BFD0C42348E6832BDB
05F2B6158D7F06242BC7A688876B3D619ABF10795CC90ECB11B705790204DC97
D371B8FD0E40069DD81D6E308B65D9B512E5D197C17B8A40FA94E010DDCCA1D9
288D918EFF33F73377C3B791A3BCC25B6C16172006E8DC93837D71EDD2E17770
361DF9906744690871B880903BF62E0F717C3FD9D0C0217C05C9AF44EBC9BF57
BBC7A30105210392802A29654FF0932A63B85116D8EFE76F6CA59049FE5C617F
5AF3F587F27A962288DE01714F6C4A66242E60747EBCFC84A28FEDA5E970F567
06713A88869478254DDBCFFC1573D54E0A3C11867B19E8342520E4FCF3F872AA
757094F0BB96B97121E8079F72B818D99F2756672B8179A37368A95147F1DB5E
7EA0F110D13975C160A911B6C8E785A50A02754170A2AFAEA498030645226A12
1358FDBFA8C9658CD78C97BAFABB2C291AB964223E86EA0C99502267856E1FAD
B61C5A6FFB84F8726D99B1E3BAB3BB99ACD2F553012FB55329F083928F621D9D
38E7E4F1C8F7410550EAE2A63A6CDED978F4040848242B2FD8B79D7C5A29BB35
F6444B772AF039532BD71D65DB82E129795C1BFBFB77C5EADE2075989CF3893C
B2E0B4C75AC2C32D3AE5E9395E9E02C37CAE65A5551C696BA9FA110ECB3D7916
B01CD8AE2ECD7BBD086E73ABC1388114C538E986A3F47C614B04A33762F7AC17
6586E5FF2038599A94F7863B3116ADD74BD5A29B95B4ACCA1C4367A9E20D5F55
0F1BDA5866DDB6D6AB711DCE8937FD7538D8FDBB8EE9ACCB3F2D91ABE02E2AC4
BED9C9D34E01FD345C36163F5C106944854FBB78FD56F069850E18360029994C
C38D0CB3F7D1F469039F57E455F81B3D66D684AD7D0BACE9C8EC9535DFC2719A
86DB6DA5C5E05BEBCE72932E1553BF2198DCCFD3F5396B7266C5E1B24ECC2CF2
BBAB9A4349960E36151809773145C7759BC39375FD9FA9ABB3AD0788194341FF
F5CF90CE284E3640B676E2E7D5BEC93CC96181A59CA5B0101CD43C8255A23A3D
93119F49C45301D3FA21264E0A554C2A31D4FF60026BD34A8ECBF9BD41C12B45
EB5676ED168AF86CF71038D75A62FC802C3A30457EB2A2A6FAA5FED020322614
02E002FFA34894B3B4ABE2AF8EDE731907600668C2D4F941094DF4926C0BB847
4B87A5CC7FEF768DD9ED4CEC51BA60C2C2C4B383AD6E4689D869BFB789715BAC
9D3165CC28D78D7BA7149C032ABCD1FE92D870C25BCB626177FCD516BE6A48FF
66F4481A266F0C2147B13D704CAEAB6D71D33C6043B0BD6B94E0477B5A629EE6
195D99A32BB1B0C1FA764A124D36B772EA88758809AA6A7EB90633586307C436
F09E85C1CD51756BE2E7E617B66F9A8F819997C63FE28530A7C91ECE77F3CA4B
6587A35A6C449B7A256059B27C1FB20CCD731EC81578A8DE720B952A64463FAD
AF9B34ED9036AFE70A41EAACB2044271E51AF198C7543AFDA8E04DC5FACF7978
5143FF7D3828B5843E6F4EE75B5E238307B50C463840F203EA536E8166E10B50
963C3DE03987446FC841F5B2CD9C07362DA4964D5452322F4202EA7C762F37FA
02F4B86F45ED9B8DDB67CF13781F4BD3B054843D865130BADCBD1B3F173C3EB2
82CADC7B780ACCE29118EA87CF156CB781A42915ACCA1708F8031601DFDA5E02
879FF6A6994314F45DE51288F7A28BA9D5FD7561444BFB41ADB7952F7DE938DE
2740D282F628148F39CD8C9BC768FC7A22E7EE650FDC872274E09372B89C6A8E
B3622BA28F8BC5D6A72C32E1F4DD4D56F7EEECECA6290F9CD33B9B9036431AA6
E0857B1AA144B8EBF35206961E9CDCDB463BF2D3F102C7CB227EB078A3F3A3D8
57B04D6DD518C538721BCDCCB25A2A18CD2846D7DB09CFD18BCCF55DBDD88EA2
584FCEEF55E5657704FE0D4C69CDE1D2901EAACE1C870481C7788E27CE0359C8
084E133B6288428B7A4C80DFE8C8D8F751F4AB08D2CB8E4E29A22A20645D6075
0E8036F920AED192F1833C71899F280BD32FD5BB33FE5D74C2DC1F7BC57FFEA6
867D324474720EED57F04CB114C0E7F407684CD1FA3269D7FF68E094B7FCB4AB
629FC17A837C83CC0AD50909B0DC6C03E207AF50326521C31612C34255315A7B
9D66A9B034E1609204398E610BB7E3A0D20F33D4AD0DBF9831B1A196D2210E9B
8AE837B7DDE8244B24D81AD74899C902D41922709BF5E38CE314806FE4E76EAB
DCF87DAC18980CBB804063D39AAD736A4F2F77C75BEDCA2A6FD3836F51797BFA
AC297252137A06981E25006EF2FA9C6DAD85D9412C20CC73923D591C8E0BF39E
6854695542EB3C32BF9F4B13B2D230D731BA43D7FEAA3C0EFFBEA0523E3FFC35
E59909736157E7A60FE8610CCA5E371DB22AC6C24FD9FE778A6248A077B5DE40
EC3DB3DC6F62D762EB34D55B74CBC0658BF3A9E0BDBD2003A3E72EFC9E04ECC0
5AA2E53F86457AC3C2AB67E25F9281BCDA8E9AFCA2B555D7060DAC3C33F8F1CE
BAFB256D57D324685DA76F8E2B9FF458D27E707D94C0A4BE3359A65E9E64195C
8CE62E735D0D81AF44A05734685CC2CCC695A4DC9BC5ED34AF13B878F35557CC
ED49CFD0DD11C4C5C44732703AD20F92969965C3ECDAD4E2C89FF23318603718
2797DC9A3E887822EAE491931A5518CBC16A5CBBBF5D97E8918C93202CA59D88
362109DC94E1617C9A81151D88FB40D1D9D31B5F74C6B2F583A9586724A95FCB
945159EC8FC610E9DD11003D471BCE6E0C311BB86FE8774DD93FBB2D81690D44
22F8C6B25E1DB40636C58DCBF3ACFF2FF8DE725549F3353BBC8C01402EB3C825
71591C3E22CF5F4130577CBC4F6B5C8E22E71B95275E45E2F49AA53F6F578168
68475A7356F4DBAA6A4BD44627675E63BF1E8A690B5DE0D85B364067BD95C9CD
031DB5D7967062D9BEECE481BF611AF0449C7E155EBBDDAC40F0BEC44E586D17
6DA4742FEE11F9D4818E5BAE5CAB11610132549E915ACC6E3E80365D12C37E95
67FD76EF4298E50673457581DC90D2369E3231D134A93E5757FEFB949F542207
B869945EFB4D3911AEA7CF72587A5E67D236A6E9CF26101D627EDA334A9C6A33
24F61F860F6A34B01D451BD4327C184559DA1F2D7B3725519177A26F173AFDDE
2CB13154F4271B0EBA382413197CF8F595F155F90676A5FACE53C44CADAC99C6
F7A08CE4EFBA014B7EE12DF4C5BD44D19AF78538D9D11F6DC1EEC0CA3E9C8CE2
E69702521277BE8FB42639DAB1F91350BC000F097E1AA2761AF25BD069FD4C8A
5A9569A3FC1B3159CE3A4B689502634218260D013B39F2770485E076F8326971
621622945A2D00E9B887EE75217BEE944DAE1E326B38C17BB28FA2BC28FDC7FF
1857573FE5F1DDEC65B780BEAB5326325A1BCC7F99373FA8FEFC25C64B61D7EF
8CACCF123CC28B1E0B947D6008B76D22E33BBF1B9125197C08259DD2A5BC2017
24041008DE1C915DC249ECBEC0AA428246EF1628C4B5AF867BD6189B70AB5451
BEED6E61050B98FB04429020A62DCF7DFD181AF398BC5AC32412F28A7EC0B30F
8135923E008B5EE679F624CA7B35FC1FA0C4808301BA2A6A8F69F99481783AAF
34F5B503379E60DFD59342CE0E8A3263E52888757AB24B6C6895EEE36556FDCF
B568BE78178E00D6E2F6AF8490968F7185358A62C7430549AD98FD6730F187F5
FB5296078EC442EA36E5D0D7B740C7E48D5B5F35AF0359A48DC4767199F04F7B
416900C940894FEA4F37775B47CC0EE031E3D07E696632A3FAACD23AEC9EF83F
14C9804216AB2B27B5BBF92629963E1121C5B5DAD54C7708C4A053FFD166847E
E9DAEDB26D60D10F11C1B5740D2687A605DAA979EC5F7E10557FEB86364450A7
281CC9909694EB46DD394C2D6B462BC7BE6E9E6372821CDA47D2104AB6450E89
100209B1F5488F8BDADD40DCFA9AAE592A1C394598D7C17F5A162D335313FC93
AEFA30E869A7ACB66EE0222BC228F4767AA360DC9689F3FE1A933F024531D214
547E7D7BC01796D82C9A86A1A709E3D0507505234810A6379AD4828F3C294234
2211C1562454F09351E73ECB0E16606478C5D4684D87C8DC50A0F695C9CD39D9
7DF78A3A6BB59EBDCF904905CC496FB22964EBB205F12143EA308F3F52BA2EF7
F8443B731F02E558B2978A70951C7F42D9C96B08DDCBBBE2D496A55CBFC025D0
21072EA2C431BF70AC3708224C1258F8D7254D673447126ED57E7EED6EF08B1E
A1F9DDD13B04773468CA10F4355A98C2AF9C2B70D3C3ECAD4B455B8AB40A8EBC
73BA880F798C46CE4CDF6057551B257D1380A65D2A21E90C45F1F35AD7298682
763F52EFABEB3703161C8EE49C5D9F978A05E09A080EA06E915D67DCA473C100
ED26780B46C7435A40026264713E6DE638FED3E7BB30601B42CAAB3B297EB76D
947E86658107D458CC2E6A0D5496066846F59C30F5A06A7CDD1C60E71E7C073D
6EC5EAAB4012C5D261FE4086079E22377EB2E2286F17D879072F58019305BCAC
9731D5AC876AF7CA7B9B8388630A80493362A5126FEB977EF9350DEA6549E8D7
8CCAC5EE61CBD30B39AFE9B3AB5EF8E45361983832ABCB3DEAEFD4765EF89467
0F9DADE3962148CB010E75909C031C86A06BC02742E3D432630F02DBB0A82DA0
68D89A0BC497951680B70ACFA34DD4DD147A96B177BCC9564EC0F67B12B47A6E
CA845513F1B52F9C67960AC584CF937F95BD08303C47205F31B8B2D417C454AD
7059A2D5720937C4E0F150E5CC96016D74ECB4A8AF41494CDFC88F5CF0116810
07518DEAA45BC9B553A63F2D498841ED9F7A409A21C71746424A499CCE7A3C68
AC1801AE8BA06ACCDD52768FA56F73259B1E8849D6EBB4723942C8D348EC6686
6304D41973F487D4C10820D53C69DC2329FF13FF26909F9C77D8E5D33C44B23D
D33A88D1BD17F2D9A8DDB85D2423E006145DBE067CF452A03299EEA60058282C
1FD23F85424541B1E45CFAED095A25AB839A7F9FD16E320D488E74FCE5E0C83F
7C386A1680B8AE69C7884B8EF94C216BD124414088DB4957DD1E286DE6D3F4AC
8757A2290B9C858A614592FC05F286B0C5A6BE3D1FEFB30E260BD8BD9B29728F
A621715A98BD588B5C95BC538A780087D1D70E372A9483EFD6045C3394C96F5D
47BAFA3A8256638B495FF7F5C9108DEB1AF9D8FCA30F004A1A1EC45C175AB076
BEADEF10E4352727886E5983E7E3D38A1876BBE538572887E9176587DB239CC0
6FFC1853BED217A4EA7D89DAFB186E94CC7E22A074DD8E7BE69038C1555339C1
BAADBEEA29F366DAB1D44B086D6F6E313EC205018F0D518C6DC9C01F4F9202C7
6EA8143BC76B3279F144EC512D0D1AD771361AEEA9A74CBF6D2C8DBA96A49E86
4F7B7ED657DDC3269D5CB429EE9184B21927268D88BAE2638DC4A3019AF5E3BC
5F65A11641E47780FA597C59009DB79F5F8A5BA07AB824816A2FA46C5FF2282A
B4C6713B52372D5D69BC7D10482EEE3294DF3509A6681E5898594FE400975330
BB3816DA9C45B0705651A5374B66BA326023A42147EF0500B00575FF8E57A4E0
AFBBBDED22C1385B4F2EB6E9D580FAABFA38EAF53F51719E5510A34568482FF8
EC819D4FEA22362490C1CF3A9B9D769188794C876F18460ECADACC4F4AD2B280
D5AD14C1B645D80572DBF656AEEA65A47073C81812B532FD0D0A775D5D97519F
4A1F51028B7605CC48801F94DC11DAF3860B000C51E51FF015B0E8F58F62689E
2B665F25723F18F8FB73FCC76BD8F2FBC4CBCFAEA234817DC0B30743A1A2A466
071BE79D45CFE4A401056B1162FB6A7E561B2FF79D5D887B78826A7A2DA0C4A4
1922BFCFD0EBCD9ECF46DEE531C72FC9C578722BF866EF9BE6B812ECE1DB9DB4
AF86AF3F3039A969B50538B7D3A2BC66AC3351AADB941313B79CC70C3AAE6510
4071AEF6F7C0B3CB16664F599577225EE0830F1A60FE78F82E6077606ED8976A
931633CE3A67CB2C73CCE6CD69D7ECBDE9905865935038B40EEA2B8B3BA7C089
CC594BE0D8C50ABBBA0CB4D36DEC8A8444BE386ECF5695B62BA66FB66494271D
6BA420D9825644A7DFA92EBCCB7CF021555382584555C4F817C20B89E708DE95
539C44DDB5B253546CA988A7ADBD3B290A936E2B0E3582D152FCC577702A196B
020F71596983BB1114E39F048F465E7030ED1A24A676B1288A84B639F05E7830
4D3CA9CC4612C676E5230A75E7D83C91A288B59855C92174863C61D7DB27AFB6
615CBC44FE9DA84702B6E940EFF816F20C4D7F7124BFC85E48A491202DE3A70B
CA05D42CFEE7E2F6C7778D4BB3745544448F8A3BD51245F9D797E7DB305C6E0C
E50B49EBC04A7C523805C159DFDAB8374E832AB0295D4D67E887D9BFDF758BB4
18D59DB3AD7DD4AF751235C411E2B800916A24B187E328AE7D5D0EA5706BF681
A1DB0415C542E4928762231173A337B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 28 /oslash put
dup 34 /quotedblright put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D207125947C3797DDDDF27B0F05D69411E79DF1586378263BE1BFB9863BF9B1
B2CE4EAEDABE212A040FCA30A5AC8F758F4B543CA539858D7D2DA5E8D4AE8343
DA1C74EFA3207BFD3AAF761712526884385719C5B2B1C3C2A125975270E98803
BE1717D7FD9500E68B2C77DBDA49C6C7CC468986AD847D5976FA7D445365047C
DEC7C2EA876A6D2048DB062B6682A49CB88706982B6687B8E51E12F0AD378B85
8DFDA6DD200D31F6BA872ACBEBA94F1FE5920A18A2F17DA30AFEB722FEC5701C
B3691A04D0896F1A60DA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CC21E5301
C5B8623C5878851857B3E665490A7FFCE5A8DC0FFCF3D56BF55E4AB2ACC6743F
4DE7216BA87F183CC0CA3266EDD52D3A8681B75AD590B3989A01A62745ACD499
17C30C6D5AB9B7AE32D938D2A9257D3A4444614D8DAADBDEE4C99F4FF66DE769
52F52733B7F3B44F48E7FBBD1038AE21593A5B8B4C649ACB5F5C66A5E4C7CE09
E8530FF9E9E77B6982E21ABE6EAE47E2372B4552D66D2C141237569D7CE41808
CD3259B7325463CD9475124A0453475186BB44083AE9262BD5EBA8E709E36725
A1257264A4CE1F08102F2D4BD5640F758B4ADA3F4EC9DBEC4063547AC174E81C
F88EF1B4ABF1EDB4C6C94053DAEA20D3B36179F1490B23A95AD7CA9B8C5E797D
B75DB61D83AF76F0EB2A612502CE147B11579A6C8BC27630AE14535C0B77E4C1
06578A1C23B48A90E2E786462439CF2CC73F89825E5E7B4AE1245E300CED4B30
C9EDB92AC36F7DFD0FABD94996A0D326D478B7783C87AE473351ABD014CD380C
EF7BFBB68CDB7C90D1C85A5D96C622B04FCDDB40B675F081053377364DEC2F69
29224D4E70B69FD185D55ACD4D1E263FA8F13279E19089FB17A1283E72AD6FA3
26370C7F0BCCA2CC89C048FEC738F2AABB0A36AB3A61FB3C8731450623CA88FE
C8ECAD1BEE7A9A33C8C40DD2F4B12106F61E525F08CF4752ED2343AEB46D89CA
8103F7C53355250B7A5F99C3BE4370DAA818DAAA7280496C8BBDFE4480A36CD4
F92ED541B4CEDD13F1D5A0023C7BC1F219150A4F9C0B98A440E0A0786F32F1C9
19DD28668DA7A60C446A2C87954489F24E742ABE05387BBEE210760F30A06821
56EACE37BDAACDAFDF84C683D992894DD9C126FD6571624D7CE37CEF6478F82A
A536E68F009EFADEC89C595390BC25C7BBB4F744E0A34913ED4F3CEF7295F7CB
B7FFC71FC82F03CD5E0DB79EA523DFD240504D5A4A0953C8F30EF69B3B39A561
3325DCF159B27BCFAE3AEAE84C047D6361229B6B896FA0BC2E8BF93A60183766
2CD44DC4EB4988B9CDA332B525BC2DB4584FEF623337FB4393F9DD009BCCE5C2
F6C9B792E2185432C09B97FD9802792535160C1B7BE2A1A8252D8E05B37ADEF8
341F7D9F6C26A1FCB03A9EC77B59540B407D49A5C52458C31CBBDDEA0FCCABDD
ADEE2C931DC4860979653E71F8A1E10E7805DCF438CD9F6FDF01179347DBA9F2
647BAB05369B26B827AD99B87280B662E77A0C80C0A828A47BB4D8A2FE7E9F4D
5097FAF3D631F64BFC518B5F6BE13884C3F70369822915A56721FD7F5958DC4F
9E24851089AFF3E608D2242AC08B868FDAAAB0AAF8C14BF3D4417949FD23B10F
40A4179A630994CEF7A2359122F3E9F7096E9E92D3431C3DD7E8F1E60E3413BE
D7753357281A6ADA56EDD51EAE468312FC75114EC09FEA182E84A9AE7F82F4D1
0AE4F1BCC1C4188BA00840AFA09862A7C6579DE0654DFF2767AAE46D4E754A22
5FEA2A9CA4ED8AA2454F1E6DD7C7CD63886109B9796DBE67225616FC555CD945
90072F04C5A67AE11CFF7E5CE97B67525D2FA055A29F927F9FA46A119354DC4A
93EDB7B6F239BC2C10D443E0F90CC36D65D628F75A8EA758F6C8F93ECC036EAC
CF01A6F2D73F6A5AF9C72FA4328F977C22150E9DC454E1C2FA91315123D1A507
CA174839C70C03D0F641ADAB8771F1038B06B22FD2E73579929F1BF420B674BF
708DB7E5E02AFF78865E03C0C0D6DE7B16FF0F4B407962C3723BF6E61ECC8DD3
1E3337EACD844F717AE5F28D0726BA35B2A0F95CD0323746254A5EA9D63C064A
8F59D7A42A3445286F80E311383CE52AB9C73967BA45AADEEAC1A82C13A2C4CC
7F1EDD5CB4F81790F2F8351500DDB9D271921500E788E9623DD2E25F1CDF9970
6AC59F0A33FE83C973E6D2CC7AE8BE89CD7A503788ABA1BF0D9C2DCDEE1EDDB0
B6F2EA1ADD9053A3367BA3C28DB698CA74375AD117698B08908DEE15D0F4BD22
339E88CAC825238CE597FC3CE1471DF76254BF7C2851C7274D46B0AD1FF10C69
E9AA8238CE9FE044B1F07CAFB376C1724A9C36A7119B1E06B1A1A213262E4D4A
BBD8DF2EDF5175D4D9A88D0F77447D1E1F1C28A032462FE322A0B17F5CD2CD24
ACB00501DE3CB6D6D9D65FD51C4556974CEC3D5F27E9BBB22921D7082423D46E
B801F8502449684418493C3E07689B50BCD398B6F41DAA0D68C3608FB168A9AF
854E83558BB80F465AA564EFEF24021480D75B36CEF1F23878A36BF4CDC435EC
AE7B8342F16D054A1F332267E2724CC2AC98B6B044F503AA0FBC7E138A05E23A
93EDEE4D73C7E5148EA820443030CA49D193CCE06DC0EB25F19303DD11F1C57D
0A2FCD28A4516DD563692DAB5BFD98ACF80D5927A07DA8A3AA987A899E28EBF3
6401C42D31DBE92073F1C32669FA2A748A8DDD3FEB75118D4690A28A1AC09707
2F623DA41AFB80699B814CB4B1039DDE13A0F1AE59016C00953CA47FE1F0A9E9
843F0EE896ADE39E72A9AF2ED6BF1F40F6A5AF97615653B19CF15F936E09CBA0
290BEBAEE375183746FC9D762EDD8A41EE4E5BEC668B24430916ED58EF36404E
3B912BF4BFE16F02EE2B1046999CC8065ADB2FE030F6715EB6E2988837896A40
18DB4E2E6650DB6CA843E7AB4978F784BEA0EFD1713E3A64A1DE83DC920AF7AA
157F44809F8C06CC2CD671AA82BA6F6A5329E548515822117C78D6A816D6FFE9
387DA38FFAE33640F4705FA25F06DEF082C11FD7E188D948B4D41FEBAF2A1E9B
5C60C985D0EF434A0E6E067B6BE3D70825C75260C7BA8AF622C14AE33ACB6744
D42EF233E693760653583A608AB63D0877083E37A0C98AB19C2573816446F67F
C0918F57744543B4BEE6E6DFF754E1C2BF81704DE99F6401CD68C149733C368B
68FF3E4CD4684C0765E010E52B814FB0FDA67B534D2982B7AF62E61B87F642D9
1EBF8E0C78E009C1D76AA289E404F8D7E1DFEBD1109871AA1D2E57DDC1A28B4B
B67DB539526B34EBAFB3A5B10696D626CC76A601B5CBADDF1DC5D0DA5BC3695D
83B9BF72CCE0B215E31B4A14A78F460C165F071D64765A73BFBE5BBEBD2C8189
481DA6C3EB0788C4A52B04EE55F4D26738F5DCF53F46C230CCB8B5C80B949FB6
D3EEC26E1937501513BA2B2AD1BB854F4FD84F2A8FC87772C4AC84326CF773F9
286E14BC254AB29A187503C1A3FADB108906C0B612F64BF6A04EE2CA4E7D4D9B
EAA2F08912820ED33D2D04954C3E50E6D73AC566775A240DA81E81332C87E530
8DE6ED7FC9C75D5450D9E1DB1ADB7A79A2D1708722AE4EA6AEA3538B0BBDE6BC
0CABDA86905BB32F149863D185C09BFDDB6C730495AD84379828EC5C0846FBE7
476B22C874EB33932433AE9AFAD8AEECDE731F2F0924C4D34407275CC03869EE
8FDFF2E996EB75F9B1133110F0C6BF2FC41825729A7FCACF149F05D372CEBF5D
63C8C9B2DB307D5231B38B416E628EEC807D2DBB2B89327492390C051F2A1A38
15F85638B935599DCD86E6F3D2159DDFC9BEE9E3FD1916F9090277674F38EBDB
1F4C634E70BD6E9792119C7157EE099AC0FC6649B401B0C12835C080C3681863
7B5E98244794033DBB3F1C4E7825FB84EABC5B1B9FDFBBD3203D0B1523116D54
3E76B471E0B2EA22B1003AB1E866168546A37F2A35B8C448DB711AA96C9D5B50
E40859444704B4AC68A6206E73B2BA0DEE69D1ED335F4606759364EC0E0AE6E7
A558C2288E6A14E8795C5F87372DB808BA6AC7AB72219A67440F1CB7A08EC724
3871BA56AA48F4664F346B7F79FA9C5AFBD2FEFE764264634A68B49037F48CA7
DB34E294907634BB23C2569D0F4E5DF4377CD78555138FC1C55BBD3494A7C7DE
64749729AAAD1525C560CBB4B576CCA6257E97DB530D5BC8F426FC260ED5FD3F
7D6D19B7CEBCCBF6862406EE76EC3E1A27E735157A55D4AB870307C93AB6BF5F
A98F1EE86DDA3E6BF658E0E805DB0BED3B12AC913598425DE2B2B0E7ECD9802F
921498A0E91BBD0E377593E6BEDB1C270435451E5A3C574A29A5AACD4B5A281D
A9DC7F0207BB2EFB7C5840F9A0556A6081396BA2E4F5BAE54BF9D552942DFC70
700E46DEB7877DFA8D56C4E040E4827A2A401F8339054E95C9FD1E628E236759
556EB3F7C02CDD1A93BEB3DD38513DD97BEE54C9A3184B5F7807474A2DCB059F
5043CA0F3F869A9B5BF8AB00ED580A01799A8A3A5E38F87961D957E1AA4A9B9E
0809FA450A2AFEE7E1080054D9935AF0E7B59ECBA207FD82BD56D776C004A7E0
C462FF74410B040C0DB5012F539EF89B3DC61A2EF072A3251C41F2D00E4191A8
22B9190FA0A104536EAE787B9D6F61E041727CF985BD8B65413F1F9F93CC3C23
C1449A170EF7A8E6BE6F06E4EE33087CCEB2C3856FE5D718EBF52B4B804A9E73
E721EA50A5061E2100D064BC7372A7C58950D6223744B214129F0849A6E2BFFC
2533FDDA12A6B918C0601474B1D309910D60F890A9DD113AD7A36C650FC189F9
FA452074F43938FBADCC8D52200B58B0A52B75446C0A45775E58BEBBFB2ECC9A
4F43BC219A5FBFC4BBCB37F59D39FE95DE5BC77814360B149166C9B55F8587A6
53B4F2861D430FDA934AB445163C9CD5BBDAEEA5470617B76809FBFECEDD5913
81A84BFCCE7BB08DAD61825D032AFD9F2E673227072861E7F59E35A63A8A6B5E
528F34F5BE3F46E0D97206CEC98C42B1AED8DB094052E82107F26DFD6F4A4E3A
6751988BA5B6CA3EDD66897041E750A400A5039FA47A56FE6A2356896211D7F2
2E0E58AB8B57D38DC28239B3EA8E028F086962128C5B6AD0C8A60AF7C105170B
0455A221CE39983ECACAE03EBB039FEBF69E62B0E257C98F3100A2C24AC0073E
82026308AF4595DE3DF6DF9BF91BF759A255B97E51B2F92201F096AE0C04F815
C3FF0910D5677A02F123B5D307222EB54B3ECCB902C2B11C3183EA23EC508D94
131276D8660534496199B1DD88D04CA6880F0F525E3ABAC2A210806EB3D2A781
88743DD08AD9F1B394AC0540A7B348E82DE155BB23F31B55D9092C78E6B9C119
00070F2E5A93A028DC6411F7B3E37030C90CBED39C6CE7A11C910E8E84D588D6
FC757D425998141050D6489D9D85F19F2C53DE5B993167C7607C2C71E9B86DB9
0DC0A27251CBF922B3BA507EEE5765FFCE72326A57EFD8492F1D98710905BC95
35F8362D572B9373F48095A808FA273DE425B3402318FF1B79A3C5BF97C919EA
DB41CBAF3F1327AC11B2227EBE9B8D30555E675D35AEE183009CE6FB11CD405E
744ADF4A633D9A2577A8ACC97AF21FA803578C940C74B7EF0F4F6235BC6D183B
018EA9FCC8F4B72D46E9E159B89115E0AFCF5A35341F784CA1B8D9570FBEDE43
AD782F5B29DC63CFD2D35534E3C13AE41380FA45B7FC5298250AF3D987835B60
8BA125074F9738BCC0C9392552DC0F8F58B7AD395596D3F13EB26672F2C1C2E7
F3371CC1F33591F2A8D03C2E8F59C5CE39C8ABD6B8E3807F275CBC11793E1F23
88E3CB691D490B1FA656B1F8371EC68DFDD7CE97C0BDF343C267E733EA03E70B
91784D16AB2CB6F62F4785D0A5A91EFD72922EF1763B393FCEC48A992FD7033D
81346FAAECFE29E6DF6D3F52A4014D6EC0AE2BDFF6FC8C7D577295968FCB1C0A
C1B0CBD230E6B262F94BFACCD036E3059C95548C0D32D03170F4F73A23A2CFC1
D912F39B78D5E61E4EAC9FE4344F8AF9804E8B23690BE5D9231E98AD79C62703
4460CF01282A9A047F9CC4A851CA23A0C0C3AF3AF4A44E2A0546D1F288EAA7B4
A42401528A968251112452C18F8D149066B5077141A0BD0CA51D83406CD1477D
537F4E45D5BA2665F5543049A135BD9B55903CE21EF68BBCFF5217D014346A15
7EB214B0CC375B5CE4344C935F69C7BA3B6652885BA6BD99B0E9A3F415A2D9E1
4CF4FEEF1D6ED6566D7E3CC0D1A641BA83668B16FE50E1853A192513AD25830A
D979A71253D0337C57195B410F742821BD3225D9F2AEE61E15B339C6928EAF05
C1B8A97F03F05774730FE79EF0E1C10DF7FC093F1D8BD86443B3C444A6195BD6
36163F7B526092ECF7525937E4D8A58C4DC47349E70DB1CBFFA7CE80B3D7D472
E405073657016BD26285201EF36EE41E9CAE4D50B542CF3EB2C0C1EF780FDE87
3B10D57995151C1ACA6B0D451FC2F6E9575DB00FEF83E3E9726129F54C00B54E
E0B5D42CAB4D5FAE6AD96434A5733113ED74ECB754032218986D152F2C49F494
D5D44841AF1469EEC890191C319885CB049A499DB02B556BB22818E2C7CB2BB9
0D63BE793296A22FAEC5AF3276567E651187027075EA1C8090E0D6A260A0E6C5
BDD97E88D530DF35BBABEE8899F900E544C76B1567531AC7E9E5B752506F6C28
B9DDFF1B5F83E9328D2DDE9F5D6C2C9C37809D2D98242AA2D8501887E9985C22
8FF1679FDFC279BA242213E222D1308953133338355904DA22349A847A6B7E8B
2CF236678F8996AA9FA1A1729B2E591F479D6D617F2DB419943AE56125BD6816
65312261100C959360E919219899B5186DADA0F0258A7F914011401DC7C51636
4D55F28553E5E56C870EFBF5D7BDB483668C20C2EAC3E92F97C2F21CE986C055
F2FF74ABB1E56362A3B510CCBC4B8048AA3A9E784A26B8AC28B231573EF4D8EA
A51D3E25254555333C994C81DF0CD9B5E64328E00EBB05C2B0A95E348219A38F
B6BDB67ACCBAA7303DDA879BC7F993B421720A423BABE6017A30F1E51E2682C7
D2FF55C9EE9E708BF515D97BB014CC68C1EB741E40EACCCF1A7E8DE6EB1B0B3F
AFB16034654F262721493FA18F610432EA4AC0D43C3F3C06F097BB8B2F9FE942
D69CC918777B3CD323C1AA94FD4AB06960D0F6945D4325B57F60D08398C7D564
45365E299231B8770725BD308EEC7504B43809FFB5E7DC390D3C3567B047C6B3
5C47D940085A63CD69AB5A1E7220582C3733A7BCBEDDA26092373D6B23E4FC92
DD488349CB172B98D06E2D9E0FCE6FB801B5BF17252058EB0F89BB0E78528FDD
7D5B64D693A11B83D86215DBEBC02C042DF54908136BAF515ECE8D67ADDA608D
2CDCC6B573D08E8E03D03D0F4B409CBF37277DFAB8C5FA2AAE6660EADB55C58E
8254D644532FC29F00C5176F93C678EC29D7090BF490E997708362F2B6FBE814
52D350C6D2EC4F891E66FCCBCC44FC1232584656E3057E4452385A45B8E7FC18
74F4AE7063D25B1B989EC986FAA1A6F3366CF9E0D6ECD3B9C63F9D3886E107AF
98FB1438C2AB5107666CD7CBE86A259563840FF7EE0E6A1155AD0961F8B34C54
C209FB3B6E5DFEB31CF63CA012D11E24CB7AFA0F1EC32D3196ABB8F9ABEDB949
6CD989FB7D2D3123FB82A456B438B378F78FDB0193DB100752B0B9C16FED8E87
424830EDADD4375714869B2B2D4CB9125CC4A760EF44E3154308DAA26198ED97
93D2F90CD76A501CF6FC40CD157530EFB2A1AB794F4260FD31D93C0F970C59E5
AB435BBD65646792EAF0CDBC103FBC3C012710396B7A5BFAB027E837E37F5D79
6999EE3062FE331EDBA8787184A25583E150B11568794620A3DC43826C8FBCE4
179B11CDAD1F19C7AE2A73BE5998C442A2E5911A2B9CDD90F5CD4172F3FFAA31
2E6CEF897424D1DE1C27F3277E4FA67E69F3B968CD5F2F8EB1DCD9800B59CFCD
868EAC04C3EF0B97DC6D66B6CBDFE9D437F5906B3DF4D398B006ECE9F8257FA8
FA22E94DE39B8DEF2A241E245427DD6674D7052DF6AE8EBD7EAFF9B94FB5BCA7
AC46201E688C8B6EB6E84EC6C783F99456285E05BCA1F03C26C6718A6C614496
BD1EE424D5AED71DA7DDB0222743CDF1F18EF7652D70AC75737FED9450F177BF
C5D41820A11CE670ED47DCC59E67DF244173D446801A5B0EBD84D71186A627D3
F81D390734F068D2F8DBFDB490E6A98AD22B61E703B715FC69964757CFB57C1B
81322536A297AC56C18DD28457E9F922F669F406CA2817A420CA6A8AA80C105E
970F274600875B91AA5763CD81A2E84F6FF56050F9E0DFDBABEDBD64BECCF938
7395CAE79CE8A3C93F6D3BCD99CA65313BC094EA90921CCC3E676DE644F89C6D
D0CC5CB9086DDCB4A5B67F29BA5EDDF0C9686A2DC9FE856817F637915AE076F5
6142615F12F4ABC02A103882289177E9F5962668FBB0AE481B087400C11F1E10
9D257C2D458599774822D2E2558B8A9B17AEB3061E050085A011BA02054691C1
908E5882A61DF92F053111CEFAE19A52D3FF6A9F234E1B57418D6BA9B7F9EF9A
0273DE18BCE99C623A3E366DAA06517F4748F443DCD9D6D7DE0BB16BAC1A9FC7
774118ACF6F9EBA6B495E6E247D95CBA6AFA6986EE325C724F08822450F8C86A
B1F415F96467C3FAB9FEDBD397B2E6DA5C5375A13FEB07E4A80E42DDA4ABF81B
954227DAF9725603F4005480E47C868308F390838BF6878EE46347CC80921093
42DE3A3544F19B686AC0D125D1C774D9CD0384745791222C33457D864A026AE5
39C8257FD5C7DA955D17A8EC2A9F086898BA54615F16F84164664428D00F8E8C
C02A169F739CE429F8E86D9C3313460835D1380519B5616B7081F18EB64700F8
E17943AFF6979D628F0B43BB4DA08EF6F8CC4A7D1C1BCF51D0791D6C5796C0B5
5B1BC95CC7E6BEA0A94A3EA8AC8C85000932A6DFEC234FA7D53F263740A9CD39
C4BADA41FCC8D18A3D9DDC6D1665B31701AD5DA1A86D526D19F9B74F631B7952
26F7F3676FAF1905586B006A956814B79C21D381409AE9E09CAD796D5B0387B7
493A1078ED1989C3867EEC3CFDA6167BF0B0AFCEE4421D92E8AD4591FBE17E22
B23FE54A3BD635CE13033AADDF4106CDE0DC38559E3016121D82BCF5FB6101BF
F0EA996C57CA977611824A32A187EC0F8777A6B186C8FD9E98BA1B2FB710DD7B
D8B10D5524D72E07FDD71174E9630B445973D23A073AEB4A03B18E7D494899EE
47CCD3AE3D3A23C39FBD14B0646692CFC90F586DD82F607545F8DF95062E8AF1
3D72639CD80C2B10C0AF4DA005BBE60B37500F974855FC184F66B4A7F2476A84
B141A7645972C5CB4843C9E17F84A71222358152F9021E56477635D996F03CFF
525267A5E250FDA06539602D5A341F16E01840B1CD684925666F79E8F554B33F
C4D54951970528B0027D48546E35AA0D0C72908D04147FAF884F56E6EF7A0917
089F11409EA052430E50261F6F19CBA79DFDEBA1E28A4944C9C38AB320C2F29A
917C2A27993EFDF2C7942EC247AD8F3F26C9E60D6B06E0FC1CBA6DFA096E80D7
112807222A7A98D9EABAA617C0137E062BEEF7E131CB1E24F5F32C97BB000243
F8022EF996F0A54A515EA79614E690B806E712AAD773D42C08EC5D02FD3C0C1E
506779B9A728375DCBD674CBBF3B93676077C18190F004C990CE84B0B0670563
C26A3F863C255B9F96AA9FF8DF8281EE77546799F47975FB6667103BAE84E9B6
8601702E195253715F7CFAE605731EFC124C92075CCA96A879C11F7670564A4C
0EC90E9BFD40F171A736CB381085A4FABBCFDEEE1526CB9BCBF9560662080945
0B1B044B1C588E85F170C5ED5F3E7A45150AEBCA0C59564519BBBDDA3E67A4CE
E262607BBA0C01C67B460462B92352EE895B968401A3CD8197D52CFD8179DD0D
4CA0DB371DB75D55010F22539056939926D2F4A6E344ED081EF3E0BFDDC1A9CC
510E07A9824DD92DB76EA37AED38AB9637101BBA97FA2029990B21697905812D
45FA88F96D8D08222C0B956F9A1F16271D4FCFB48BBD070C6EA411CDFC88152E
69501FBA8AC2D9C7089336421822FA743ACD32B5A017ABF3D3B33E7D926FA1FA
672D3C56C4525CF931D3A14025EA23CEA667C402D19E07885BB78CC1CC0CB969
2D83D7A395CD53CE14C45D477AF31CD7D18F7A9463FCD81303668BD23D210532
05FA9E2A1822B2768652B679EBB133E6ED29B5A9300982C27C3156EA2C97FB93
724A7773A3DBAC4B9D9AC572F70F6034B332CAB8EAC068A426FB515EC02F43DE
7476789903E6DA12D854BF28B4CE349758D503ABF905AE044D1010A08C64C87E
B74DBD792E1119C27D0EAF7EBC8B01C31CCD5ADE1768CF5B4DD36ED4D0F8C99C
F4E3FFBBD5DD573182021A7D0A3F02F22A483C86A8F063BED7BE7827828A884D
2118E69A017810FE4ED9D8B198E6E941A8020CB782E3E5D462BDA35EBF31F4AD
DF92D79DFCFBE73B33D6A8B19B7B47FF6FF9588074B1E61773F3621B7F741D76
4410D2C5483DA8ED941F5EBEDBD40E20B140ABD4B9459C4AADC595551A99B21C
AAE146ABD06A4A47F811E08434C84933E8A3C1D5349E72FF94742E26D4312C2E
11D604FB1BB209C4622EEA067C295BF2EEB583F4F1227F5867464B06960474B5
11AACCCDC56ED05DEFEBA02B6BD5C4602C9C11C6DF7AFDD0CE3A2BECC10259CA
E458AD1C2010A35B43C405E36A8D212448F692E52379A5C8BBD94DC15BE65C01
C14162CD6BB774F7C2E3213147D8586E6606EDF5AB9971F62C0C7F84F1432D7B
195CA17EB9042EBF28356F9492B504A1ACEA9EAB123609EDC9FBF0EC01B0BE07
92189E31C273051A6C198C74F39BE98EA573EF1B08F8988C878DAFC27DAAD0DE
2FA4C93F984A1F29AABC4E510E2709AF688F34661D8EA4CCBACF8037C571672B
FCA8FC1389708BA2154C121DA69D09D685939221CB9547F53ED5D140596FC551
D4C2BE86F161A6834767217467DAD5AE5CE313A18C15D772108339C0A085471D
98F6514BC6FDB48853E9528579F7FC8C61F147CD440598B0FC4664CEAE4430FE
449225EA3AF07F753D9EBF98AF1154CE5911CF0BC91870DB829C6966496B4E59
C7DB1C14843FD6BD0958F2A9CDF73DE86999408FB069DD867C1A71872B6D1D4D
0F0340E2E98C632E3BA2F317662BAEBDD2AE07CC569E95C8095AFC2BB9A2C2DE
F81932F79A74B208521421D31CBD0F1B31765BE2484BD054151B3A11000A93ED
822FB9BAF38A5910B1499AC48783D83C2FD2366CE24C428063453ABC5A9C65C4
E32133F5D0CF683CB9AFFE3725179A399A71385EFDC751C58AF4B94FA993455D
5DDDB3D6B20917BAAE367386A05FEBC4B7E65FBAFFBD3E5EFD1F1F0D310EACB7
D9C94C5B9467A1C9FAC2574B7023F3A14E3AEBCFE208502F24F52E0FBFC32125
2E4255C867996B0B7388975A3D23CC298EA806ED75EF5A281735E22859B5710D
4BC4C7C291F23469F5C0CB97B7357A7EA418328F686B885D15D5058B4CB7FC17
80E06064B3ECCCE6E426135F1F85E3E21FCEEF81820BA80961731C95149045C9
49746CC121E3C10860A050061C34CB0B58B40AEB489E6C46EF056D3737156EFC
F12D15A2094EA536A3D57923A4F6022CE2ED95A442B7015141F5EBC7EE3179C2
4B3D429C128C585EC9E573B5D89F1DF1DB2B9C7962AE7F2BE91E4242EB1C2A1C
B120C873AE4AA9A1A3688C803A6BE5B14E8F61B1CFC8844AC30593A380AF60DB
6C292AD35ABEA7B3E691D3BB1D80CEED73812BDCB51EE6A6D6C8F90BC084AEA2
7681BBB5162787A77F224705898F093A052598916C5199331D572C52A06E6CE1
874BDABBBE7D67BF136013AE6DF1B29C9842D7B03710B8CF8956A26E926DB42E
9A8741C568193809BC45A62BC8C6675AE38AB6898FA2781309744EAB3F347C04
8DBB54465813E33F1E80381F04FAD2D268D62063113B3C07CC0C7C103AADA30C
19246E54C527764965629E3E206685B7452C6BAC5F5CEAD965B5FDAE5EF330B0
94AD421FD5F0C3D670E793283826128CD167DB255725051FEFA53A5CA982CA1A
5E1B8B06D2D659C1FF8B48049B339C8C65DF9290AB8B1E4E1D9E13FBDF9925FA
88C8E709598CF761A59B0DE48569690455316204952461DE87CED1A7DA056A37
948EA4814A0767B1D554781AA4473BEB18E795941D0E9D24B19EECE662C75966
5DF82ED1F03CADB7FC0D99DB499907ACAC6CDCAA1493A3CB56165261D77150E5
B0F86FA33D3F464D4FA5ABDA12F3432DFA6C41471394CB4598B9E8C05133EF37
705FA5CB29724E2BA4693D37F4AD194864C356A3764AF12096A5B99E15074D03
F72BB943D71EE0489E258176C64DF2B817070B9960366A4B7BDB41FAFFC286C5
5831A2F4F386EB083A66F8F7E44C31988EE3C327115DB165E51ED3706A77ED47
AA731DEEDBE7884330BCCBC7E02093299E1211491024CAB619BF064492EB2164
E760E69E9E34DBDABA26B63828F98413BB60B242E8DC4E27409A85CC198E44CA
70D0D13DC817237F4BFB4CF63184A1D945FB294FD27896A2DA968A97C9FF9CAB
92E7F772D5751B5DC22EA0CBA9BB4D03ACFDCF1E587A43BCA4DD0E7D6F175FEF
D383AF7A03C730D2EE0E5ED4689CCBB09B96FB8A55CE8BF3EE8BAA47B79ED2AC
A01E54F0FD7F2FAC1F0501F1CD426181E94AB6B794DF93E33B259B523DF0EF1A
C8D663ECB95D0F126819F19FFC99015367773327FC4363E14C7E2F5D5E7CA53E
80A02E23C7276F4EE8FDA007F9787FF2399B06B5918F8018D5AE02AA5AA63822
537125A03D271245BE26A095D5E047A54DB6A0AD92F636C1CB62E146704AFEC3
34916698F1A5BDB601BA0E5803220AEB36282AF15B5EA1CA7D83C9A260F3FD0F
936340BA68EF11ED1E326550F1A22AEABAC5EFF3FF3F8533D8746D6722CF4F35
65D1D3219AE36A36018BB3D5D254E977F82333A9C715A6E72392DBE81DA8213D
CE8CF173F0E060E637E25618DF3F9541C92F94EE20EEEF8E6398488C8EAC5DC5
FD882CD05030CB76528C1442F370A0C216F2CF0F737469C41B5393273CCFA4A5
B242E4008E288D48195F50B1D94A1015DA1FDA2F3672A1C0B940392BE4F11EC8
5EA5BF3A4C8A27CD52663C93334EDC34519447F5B0DB34DD92B02BA7A2F1AEEB
B0D087BD6806A5779B3810627CC9D37B1B1A4BB178A3176922EA8E529B40F645
32283BDAB5EBD13E8658BF00C56C58418B5699A5C72CE58A4AF0539DA290CF16
B10D7649D649C2C82B1BAB66A14B457072EA6849D80C40C08E8E23D03F4BF8B9
E33112E8C1E015E0E898DDDCEAE4AD993BA45065AE4324314199B1C803DD4F22
A68DE1A4845867D3B5643BD5A1C01A4ED78D5E460E63DAE1A4B846AD8D3F9CEF
3A128C1F10307BDDEBA22E3B8622A5DF8F1A10682DF5BFDCC4D287890F14630B
A49A3260BA0E094D5EC6DCBA966B869F228E1B99E263A579B562175761AF748F
2032858AE76887A730585C1C74D8F312A0F566A9E02A7C617A33C737B6CBC72F
8A531E74FD760FF97F971DA3348A4AEB66ADC9ED66177F4D2CCF1D64CA9A5C2B
3BDB3C5B5650E4FC88B489167E4153795B9542D8AE284F9C1A2D88332945AD9E
85D6169EB849486EE4B6544466F0645C7802D53A42B21B1BEFE3A2D26868C485
D4825E9A48EE76893AAD8290FE024E42085A77A846A479474CF2DC706F13A765
E6B42BDDF428CBB73DDE0AF877D69A84A2DD6D5B746F2249B69C28C4275FDDEA
364B0E350982AC9EB2C90334119303D24DC153D898F88C601C3EAD0FFD0DE0A4
81F3FF7E7C143C7BDA5FCD365B278048CA9FF29FC6B77F602C3AACE55D0D10BD
3EC5DF15E45968DEB2B90254B6B1AE96D2D8AE5399A756D5F88F0831B4A51B1A
ECB2223F4FEA48D27E9467B933D57C772F3D5E0055CB371205D269A6B5A33C32
506B778627769D381BA07C8D23FD1968233359A36CEC1954C0FAAD77C5FE1386
2C94E987D99E3440AA1809D29690EDCF4FCB352D51D7280BB3196A807F3E48A4
59D5BE31ED7073C4C3A2DE6D2689498CC72AE48DCC467D4C8D903BAE5D3FB097
FAC76C443B357128102FF6DC7E62720614F7C28681A434B679BBFB6DFFFE0358
8F67AE71B82FBA6B0FBF4C46853E9B64FE93C79C23516879D97F525EB32AC270
F758895BE12C0E7187C96C95A2CBD0F9291DD222A21BDD9918E936CFC789A106
F69EE2E6E376DCA65FFC77FEB0B2E4DF7F2352D34D5D1DCB52D6444A0A2564EF
26C014AE86E4F6B715654B55397E6B08E9853FFCB9E5CED31C71A451566F5153
A61D74F53651B6B802A2AEAAD95A4343DE1AA399B1E27FD9339C785A44431F94
7708621898C269333466F69BA34BEB2F9ECF03D7C4EC40644B6018C8EF3E9A30
EC22C8811D02A0A094F895A226EE7E3561BC505D0B05C72803323FF7EF7F36CA
7F951E6F4CEF957AC08857CCA193364F50B6D359C165E2833DE9204D68BBB8B5
8625D068113A0BCEA0A4E8CA16DD925751C3BECAE80E2F43163F1640CBDD4E2E
4BE14DA63BCB47C1BF038F913A43974C3D65B14E2B7C4292003F4A66EC0468BB
1EE83B6DF1167813699DB1AC6B9D84180D8198548BA4F2443544905E583A3F5C
81530CCAC958FAF3452B5ACE347B69C9380DFD699A8218937C46BC1146179687
93D193048C3D8CCFC6EF31A8FF87D5A571E5F356147B1CF6AD7104DC9164D056
7AF6D4DFAF2D7CECC5F3EBE53A9B05B1408B09B68BF966921F35C7143D0F1455
20E3F13A10C0D9B4E315F2908C582DDC6632D737C7BD40C52921F46F4E58F2CD
AC080C07EAB9B10D926AF1A4D6A5222D955A0C334B30F0F6098F83279571A7BD
D278638E26BA59E88AAAF947F768A57E3BDA3146F14AE5111F2AD186D1C7DB36
980FD64B0700662DD4395589C313BDEFF3B108CB19C0BE19F8298157822D42F3
34B8EDD2CE3FAD171B7DB88EDA20C34CF10BD2B7A4456CF93116463A761F6084
8F9A9B3AC45AAAD30779445AF7F87C467966F8AD84DE54C27E37ED39731EF13B
F7B6CC6375D30F79882946DB36CA569003711CF5C7480BBCA9FBDC2E7A0092F5
84A18E033C3D0111020218FC054CCCA4DEC4B348B415E4335B639AD69C95A143
9487F3AB0F132992FF9239C828D29CF6A282544BCA3D4E43ADF0CD8FEFF68AFD
79A0EF9603FB92E755885BA741BEC3945B875187DA774AEFFE1A8F2B3988F0D2
A21DC485D8E44E47FE961EED2A60C6527CD591DFA1E8AAC50578AF59F3FA3134
A9B68D3EC2A4A59B712C16D205B4F4806E4FC5B2EFF43AF15A575EED26BC9E16
E4826020E38B804B8E72783DAA5E09F41166C03B7EF0BBA5858155982C805C42
CCE35CD12103442C24CE9CA239B567D32692F09B374B7DCA654507D4B1CCAA87
E7F74F3C74256A182C87A5CB3D0197C13E70638308485A67B89965F4D247CB98
9F63B3BE99158B06D57E9F777E90488C4F5BEB28E8339411A243590FF1325B90
239429F4DDEC9C8E9B512F27EE66405A7AB0352954A1DF49CC4763A841C84F75
E7EE9CA54891F941A7EC94D0CB4D7694545CB405BD3A53BFB0FE25E8095641C1
518CE5AD118C76C247FF1BB13CABC64999F048A5CA01BE298569E28E6BAD0CB7
0209917A8122B96DE9574A9889F1E99714777904A653E3FBCA4E408376E29FE2
F70AC3AC33964E90AD291A3032F4198BBC3BC5E8849D679612F0026F830EBDDA
1F66C396BF947186FEA07ABA424E93433460EB41B32518F285E139A5C3071C40
1FAA1995AC5E6B133FD2E293C2385D61F8AC02A4E6C59D3C1B6EFBEFB9634602
5B73D11CC26D164F24F5516DEE1844A84D946A378F913D915EE167D518E3A492
5422894980E50E61399196F0D8D463569575FBD6FC07B286DF228952655A490D
1417ABAEED0A051102ED368000948D0166ED5BC1F644C9974E47CDA39A6304B5
114D7401EEC801A1FA77060ACA00936EF2716B520F5B968E83C77BCC1A8EC1BF
8F8E0FA4646B1B24430B4B5D9A0F0E639E0BB82B35058E66CE3181DCCBB7BC33
4B2BFDAB141578A2BFA90E723335834C98E8D572718843311BD43A3D574E13CA
EA20FD461E4E4F01A44E2D23AFA3941187FD3AC5D87747AE589AE34275D6655E
931BEB5AEF962873F8994D0DBB7B59452567D81241D2D4D09C2EB1683D2961E7
3451AE9B32E12B4E68835BA50EF1BEBA5095045A298F36A3D1C96A2E9BB3D3F3
F37811CE08C47914192ACA04442D7DF38D7E0F23DE0CD58C405A6188E596B755
E8324DF84C2E9F72ED01CCD59493AFF20B2B6AFA524C92470A3C3D7CA5DABDCC
50B70B73C89D584E377F2315181E0ED0E545C77ACBD3CB94DACD700D0CD277A7
E7C584BEE18883F8E3BA152C5DB61D050EAADB0E5E0C839D91E7D5FE61277536
D46075995756A9407AAA8634835E16693B36463E90CA08731B6F3831A431FC9D
B418658ECB8A1CA4B0EAB596210BA1B994AA1991DAE36F86246BC617908ECC3B
AAD776664B4762E4D22941AFB4D098313887ECB46A295FCEA44EADDDF847621F
4AE8855BD9E4BCEADB6926F86165E7C844A0E1323D2B6FC56134096E492E4DBF
3CA8BC4ED9A1F5FC3A20CF262CD2AD15E5648890528220F8D63CA19377FD6ECA
926736EA138DCDB5297F4E63F0B4C9501CBE9BB8AD4FF6D95487A030CFA5B70E
EC970735C27D0104F7F7FAD61D87D522CA50FFE6B112CB341C123C2E045F2551
0A20F22FD2E9BB07359B33DBCA5087D9E04406A5A494B148A4EEB43F523DF40E
27B0DC6F65502D376469DE2098E361041584F0BEA45D85353212895E41820E0D
04D54005D14FE1DCAA87C3DE7589C843020887F3103F57C905E635CC831CBBFC
3B9A1CC68B9CCE4404FC0E35A7CCB5014FA42991C330EFA3B483DE5F3E354BD1
A21C7341AAF0937DA998AFAD854F5458A0134B1AC48EE9831720B0C3BC06203A
BEF6F0F92B64E8A2D7E221307664EF70315160DDB08E89EE459682D21C267CE5
6F0A2C006014D998DDEEFAC46A6E486D36553FF12CC8CB5E47DF9740D17764D3
AE4DDCA907F76CE158C6715FD739502C5AC3312F673F0BA9C565D03DA1BFD9AB
B052F0215AB707D1E2220FAD7F3AF4426D07E6DA17E51A60FC8FE839517F2A8E
942200A20FFCEC863B833880C143C3413F1F3AD1DE2354A285BCC9E674F14530
281C573DC00DB226FF3C98C35F62DCE5C560D86C2D0BD0F3230C5D97991F6CA7
A4F595F1A7ECE96ED063A9969354988667798E4BFC396690F1D71001CAE6ADFA
67A7B3DB2CE2A5CABD12E522373069E566F992E60875DA3BFE83689AEFFF5C48
573A2207964493483A3B374D675F7D5F7DB5CD833C7BA73230C01F9C826DD1B4
D5A1D06F8E76419C6C4444B81F4178060C2841A9972E407BBE0F92C21A1BC7CD
D9E6430D76365600464EB06A20948F349B09918699256FC238B17DC19E6F5FFB
D57E63B1FC68DA0885ED789C6A7DB45668FCF77BC9B49418D409CE217D3957F1
46FC60D327D7BE724A9097CDEAAD0C181E68FC08C8BAA94D865D8888BFE28466
DAF1BB94721921B7ABD05940510182DBCA6C66C14B52E771406B40DBE959673F
59E29814390698F68FFC89F39CE841CE67DEAC870C79370A3D4974D399BD78BB
6E3B06EF5EEF10FFCF2E115748422DAB47EB0B302FF65FA5EDC4C3D84C280D97
9FD03CB16762F4BAF6ED36C8806A5955B27D78CC45B86255034850DD0DAA4AA8
6C8538956DC6E144BD9713139D7D9C25D3CCD32E4B6170DE603671CAB178A2C4
64AE3C1F6DB5B2F234BCCE874F1957192C9C4ED4D08493291474B9EA550B9716
8A6FC011CB12EBE76819D579B7599A8F794BA9CE34D7038B11F95E0C579986AD
DACCADF3A345DDF6F3ED2F9E068818375E1A333150D1E0977ED5C86DBCC69505
B55CF64DA649498438F9257055F9188A5AA4C926563979CAD433B9B5CC032007
CA1D26F0B41169990885EFFE968A6A08010A0603542A784052727237679FB897
B59965C5CC1011C013F110C4624CA86E4E4314E1ACFAABE62CED20213FF5F66B
F5891D982B548F2193C9BCD5B930C0BD62B10736A20ACE5790EAB7A782FA9951
A04CF86E904CC6A850F540B9361CC3A97C2726795EF178F97217E25B0189067F
5B736A5634CFF934AF3CF92E04273FC71BDF0DB419C423C55DC3D80858187DD4
7CDEC445895E21A68A0EF145E9C5BAB7B966E9C9831EAAE0C5307E5A59AA713E
23B2B9E3787EA1C89FBA8E4E4CB67386D20FA9E6B52CE32651EECD8D855471BE
6DA17FAD7EB0B28851C6236D56085413D85F8D6F477D1857A8691119EF10662D
F29C6D7F92AA225CF2401C03095F8001D8293B5C59E3C9C31C1E976A7979D16C
2234209508A92D41277A95CA8F48907825431EF558252CBC372AD9125202FB34
F9C6AB43E4A915BF9C75F6F7A605D37834DA3675AD5A0186F2A9130AF6479BAB
EEE53E9BC442D3AE9801AE4531C08385BE4BF71D4E2A28209FF311D772BFE318
C621FF53B1CC7125F089463BAA060E058824A44F83C31289634AC7FA50EF20EC
B3E308AAD4FF83BD18E90BE72860E3B55B53F41D6DB852BCD81AC415921F8406
9A287BEEACE92C750F9192784EAED9E7292FF7BAAA151FED13814B25B9740F70
0A76F9781A9B49CECE810FF8ABDC1F3DE5E64BAAE879C883AB8648815EDD5749
B200A03D7C4B864103DABC4498E11993A123AE543AAEB5B5CC7528D3220DA13D
1095EB7E8769B2754D05E49B1816D1183A6DFD6997F769FD0CA080C45A877AF8
635E8AED76E5B60418E01E9A9E60569DFA85ABAA6EC723414283C0AA9A285862
F5CF3AAE41FE99CF31E630CA4B5876577CCD1E1770CB6132D9B134E7F7B9B349
4F3E814D61D81AA5DFFF1543C24FADCCD306F15611DD90E6EF4AD3FBD0EFB914
D87739100116B53B61E2024034E49780BFE063E8A5E3024D9E00BFC879B645F6
6AB267BCA89B02ED20424FB808222FF44040011072C49FDB8593738590E8B70C
3201CC35067813F529084A0C4B1F76D43ECF439CBF1ED153DE2D08F4293D1D7D
5BD0403505F279E18197C8E758BF3FB389D14BEBE8FEAC92BBA19D7FA2B7EBDB
0FF581B9310BAEB5841F3137CF55D7E6A59D689961237EC5CEE196689392A194
7141F8A07A9C4A2CFF4F622396F9A745133D33094CFABD71A860D205AE370E3B
5AECE8ACBD05D124C461E917DA382F0FA33B5C16758DE3CDB9D5A2F822BB7C22
04BDE101F333A4535311D063067D6D23A6212112BA0DD15C04B3C32CF05C4331
A851BDEFE004DB5EFA761CFEA5C2BA5023B28946F9619EB553ABAE5FCCC880DD
D531EF3E8435B880D3EBBC952358E8682FF243FA8D3C36F0DB5E164046AE26AD
0C6AD2E6655C408EBE8DE0FE6455C20A8A9C7B0F4CB2A41E855B069486400405
A338F405EE0D12B6C4F87C744DE02AB28F01F0622CBE074B9BC302E9C1638862
45B72C7A1B9C32DC5C5AED8FCE5CE9CCC306D89777EE9CF392A761E30EDFE46C
D821B193FF376129D8BE3E5DC476D0DEC03806A140110D7BA472B1517F1DAAE4
20AC141DFB8B5AA27428BD3F441FBE9D4AF475314F0D7C4820AADF1BA76D9F4B
F497143764231BDAECAEF9AE6D622F64750941A86E7A798BDACFB7161F65FBC5
F32A5E180DA6DF899E4143557E07C343E8654645B8D7F141D6C1E8ABD219E2A7
5B297A6B1D6AD54B8228875A8AE5F28B81678A5A5725E20047A0FB2DBF58342E
E01E39C3465838C2C12B94B021357D6FE95A8E8F0BE9ADB07DC351587FB6845F
6979642A796C514BC057A3A16937C724DAB0EBEA3A78DDA7D7D8B4E3DF583D31
EAEFF2B90E90794218745665DA4B90443BEFB2BDDEA678F2983FBF5D8608C6C2
49CD80C3F10453B0DCA779C1D4B8398FEBDA111A8F4A9C47E574FDDDF0438843
0C3F8A5113568DF9BF0C10E4FF46FC02BF6327CEF68FD80D32A9D386E921ED4D
9400DD2643DB97848A973956E8B4C06B54311B30D7F710C5C28890ED498A1125
D2C30D5A9315AA93B520450714B84A56ED2EBA78EDFC00403FF2572A5D1E4AC3
07DFCD154CEA675FD41BF4688FFE6BB822F4C38B1AACB66B9BCBE10725F0D6C7
D93FEE8A91542926D04C4F1E69E2AA43B5C606D1B9C3D1BDE5B2A0FB015C020A
DE4BE6DAF21F2C41DA61A522E0305B3022105B29754E0A6AF134B0A8D96D107A
CF5E3C5F1242B5FB63989A1FD79B5506E552E88135CDC83A6BEE4A5BE312AB7C
461C0CF2C70A0A8F1DA6BD795C8E9C521BA09D7C1B58AE21AF6C7EB29DA17955
548D3682D8B30698F011067453CAACA46C5E83A5738F7C384F084BCC59567298
4C23BA3DD014D0C364926DB36D93CCAC8FACBA616C979E172A198B081915311C
BACE7EA0E3714ABAF7E87DB98DA1F167667C97319BF1A7E27EC855E909187D51
083E5BC0F2222378F445674C4E59340CA51DBFEA7C374E55C383ABF3512A7949
66962A3E582A53B4795AC970BFA65D5649FE281F8B0978A1200E7022806C28F2
E50AA8A56A487E0F8CD9F41D4405199032C6676D10527334B09275A8A6FEB0BE
129B2D8ADDD4977C82DC2C45BC83526F084F6A8939708F16860CCBC310E2B44C
78B9A7DC83F4612E936AE3B08148713560A3574A9C02A9899C427D2540DD50AC
406F30B1B81893AD79117F50BFA617980AA962A43DFBE650788C275EB1583096
F5256FD3E3838D9248DC9DCCA13E1CB27DB039428C746820B21BAF0787BB5A1A
EDD7637C495F04595EACF8FACE04D3F52C90F0D8ECD1B8AAC2F447905F884284
EC761E081C0B259D2603432C4CB04C2FC345E5C7926228F09EF58599084FE823
C96874599FA38C16429CD67E3E203142C55D753E3388CBD69980958D280A8043
BCBC8CDBECB12CD651FC8E0E45BEACBDDE1194C8F443BE8D17BFA7B2169C0423
1847FA970ED021EA92481CF73E42D29BAD18C7F56151C343D534D68A1B1E8121
6CA99B435130E2874FB0D6D825E2D1183A4EBDEA516873F31AD85A2EBD205872
57FFDBE19B9E538E6BA58EB802A35C441649B734B33A94175A260BBD282A9792
3D657B0D7C3D90A6D4532B3152603E7BCA26F166E9AAA1441080DB24F0ED3705
8AB907180FF54F197571DAF095328CD5FBF6BC8ED1067CAD94EA032555D2EEFD
65F274412B7E19308755BB537043BE8CC0D8FB068508880318F66DD6D6B226C3
8B767EDE296FF13AAF728E433139F878986D7392DA8F29F1167A797C7210FCCA
C5358E70316A3B4A4574D06F25B55ABA4CA3C9FBF131735B94DAA1CD67CEFA0E
FEDCD3AA095F32E72943F7EFB73A593CAEEEA1DA1B560A7444D4B6758147887B
959FD7DF67053EA45E0A2EB573082BB774BD9C9CCA9628A90B609BCE36873ADE
B195D519927EBC721DDFBC73AE32DD2C8434C186F5B950A2A46183D94546409A
12D6D21B86CB51AD2E24B88813FE19EAFC89E87D920AAE380990EB1B8DAA1506
9AAB19F3F19699DA6203100BD0A0DDC70ED50CB61246BBD881A101A5322332CC
3D78A34D769C41E7CDC41176A0D1EBC873933645492F9D04D7351F0E46E2B022
D481DB0A082F83D108653E195941EDADC6B37C34FE07D129F2E0193BB7CCC1C0
7B0A40CB79B534D1C6A7E1D7D1892CE75DC62B722D24F5A3AC3F360A382EF21A
8D4C02CBB46015050ECBFE4556EF0ED8E6F1E3F6C6B06F9D19255B40A608A5C7
6DE7A87E9AD3900B8C19768BCA4890CB19A17BA27F011A6D6C68D34F84092705
ADC1D2E93AED68EF759E0EDF890EDFCA8C28BCF5798F3A0095A3B89B1A51B749
CA4B950A1A76AEABAEE8DCA0DE0AD966778EACECD17F0BA73251E26E2F69F6F9
420ADB6B0D32C60536A6B23AFCDDE3C5FD2D0AA785E5F05E43EA082089D137DB
2BC40D5DCBF904A243B5B953E1EF17A541B5E3B9432A17FD2E967CBA4B237A5A
1F7B4882C691BD0F743B48C0B7C5FCB31171EC433686E9F2C24CC839666BC7E5
0E643CF191E46F404777FA6DCD252775E03959B2039EC7E1783326BD2EBD56AC
7235365A8B2C89E0C70018B7E35919D5E25251E58311E756CB062C0565308A2B
2BCD8429BEEE5F7AC00D1FA3728A7FD17FB8F0C3B9FE3AAEC29B8F106AF0F94F
4894371DBE2CFF24FCDA4B11DE13286B09DAA397A5DB46CE56ADC0A7C7B17D95
749D3C197C5E87D894C50F320ED786A0478AC65921BE21F93D501318D8AFDF12
6EFD7E562FC6EAA813454AB1FDFF6995A1E251B8A99F679603CB8E601B345BF6
0BF05CD1C244B08D097E03EF672F715671C4E9A827C846AE1517DAA41186BE9C
3BA62AC9FAFE286715CDAFD6C4114450F3EA41AFE3F3C7C29F27FB01D5A7113E
AE46889BECC0EA69A1717F309D642356564AC8358B9969DF68418EFF0B6A7498
5CA9C865BA6F6E6BF8D18C7A4330CDD8B0FE34DB7DD3F8E0946A789EBC459A77
B09E07CF9F546B0A20E7115EA57ECBE06B9BBFA5DED24C43D6E4905814DBDDF9
7071D1ADB52AE66A113696611FBDF1517551AA1CCC4993F11C7212FEC4FA13D9
F2C04B472D79A112A95D25D6EDC177809DE0B8A60DF0B22AF7B346B70DB96830
A9AB40988D48118C3F71576983E8DB706176A77C2599C3547B76AE4E080CB69F
F0564A8121917D16DAC54A4178CCB4D1E0B0B91E2DD6D627B255116D95B3392E
9ABC2FCADD7C706962FF816E4EBE39AB11EC1C74BF8864CC28D7AA4A5444127D
757A1674D2E38851507A097904FE8DE8200BA21A9DDF03C7669872246935F272
E97AF4D14612451F29205BB3EAFF646D7AA463D90A3DAD644C7096C1355BC146
2246DC1EEC16A7568B5D3FEB5A4AA158A55C57C3A8B4E81993B986E4342959D7
D540CDFDBC8A127607587612D77D359E9B31AEC7DB9C9B7560CD0E747285358B
AB621009DBBB436D722C0FF4440F473ABBCEB1B9052280F236D6BC9520456B97
D01076AE249D82591FA296087FAC6AD113ABC30F1DF977830F2D261C66CDFF4D
DF60ED72E8C7242111A61C8BF31C07A7A846729118E8E23780268A1F4CCFE4DA
F99C78FDED0A743FAD22EF1153724A41722FE056B26C7A67FD36D15444478173
091478828F19BA20E32AA4062F61CCF9D43E2BA4CF629610AEA1A054E11E53B4
B7E77F5B3226FFA79DAF3D88A7FBDE9EC7407B4C5E9FD91330950D9A66F7F7CE
310C4959B92372163B4C2CD1717AEA47FF8ABEB92663CDA6B3ED3261CF7652B5
AE039058F8FC5C47455648D0A13C7C5580F6632DC473DBF733D6C3A8EC580A3A
18D26CF727C820A6B44C44012FC2D8FF5728F444498BB8ADD3F285D51B263F30
76BDCEBDB3490774015108A077A755421EB1BF68625BD2DAEB4CE6BDEB142FCB
3E4C499EAFDB1A6AB7DF21E2128DE768918BE3482E751378EC49534F411DFC2B
6CAF96854105FC29C639035C36DFF2944CBDCCFF7570D934B603ABB3D7F0ED07
522B70313A06EAD014B1168949BFF7D125FDC815CA6A91101C337358AA25BC7B
1EE5B1EA739D5141A3A7DE682D387DBB21FF1F2935BC31666619591F31D4AF78
5A311D7B31D77CAA32BF9D5C297977E2129385BB608C548E30EDA90CCCED8D5C
4266524B9CB4E79D209415A048063CCA8CB5CC0D6AFAA7DB7FD1DC77F7FBB0C3
3F2A1DDB769F613EF054C6828FE546BE44F78240300D3CAEFFAF8040F0DA3D37
4AB08DA5CEB55875C16F02C4360C809D08C5C216BADC9A2C9AA8DA5866BEEE6B
BD5A237217FF500473CD2F11D90FE2E6C0EA1DCEB6AE6A008710AD6C04336E54
673C3A375C072B3A8425F8557E154C7D4931BA7E4989CEE85E29DFB2F71B9DD0
0864190B65CD3E816D84020785551A32CF8EDE8BA1CF0387018C7BD90C156B22
3C138CE7E851D00E985AF85003A975E1177326A7FD3CFABF709751CA3813EEC2
3D2AB43B21983431F1E973FFC24D68B6113A52BA2C4808ECC5E74A21AD3DFBE5
608973420FB9279B09D375F4C844A1EDB3C75DFF30544E0DFAAE3FE1FF8628CF
CD1C2C87908BAE311A71B7AE87E8820C2133029C4AA3BB493C5928FEC2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 30 /precedes put
dup 50 /element put
dup 54 /negationslash put
dup 57 /existential put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 121 /dagger put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D65B
467B57C65B8040D2A098AB773CD92E7209B2CCDFC5C794347FCEBD668B69D6CA
3DF8BC572DD635CA720B6FF85C88DEB19A25ADF9EA03487D125544B2F519FB38
55614947308A8A510FF245BE47E1F593095639E91B97483486C2A0775CE1A080
9D5C2979D409E4D68BB6DFCA0130C086846BA1B1B2BFE36AF9E311D31CB4D124
C5AA3DE9B5E2972A4DA72A6BCFEC4E47AFC480BE37CA7D4588DB4957DD1E286D
45676C9FCC9C894CFD8D21F45A072A6D5CF9F29154154A7FDD41ACAE124DA8A4
942074E5E6B2DE3B1299F0A1E6B43480FB520E08468693268E4DF9E0CCAE59FC
2A788EDB101F05D6C63C6B1A85CD6A38288D1C1A551889A3D80A0C931C81895D
AD7D74B8182DB648FC01DE11C0F21F60C1A85E43C6E5A4F99F0133D4148F48AB
F20439F9996801A12BE2CCC2232674924EF1EE2D6FBAD5F9FD38236F49B39B30
E8B70A96584216607216B9FF63B820EB1CD748FF4094C7189F5693B4A3B1F394
65498576165161B754C2D809D5A8C0F00CBBE3B71FEB42460F1A80F8DFF35D96
CCB41A8A756D9FEAB2BEE3F3E6F771DA0AEE454EBF5F0D8EB5EDA99D2DCAA121
33B5B60191E3B0880E1549578FFDC5303D8B406F30F5D5B5D160A1A0C91C80FF
B23AD56F87AF4B000C323FD9F932D208BE225945250191A64E4DC3615A41DC7C
DD66E2D3B333444BEAF0759134CA08A6F5631CB2E929B44BE7454F6B37654DED
7E9E4A9B321985B2E4406E5399D19004D0BD26DD8D91E80D1A4A2ADA81AA844F
BB41C4D4858E6F0380E07A92635345D3769743E9C2013F7B7745EDAE7C89C2E8
4CB4A6691399293422E2C8A65712E6E80012C05052AAA7B3E4A546A0ABF56CA4
21B6C3A0BE605A51E3E818D1FDC409EFF64965DA632455C10B2F551CC4BFF04F
9CA6BF92680CBDFAA43F6698F9805FB3CD3894C531CFF657F12D958D5324DCB5
4C103C60C7B018C8004C8F83D128FC1226D0ACEBB7C4599E0851236841131906
D459473A5BB6ADE48588EF1237EC5668C7BE87F4D0FAE35002A75ADF90B33E0A
58536E2131F78FF1B60DF915F39A11BE298BDDA760464FB4FFFD9195C30CD211
DC21FDA31BD1189FD69BD27EE4422EBA8C44B6CD9711256F009261B4D8A241B4
B39E98535AA39155FD0DFA4F82C5F009C329143548875D9CFCAB2745B0180103
BBAF31500D81C6298A73D68059072CA89DA8914843F34D7DC0CA08B650ED8A7F
A300FDD88EEE6F83AE9D299A449D4CCDE2E4CCBD633023B378B159708229F1A8
AC97A391E518AF6727414959DA1B7CAE76CDA094DACE6B63189F5094685F8A60
8D8EBF5FFC65843DC96299FCE968ADBB6BC1E81DD5A5C2FD34255B7D2D00DE50
95D53BC58E2A9EBA323FCE9057257EE1325E6CA387D5802BA169FADF3DC0F0E3
3BCE8BE5C1BC9EBF1199237B371A9CE064F2ACB3032AB9BF54772648E07D902F
6B308DBDF131D45D5FA42F3AE526DA7EE056915582721CB9D6BBB53271A2A518
CA28CDAD7001568C22A98570C84AC7B7B2A25FB4591AF0417F99C38DC963446F
3611F91E4590CC1505A257915966861502F3E44F31293C2C1E55002B071E63B6
6159EB206FD1E18CCFD3562C1ED9208F888912FDEAA486BE71055259F1A228BF
94ECDD0E4FB9C28CCC1EE740512B7B07302BEEF5CA57E4F8E66B588617678FA0
74F5C6DD320DDF01B943E6D0F9D43205E6737151161FD7E1E3F3C3BDB6296C03
9B2B119DA89FCCA1C3186C6AFCFB2F4BB2C450829FC2A50E352573BCDB40AE83
4D8B57B33FB4256A0FB44436CAA33EB10A1A4FB6CE87E5E24C6D43DC98ACF63C
7F540CE85E3C6EBCE19979DB6D2C11B0E270895031BAC44DE11D4EDE6BA2E11F
15D300A92829B5DF3055AF88C8EB430038D541161300C751620E4C540224DFEB
34A6DC9EAA9DB1EB787152C517D85B34DECDA738D2240BB9763B0DCACD9B37C6
B989DB505604031BAA13D16FD90C8D2AD41DB7B31F245B400EDB24F8C71F6872
083AB32105DD2FAC57772E489B38668EC68BC3FCA64AAB08CC7C476D160BADD4
0A9D6E7FF6509C727659EFBA439BF5696782884D3292CA0439BC030B76A81531
C3D37724133F90091D3E57940482FF3D65ECCB35DE6F8D61E866E1351BB18BDF
9411064A24005D14D42C6AFB4A88CA8536E0CB1B993BFB0CC578F416F0CE56A0
BF774FB9917E246386873F343DEB8250B238C3CB956B44DE4079D75921C835FF
7A663920A9BA5FA185A123D03E036798CD8CB88F840C37A4CDC287D1E1273D68
890417A5001F0E1E5946D04902309F9972FC6100812C9CBC699BA576E492C06A
8066E85AF57C35C624D8B37F681E777957620811B5EA014F1E7297DE206F9AFF
4A00066A846AB984B75B9C06923A8323BFB88D24AAE1190E5E6E5FF4B89A9ABF
952A70567D58CA67FC8EAA775A8AA32FB64BCEEA3CEAAC42EE1BE0FCAFBBF8AA
97A6C198A5CC03EA6719B4DB00BDA0E22337BAA22ED6CA8641354054D3425716
AC1CE571C56B705CEC8EA0AE68AB53891FA1ADA05B68F3B816C276E50CADC3D9
C1A3C2AC3A46DAD7BAFAD62FA708073051A081F41D6E6920BC73075B721EB8FF
C173BCF8BC6417F07253118E20E719D7DA68F44B35406685F7BD441A19802DC3
6FFCA83551F81B3E69FE843FEE3F211615F80B3C04612A546F3F5EFD26B81A6B
6E1992170AB64DF31F9DBB3657D4ECEEA8C67ED9A584F7617B50FA7E87C7E36B
8A89B6CE79FFAF7162CEEE09149FA388698F5717BCA51CA786A9742D3B7172C2
FE9B6AF398C6EC56E5D77BD28120AAA30E812FBAA719D4CE1DCB84C8A9A5D311
9CCA652906A2099BD78F7702E554A6EEDECEFEAB6091D56D3DAEA5F9B747493D
A16B2F5FEF4ACB945BB4897044A8A2180DF766A0AA6C444E2168A9EE530CF694
9EDC57C532D58298B5271968F531D6043E0B04A3CCBC1F2AE8207CAF42563E8F
8695F6BC9156DA0490F7D17BBF8DD50BD01EB86BABE27D82DC2FF6877A1703FE
873349AD34BDC419BA93A052678EEBAB98584D65613FF2602F6B1D4A3C1EABA4
CE21B7D6812876753F30A3A06AAC3F15CEE1C438D60F283963
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (sig-alternate.dvi)
@start /Fa 197[39 57[45{}2 41.511 /CMSY5 rf /Fb 197[42
3[0 53[48{}3 49.8132 /CMSY6 rf /Fc 164[85 6[64 64 83[{}3
74.7198 /CMEX9 rf /Fd 139[23 1[28 6[31 24 22 24[36 9[36
70[{}7 41.511 /CMMI5 rf /Fe 206[28 49[{}1 41.511 /CMR5
rf /Ff 190[45 3[47 10[30 30 5[47 2[24 1[47 38[{}7 49.8132
/CMR6 rf /Fg 134[47 47 64 47 49 34 35 36 1[49 44 49 74
25 47 1[25 49 44 27 41 49 39 49 43 11[68 62 49 66 66
1[66 1[84 53 2[33 69 1[56 58 68 1[63 67 6[25 44 44 44
44 44 44 44 44 44 44 44 25 4[34 34 27[49 52 11[{}55 74.7198
/CMBX9 rf /Fh 168[55 2[37 33 3[48 3[44 6[48 44 67[{
 TeXBase1Encoding ReEncodeFont }7 66.4176 /Times-Italic
rf /Fi 134[33 33 48 33 33 18 26 22 33 33 33 33 52 18
33 1[18 33 33 22 29 33 29 33 29 8[48 2[48 41 37 2[37
2[59 7[41 1[44 1[48 7[33 1[33 1[33 2[33 33 33 18 17 22
17 4[22 2[33 33[37 2[{ TeXBase1Encoding ReEncodeFont }46
66.4176 /Times-Roman rf /Fj 130[39 1[39 1[39 39 39 1[39
39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 39 4[39 14[39 12[39 2[39 39 39 8[39 39 1[39 39 39
39 39 1[39 39 40[{}41 74.7198 /CMTT9 rf /Fk 139[24 1[29
3[38 54 20 33 25 22 4[32 28 27 34 12[36 3[39 3[42 5[39
3[46 46 49[26 15[{}19 49.8132 /CMMI6 rf /Fl 190[43 65[{}1
49.8132 /CMTI7 rf /Fm 134[37 35 2[41 25 31 32 1[39 39
43 63 20 35 1[24 39 35 24 35 39 35 35 39 8[57 2[57 55
43 2[52 2[69 48 2[30 1[59 50 52 58 55 54 57 10[39 39
39 39 39 39 2[24 27 24 4[24 26[43 12[{}47 74.7198 /CMTI9
rf /Fn 134[38 2[37 1[28 36 35 2[37 46 68 23 40 31 26
1[37 1[36 40 33 1[41 10[45 1[45 47 2[49 2[74 52 5[49
1[63 5[60 1[60 21 21 58[{}29 74.7198 /CMMI9 rf /Fo 128[38
2[77 38 34 41 41 55 41 43 30 30 30 41 43 38 43 64 21
41 23 21 43 38 23 34 43 34 43 38 3[21 1[21 47 58 58 79
58 58 55 43 57 60 52 60 58 70 48 60 39 28 58 60 50 52
59 55 54 58 1[36 1[60 1[21 21 38 38 38 38 38 38 38 38
38 38 1[21 26 21 60 1[30 30 21 60 3[38 5[38 13[64 43
43 45 11[{}85 74.7198 /CMR9 rf /Fp 134[50 50 72 50 55
33 39 44 1[55 50 55 83 28 55 33 28 55 50 33 44 55 44
55 50 7[72 72 100 72 72 66 55 72 1[61 78 72 94 66 78
1[39 78 78 61 66 72 72 66 72 6[33 50 50 50 50 50 50 50
50 50 50 1[25 33 42[55 2[{ TeXBase1Encoding ReEncodeFont }61
99.6264 /Times-Bold rf /Fq 134[42 1[60 42 46 23 42 28
1[46 46 46 69 18 1[18 18 46 46 23 46 1[42 46 46 11[60
51 55 2[55 1[60 1[46 55 2[60 3[60 60 9[46 5[46 46 46
46 3[23 44[{ TeXBase1Encoding ReEncodeFont }37 83.022
/Helvetica rf /Fr 134[50 50 1[50 55 28 50 2[55 55 55
83 22 50 22 22 55 55 1[55 55 50 1[55 8[66 9[72 10[72
1[66 101 17[28 46[{ TeXBase1Encoding ReEncodeFont }26
99.6264 /Helvetica rf /Fs 135[58 3[32 58 39 3[65 8[65
65 58 65 65 3[32 1[32 21[78 3[78 65[{ TeXBase1Encoding ReEncodeFont }14
116.231 /Helvetica rf /Ft 134[34 14[21 2[38 38 44[43
2[0 3[51 19[60 8[60 60 16[38 2[60{}12 74.7198 /CMSY9
rf /Fu 134[83 1[116 2[50 83 58 2[91 91 133 1[83 1[42
91 91 50 83 91 83 1[83 13[100 5[124 3[42 2[91 70[{
 TeXBase1Encoding ReEncodeFont }21 149.44 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 145 111 a Fu(Identifying)41 b(MFSs)h(with)g
(considering)g(masking)g(eff)o(ect)3657 37 y Ft(\003)1385
392 y Fs([Extended)30 b(Abstr)o(act])2430 318 y Ft(y)492
621 y Fr(Xintao)f(Niu)159 708 y Fq(State)24 b(K)m(e)n(y)f(Labor)o(ator)
r(y)g(f)n(or)g(No)o(v)n(el)337 796 y(Softw)o(are)h(T)-10
b(echnology)388 883 y(Nanjing)25 b(Univ)n(ersity)452
970 y(China,)f(210093)157 1057 y Fr(niuxintao@smail.nju.edu.cn)1639
621 y(Changhai)30 b(Nie)1377 708 y Fq(State)24 b(K)m(e)n(y)g(Labor)o
(ator)r(y)f(f)n(or)g(No)o(v)n(el)1556 796 y(Softw)o(are)h(T)-10
b(echnology)1607 883 y(Nanjing)25 b(Univ)n(ersity)1670
970 y(China,)f(210093)1391 1057 y Fr(changhainie@nju.edu.cn)2907
621 y(Alvin)29 b(Chain)2692 708 y Fq(Depar)s(tment)24
b(of)f(computing)2732 796 y(Hong)g(K)m(ong)h(P)l(olytechnic)2978
883 y(Univ)n(ersity)2953 970 y(Hong)g(K)m(ong)2595 1070
y Fr(cstschan@comp)m(.polyu.edu.hk)-152 1294 y Fp(ABSTRA)-5
b(CT)-152 1415 y Fo(Minimal)28 b(failure-inducing)f(sc)n(hema\(MFS\))f
(is)i(a)f(imp)r(ortan)n(t)f(con-)-152 1502 y(cept)17
b(in)g(com)n(binatorial)h(testing)f(that)g(indicate)g(the)g
(failure-inducing)-152 1589 y(in)n(teraction)29 b(of)h(parameters)f(in)
f(the)h(soft)n(w)n(are)h(under)d(test\(SUT\).)-152 1676
y(Iden)n(tify)36 b(the)h(MFS)g(can)g(help)g(dev)n(elop)r(ers)g(quic)n
(kly)f(reduce)g(the)-152 1763 y(searc)n(h)31 b(space)f(needed)g(to)g
(\014nd)f(the)g(buggy)h(source.)48 b(Man)n(y)30 b(algo-)-152
1850 y(rithms)h(are)h(prop)r(osed)f(to)g(\014nd)f(these)h(MFSs)g(in)g
(the)f(failing)j(test)-152 1938 y(cases.)54 b(In)31 b(practice,)j(ho)n
(w)n(ev)n(er,)f(w)n(e)f(\014nd)f(that)g(these)h(algorithms)-152
2025 y(cannot)g(b)r(eha)n(v)n(e)f(as)h(exp)r(ected)f(in)g(the)h
(condition)f(that)g(SUT)h(has)-152 2112 y(m)n(ultiple)e(faults)g(with)g
(di\013eren)n(t)f(lev)n(els.)48 b(F)-6 b(or)29 b(if)i(so,)g(a)g(fault)f
(with)-152 2199 y(higher)k(lev)n(el)h(ma)n(y)e(b)r(e)h(triggered)h(and)
f(lea)n(ving)g(the)g(co)r(de)g(whic)n(h)-152 2286 y(will)24
b(trigger)g(the)e(fault)h(with)f(lo)n(w)n(er)i(lev)n(el)f(not)f
(executed.)32 b(Th)n(us)22 b(w)n(e)-152 2373 y(cannot)g(observ)n(e)f
(the)g(fault)h(with)g(lo)n(w)n(er)h(lev)n(el,)g(as)f(a)g(result,)g(w)n
(e)h(will)-152 2461 y(omit)h(the)f(MFS)g(that)g(related)h(to)f(the)g
(fault)h(with)g(lo)n(w)n(er)g(lev)n(el.)34 b(W)-6 b(e)-152
2548 y(call)27 b(this)e(a)h(masking)g(e\013ect.)-77 2635
y(In)21 b(this)h(pap)r(er,)h(w)n(e)f(prop)r(ose)h(a)f(framew)n(ork)h
(whic)n(h)f(can)g(help)f(the)-152 2722 y(algorithms)26
b(to)f(a)n(v)n(oid)f(this)g(masking)h(e\013ect)f(when)h(iden)n(tify)f
(MFSs)-152 2809 y(in)j(the)f(test)g(cases.)38 b(In)26
b(this)h(framew)n(ork,)h(w)n(e)f(\014rst)f(static)h(analysis)-152
2897 y(the)18 b(data)h(\015o)n(w)g(of)h(the)e(test)g(cases.)33
b(Second)18 b(w)n(e)i(record)e(fault)i(as)f(w)n(ell)-152
2984 y(as)29 b(the)e(co)r(de)i(lines)f(related)g(to)h(this)f(fault)g
(during)f(executing)h(test)-152 3071 y(cases.)47 b(Then)29
b(w)n(e)h(will)g(determine)f(the)g(lev)n(els)h(of)g(di\013eren)n(t)e
(faults)-152 3158 y(w)n(e)21 b(triggered)f(during)g(testing)g(through)f
(\014nding)g(the)g(relationships)-152 3245 y(of)33 b(the)f(co)r(de)g
(lines)h(of)g(eac)n(h)f(fault.)55 b(By)32 b(doing)g(so)h(w)n(e)g(can)f
(judge)-152 3332 y(whether)37 b(a)g(masking)g(e\013ect)g(is)g(happ)r
(ened)f(during)g(the)g(pro)r(cess)-152 3420 y(of)g(iden)n(tifying)e
(MFS)g(and)g(a)n(v)n(oiding)h(them)f(b)n(y)g(generating)h(new)-152
3507 y(test)d(case)h(that)e(exp)r(osing)h(the)f(fault)i(with)f(lo)n(w)n
(er)g(lev)n(el.W)-6 b(e)32 b(ha)n(v)n(e)-152 3594 y(applied)e(our)g
(framew)n(ork)i(in)n(to)e(sev)n(eral)h(algorithms)g(whic)n(h)f(fo)r
(cus)-152 3681 y(on)22 b(iden)n(tifying)g(the)f(MFS)h(in)f(test)h
(cases)h(and)e(empirically)i(studied)-152 3768 y(the)17
b(framew)n(ork)i(on)e(t)n(w)n(o)h(widely)f(used)g(op)r(en)g(source)h
(soft)n(w)n(are.)34 b(Our)-152 3855 y(result)18 b(of)h(the)e(studies)g
(sho)n(ws)i(that)e(our)h(framew)n(ork)h(can)e(e\013ectiv)n(ely)-152
3943 y(reduce)25 b(the)h(in\015uence)e(of)i(masking)g(e\013ect.)p
-152 4024 997 4 v -152 4081 a Ft(\003)-113 4114 y Fo(\(Do)r(es)57
b(NOT)f(pro)r(duce)g(the)g(p)r(ermission)h(blo)r(c)n(k,)64
b(cop)n(yrigh)n(t)-152 4189 y(information)77 b(nor)f(page)g(n)n(um)n(b)
r(ering\).)183 b(F)-6 b(or)76 b(use)g(with)-152 4263
y(A)n(CM)p 29 4263 30 3 v 30 w(PR)n(OC)p 281 4263 V 30
w(AR)-6 b(TICLE-SP)g(.CLS.)25 b(Supp)r(orted)f(b)n(y)g(A)n(CM.)-152
4338 y Ft(y)-118 4371 y Fo(A)c(full)g(v)n(ersion)g(of)g(this)g(pap)r
(er)g(is)g(a)n(v)l(ailable)g(as)h Fm(A)n(uthor's)i(Guide)f(to)-152
4446 y(Pr)l(ep)l(aring)h(A)n(CM)e(SIG)g(Pr)l(o)l(c)l(e)l(e)l(dings)j
(Using)d(L)1182 4430 y Fl(A)1213 4446 y Fm(T)1255 4462
y(E)1297 4446 y(X)p Fo(2)1392 4454 y Fk(\017)1444 4446
y Fm(and)h(BibT)-6 b(eX)-152 4521 y Fo(at)26 b Fj
(www.acm.org/eaddress.htm)-152 4873 y Fi(Permission)g(to)f(mak)o(e)h
(digital)i(or)d(hard)g(copies)i(of)e(all)h(or)f(part)g(of)g(this)h(w)o
(ork)f(for)-152 4948 y(personal)f(or)f(classroom)g(use)f(is)g(granted)j
(without)e(fee)h(pro)o(vided)g(that)f(copies)h(are)-152
5022 y(not)c(made)f(or)g(distrib)o(uted)i(for)e(pro\002t)g(or)g
(commercial)i(adv)n(antage)h(and)d(that)h(copies)-152
5097 y(bear)e(this)g(notice)g(and)g(the)f(full)h(citation)i(on)d(the)h
(\002rst)e(page.)22 b(T)-5 b(o)16 b(cop)o(y)i(otherwise,)g(to)-152
5172 y(republish,)g(to)e(post)f(on)h(serv)o(ers)g(or)g(to)g(redistrib)o
(ute)i(to)e(lists,)g(requires)i(prior)e(speci\002c)-152
5246 y(permission)i(and/or)h(a)e(fee.)-152 5321 y Fh(W)n(OODST)o(OCK)h
Fi('97)f(El)g(P)o(aso,)f(T)-5 b(e)o(xas)18 b(USA)-152
5396 y(Cop)o(yright)i(20XX)d(A)m(CM)g(X-XXXXX-XX-X/XX/XX)g(...$15.00.)
2040 1294 y Fp(Categories)25 b(and)g(Subject)i(Descriptors)2040
1415 y Fo(H.4)17 b([)p Fg(Information)k(Systems)e(Applications)p
Fo(]:)29 b(Miscellaneous;)2040 1502 y(D.2.8)e([)p Fg(Soft)n(w)n(are)j
(Engineering)q Fo(]:)36 b(Metrics|)p Fm(c)l(omplexity)29
b(me)l(a-)2040 1589 y(sur)l(es,)f(p)l(erformanc)l(e)h(me)l(asur)l(es)
2040 1806 y Fp(General)c(T)-9 b(erms)2040 1926 y Fo(Theory)2040
2143 y Fp(K)n(eyw)o(ords)2040 2263 y Fo(Minimal)27 b(failure-inducing)e
(sc)n(hemas,)i(Masking)f(e\013ect)2040 2480 y Fp(1.)99
b(INTR)m(ODUCTION)2115 2588 y Fo(With)29 b(the)g(increase)h(of)h
(requiremen)n(ts)e(for)h(more)g(features)g(and)2040 2675
y(customisable,)41 b(mo)r(dern)36 b(soft)n(w)n(are)i(are)f(designed)f
(to)h(b)r(e)f(con\014g-)2040 2762 y(urable)31 b(and)f(mo)r(dular.)51
b(While)31 b(it)g(can)f(mak)n(e)h(soft)n(w)n(are)h(p)r(ortable)2040
2850 y(and)38 b(\015exible,)j(it)d(also)h(bring)f(man)n(y)f(c)n
(hallenges)i(to)g(the)e(testers)2040 2937 y(when)d(testing)h(them.)60
b(The)34 b(ma)t(jor)i(one)e(of)i(these)e(c)n(hallenges)h(is)2040
3024 y(that)30 b(w)n(e)h(m)n(ust)f(mak)n(e)g(sure)g(the)g(comp)r(onen)n
(ts)g(or)g(options)h(in)f(the)2040 3111 y(soft)n(w)n(are)35
b(co)r(existence)f(with)g(eac)n(h)g(other.)58 b(As)33
b(exhaustiv)n(e)g(test-)2040 3198 y(ing)24 b(eac)n(h)f(p)r(ossible)h
(com)n(bination)g(is)f(not)g(impractical)i(when)e(there)2040
3285 y(are)28 b(large)g(amoun)n(t)e(of)i(comp)r(onen)n(ts)f(or)g
(options)g(in)g(the)f(SUT,)h(w)n(e)2040 3373 y(should)37
b(c)n(ho)r(ose)h(some)g(of)g(them)e(to)i(test)f(with)g(considering)h
(the)2040 3460 y(cost.)57 b(There)33 b(are)g(man)n(y)f(strategies)i
(for)g(one)f(to)g(select)g(the)g(test)2040 3547 y(con\014gurations)28
b(among)g(all)g(the)f(p)r(ossible)i(con\014gurations.)40
b(Com-)2040 3634 y(binatorial)23 b(testing)f(is)h(one)f(of)h(them)f
(that)f(can)h(reac)n(h)g(the)g(co)n(v)n(erage)2040 3721
y(of)37 b(all)g(the)e(in)n(teractions)h(of)h(comp)r(onen)n(ts)f(with)g
(the)f(n)n(um)n(b)r(er)g(of)2040 3808 y(comp)r(onen)n(t\(w)n(e)24
b(called)h(in)n(teraction)f(strength\))f(not)h(more)g(than)g(t.)2115
3896 y(Whic)n(h)f(criteria)i(w)n(e)f(should)g(c)n(ho)r(ose)h(or)f(ho)n
(w)g(to)g(generate)h(these)2040 3983 y(test)33 b(cases)g(is)h(not)e
(the)g(p)r(oin)n(t)g(in)h(this)f(pap)r(er,)j(ho)n(w)n(ev)n(er,)f(w)n(e)
f(will)2040 4070 y(fo)r(cus)25 b(on)g(the)f(follo)n(w)n(ed)i(problem:)
34 b(if)25 b(w)n(e)g(\014nd)f(some)h(test)g(con\014gu-)2040
4157 y(rations)k(failed)h(during)e(executing,)h(whic)n(h)f(subset)h(of)
g(the)f(com)n(bi-)2040 4244 y(nation)21 b(of)h(comp)r(onen)n(t)f(is)h
(the)f(source)h(of)g(this)f(failure?)34 b(In)21 b(another)2040
4332 y(w)n(ord,)33 b(w)n(e)e(w)n(an)n(t)g(to)g(iden)n(tify)f(the)g
(failure-inducing)h(in)n(teractions)2040 4419 y(of)22
b(comp)r(onen)n(t)f(rather)g(than)g(just)g(detect)g(them.)33
b(Man)n(y)20 b(w)n(orks)i(\(as)2040 4506 y(w)n(ell)29
b(as)f(our)f(previous)g(w)n(ork\))h(are)f(prop)r(osed)h(to)f(solv)n(e)h
(this)g(prob-)2040 4593 y(lem.)41 b(Most)28 b(of)g(these)g(w)n(orks)g
(fo)r(cus)g(on)f(ho)n(w)h(to)g(iden)n(tify)f(as)h(more)2040
4680 y(MFSs)k(as)h(p)r(ossible)g(while)f(just)h(generating)f(small)h
(size)g(of)g(extra)2040 4767 y(test)26 b(con\014gurations.)2115
4855 y(In)k(our)h(recen)n(t)g(studies,)h(ho)n(w)n(ev)n(er,)h(w)n(e)f
(\014nd)d(these)i(algorithms)2040 4942 y(cannot)17 b(b)r(eha)n(v)n(e)f
(as)i(exp)r(ected)e(in)h(some)h(sub)t(ject)f(soft)n(w)n(are.)33
b(Through)2040 5029 y(a)28 b(deep)f(analysis,)j(w)n(e)e(\014nd)e(that)i
(there)f(are)h(m)n(ultiple)g(faults)g(with)2040 5116
y(di\013eren)n(t)e(lev)n(els)h(in)f(these)g(sub)t(ject.)38
b(It)26 b(means)g(that)g(when)g(w)n(e)h(set)2040 5203
y(up)d(a)h(test)g(con\014guration)g(and)f(execute)h(the)f(SUT)g(to)h
(observ)n(e)g(the)2040 5290 y(result,)30 b(the)e(high)h(lev)n(el)g
(fault)g(will)h(trigger)g(\014rst)e(and)h(p)r(erturb)e(w)n(e)2040
5378 y(examining)e(the)f(co)r(de)h(that)f(ma)n(y)g(trigger)i(the)e(lo)n
(w)h(lev)n(el)g(fault.)35 b(As)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -152 -69 a Fo(a)23 b(result)g(w)n(e)g(will)h
(omit)f(some)h(options)f(or)g(comp)r(onen)n(t)f(in)g(this)h(test)-152
19 y(con\014guration)30 b(that)g(ma)n(y)g(b)r(e)f(the)h(cause)g(of)h
(the)f(lo)n(w)h(lev)n(el)f(fault.)-152 106 y(W)-6 b(e)24
b(call)h(this)f(a)g(masking)g(e\013ect)g(whic)n(h)g(mak)n(e)f(the)h
(MFS)g(iden)n(tify-)-152 193 y(ing)i(algorithms)h(not)e(able)h(to)g(w)n
(ork)g(prop)r(erly)-6 b(.)-77 280 y(In)21 b(this)g(pap)r(er,)i(w)n(e)f
(prop)r(ose)g(a)g(approac)n(h)f(that)g(can)h(assist)h(these)-152
367 y(algorithms)36 b(to)e(a)n(v)n(oid)g(these)g(masking)g(e\013ect.)60
b(Our)34 b(framew)n(ork)-152 454 y(consists)25 b(of)f(three)f(parts:)34
b(\014rst,)24 b(it)f(will)i(use)e(the)h(statistic)g(analysis)-152
542 y(tec)n(hnique{dominate)d(tree)h(to)g(analysis)g(the)f(test)h
(script)g(and)f(then)-152 629 y(collect)h(the)e(information)i
(traditional)g(iden)n(tifying)e(algorithms.)34 b(of)-152
716 y(co)r(de)25 b(lines)f(in)g(this)g(script.)34 b(Second,)24
b(w)n(e)g(will)h(supp)r(ort)f(a)g(in)n(terface)-152 803
y(called)c(")-9 b(Record")9 b(for)19 b(the)f(MFS)h(iden)n(tifying)f
(algorithms)i(that)e(eac)n(h)-152 890 y(time)29 b(the)f(algorithm)h
(encoun)n(ter)f(a)g(fault)h(should)f(call)h(this)g(in)n(ter-)-152
977 y(face.)55 b(So)31 b(that)h(w)n(e)g(can)g(record)g(this)g(fault)g
(as)h(w)n(ell)g(as)f(the)g(co)r(de)-152 1065 y(lines)h(that)e(trigger)i
(this)f(fault.)54 b(Last,)34 b(this)e(framew)n(ork)h(supp)r(ort)-152
1152 y(these)28 b(algorithms)h(the)e(in)n(terface)i(")-9
b(analysis")19 b(that)27 b(can)h(tell)g(them)-152 1239
y(whether)d(the)f(fault)h(they)f(encoun)n(ter)g(ha)n(ving)g(mask)n(ed)g
(some)h(fault)-152 1326 y(else.)-77 1413 y(T)-6 b(o)23
b(ev)l(aluate)f(the)g(e\013ectiv)n(eness)h(of)g(our)f(framew)n(ork,)j
(w)n(e)e(to)r(ok)f(t-)-152 1500 y(w)n(o)g(widely-used)f(op)r(en)h
(source)g(soft)n(w)n(are)h(as)f(our)f(exp)r(erimen)n(t)g(sub-)-152
1588 y(ject.)54 b(And)30 b(then)h(w)n(e)i(will)g(c)n(ho)r(ose)f(\014v)n
(e)f(MFSs)h(iden)n(tifying)g(algo-)-152 1675 y(rithms,)c(for)g(eac)n(h)
f(algorithm,)i(w)n(e)f(will)h(compare)e(the)g(iden)n(tifying)-152
1762 y(result)j(among)g(t)n(w)n(o)g(v)n(ersions)g(of)g(this)f
(algorithm,)j(one)d(using)h(our)-152 1849 y(framew)n(ork)f(while)f
(another)f(one)g(not.)39 b(The)27 b(result)h(of)g(the)e(empir-)-152
1936 y(ical)33 b(studies)e(sho)n(ws)i(that)e(our)g(framew)n(ork)i(can)e
(assist)i(the)e(MFS)-152 2023 y(iden)n(tifying)26 b(algorithm)g(in)g
(getting)g(a)f(more)h(accurate)g(result.)-77 2111 y(The)g(main)f(con)n
(tributions)h(of)g(this)f(pap)r(er)h(are:)-62 2261 y(1.)38
b(W)-6 b(e)24 b(sho)n(w)g(that)g(the)f(fault)i(corresp)r(onding)f(to)g
(the)g(MFS)g(has)35 2348 y(di\013eren)n(t)f(lev)n(els,)i(i.e.,)h(fault)
e(with)g(high)g(lev)n(el)g(can)f(mask)h(the)35 2435 y(fault)i(with)g
(lo)n(w)g(lev)n(el.)-62 2588 y(2.)38 b(W)-6 b(e)25 b(giv)n(e)f(a)h
(framew)n(ork)h(to)f(assist)h(algorithms)g(to)f(a)n(v)n(oid)f(the)35
2675 y(bad)30 b(in\015uence)g(of)i(the)e(masking)i(e\013ect)e(in)h
(di\013eren)n(t)f(lev)n(els)35 2762 y(of)c(fault.)-62
2916 y(3.)38 b(W)-6 b(e)18 b(empirically)h(studies)g(that)f(with)g
(considering)h(the)f(mask-)35 3003 y(ing)32 b(e\013ect)f(the)f
(algorithm)j(can)e(p)r(erform)h(b)r(etter)f(than)f(not)35
3090 y(considering)c(the)f(e\013ect.)-77 3240 y(Rest)34
b(of)h(pap)r(er)g(is)g(organised)g(as)g(follo)n(ws:)55
b(section)35 b(2)g(giv)n(es)g(a)-152 3327 y(simple)g(example)f(to)g
(motiv)l(ate)g(our)g(w)n(ork.)60 b(Section)33 b(3)i(describ)r(e)-152
3414 y(our)24 b(framew)n(ork)g(in)f(detail.)35 b(Section)23
b(4)g(illustrate)i(the)e(exp)r(erimen)n(t)-152 3501 y(and)c(rep)r(orts)
h(the)f(result.)33 b(Section)19 b(5)h(discusses)g(the)f(related)h(w)n
(orks.)-152 3589 y(Section)26 b(6)g(pro)n(vides)f(some)h(concluding)f
(remarks.)-152 3794 y Fp(2.)100 b(MO)l(TIV)-13 b(A)k(TION)23
b(EXAMPLE)-77 3902 y Fo(F)-6 b(ollo)n(wing)34 b(w)n(e)g(ha)n(v)n(e)e
(construct)g(a)h(example)g(to)g(illustrate)g(the)-152
3989 y(motiv)l(ation)27 b(of)g(our)f(approac)n(h.)36
b(Assume)26 b(w)n(e)h(ha)n(v)n(e)f(a)g(metho)r(d)g Fm(fo)l(o)-152
4076 y Fo(whic)n(h)35 b(has)g(four)g(input)f(parameters)h(:)53
b Fm(a,)37 b(b,)h(c,)f(d)p Fo(.)62 b(The)35 b(t)n(yp)r(e-)-152
4163 y(s)g(of)h(these)f(four)g(parameters)h(are)f(all)h(in)n(tegers)f
(and)g(the)f(v)l(alues)-152 4251 y(that)g(they)g(can)g(tak)n(e)h(are:)
52 b Fn(d)745 4259 y Fk(a)819 4251 y Fo(=)36 b Ft(f)p
Fo(7)p Fn(;)14 b Fo(11)p Ft(g)p Fn(;)g(d)1215 4260 y
Fk(b)1283 4251 y Fo(=)36 b Ft(f)p Fo(2)p Fn(;)14 b Fo(4)p
Fn(;)f Fo(5)p Ft(g)p Fn(;)h(d)1713 4259 y Fk(c)1781 4251
y Fo(=)-152 4338 y Ft(f)p Fo(4)p Fn(;)g Fo(6)p Ft(g)p
Fn(;)g(d)110 4347 y Fk(d)194 4338 y Fo(=)47 b Ft(f)p
Fo(3)p Fn(;)14 b Fo(5)p Ft(g)42 b Fo(resp)r(ectiv)n(ely)-6
b(.)81 b(The)42 b(detail)f(co)r(de)h(of)g(this)-152 4425
y(metho)r(d)25 b(is)h(listed)g(as)h(follo)n(wing:)-152
4593 y Fj(public)40 b(static)g(float)g(foo\(int)h(a,)e(int)h(b,)f(int)h
(c,)f(int)h(d\){)-73 4680 y(//step)g(1)f(will)h(cause)g(a)f(exception)i
(when)e(b)h(==)f(c)-73 4767 y(float)h(x)f(=)g(\(float\)a)i(/)e(\(b)g(-)
h(c\);)-73 4942 y(//step)g(2)f(will)h(cause)g(a)f(exception)i(when)e(c)
h(<)f(d)-73 5029 y(float)h(y)f(=)g(Math.sqrt\(c)i(-)e(d\);)-73
5203 y(return)h(x+y;)-73 5378 y(})2051 -17 y Fg(T)-7
b(able)28 b(1:)39 b(test)30 b(inputs)f(and)h(their)f(corresp)r(onding)i
(result)p 2573 10 927 5 v 2571 97 5 88 v 2625 71 a Fo(id)p
2738 97 V 112 w(test)26 b(inputs)p 3219 97 V 105 w(result)p
3497 97 V 2573 101 927 5 v 2571 188 5 88 v 2637 162 a(1)p
2738 188 V 129 w(\(7,)g(2,)g(4,)g(3\))p 3219 188 V 109
w(P)-6 b(ASS)p 3497 188 V 2573 192 927 5 v 2571 280 5
88 v 2637 254 a(2)p 2738 280 V 129 w(\(7,)26 b(2,)g(4,)g(5\))p
3219 280 V 125 w(Ex)f(2)p 3497 280 V 2573 284 927 5 v
2571 371 5 88 v 2637 345 a(3)p 2738 371 V 129 w(\(7,)h(2,)g(6,)g(3\))p
3219 371 V 109 w(P)-6 b(ASS)p 3497 371 V 2573 375 927
5 v 2571 462 5 88 v 2637 436 a(4)p 2738 462 V 129 w(\(7,)26
b(2,)g(6,)g(5\))p 3219 462 V 109 w(P)-6 b(ASS)p 3497
462 V 2573 466 927 5 v 2571 554 5 88 v 2637 527 a(5)p
2738 554 V 129 w(\(7,)26 b(4,)g(4,)g(3\))p 3219 554 V
125 w(Ex)f(1)p 3497 554 V 2573 558 927 5 v 2571 645 5
88 v 2637 619 a(6)p 2738 645 V 129 w(\(7,)h(4,)g(4,)g(5\))p
3219 645 V 125 w(Ex)f(1)p 3497 645 V 2573 649 927 5 v
2571 736 5 88 v 2637 710 a(7)p 2738 736 V 129 w(\(7,)h(4,)g(6,)g(3\))p
3219 736 V 109 w(P)-6 b(ASS)p 3497 736 V 2573 740 927
5 v 2571 828 5 88 v 2637 801 a(8)p 2738 828 V 129 w(\(7,)26
b(4,)g(6,)g(5\))p 3219 828 V 109 w(P)-6 b(ASS)p 3497
828 V 2573 832 927 5 v 2571 919 5 88 v 2637 893 a(9)p
2738 919 V 129 w(\(7,)26 b(5,)g(4,)g(3\))p 3219 919 V
109 w(P)-6 b(ASS)p 3497 919 V 2573 923 927 5 v 2571 1010
5 88 v 2618 984 a(10)p 2738 1010 V 110 w(\(7,)26 b(5,)g(4,)g(5\))p
3219 1010 V 125 w(Ex)f(2)p 3497 1010 V 2573 1014 927
5 v 2571 1102 5 88 v 2618 1075 a(11)p 2738 1102 V 110
w(\(7,)h(5,)g(6,)g(3\))p 3219 1102 V 109 w(P)-6 b(ASS)p
3497 1102 V 2573 1106 927 5 v 2571 1193 5 88 v 2618 1167
a(12)p 2738 1193 V 110 w(\(7,)26 b(5,)g(6,)g(5\))p 3219
1193 V 109 w(P)-6 b(ASS)p 3497 1193 V 2573 1197 927 5
v 2571 1284 5 88 v 2618 1258 a(13)p 2738 1284 V 90 w(\(11,)27
b(2,)f(4,)g(3\))p 3219 1284 V 90 w(P)-6 b(ASS)p 3497
1284 V 2573 1288 927 5 v 2571 1376 5 88 v 2618 1349 a(14)p
2738 1376 V 90 w(\(11,)27 b(2,)f(4,)g(5\))p 3219 1376
V 106 w(Ex)f(2)p 3497 1376 V 2573 1380 927 5 v 2571 1467
5 88 v 2618 1441 a(15)p 2738 1467 V 90 w(\(11,)i(2,)f(6,)g(3\))p
3219 1467 V 90 w(P)-6 b(ASS)p 3497 1467 V 2573 1471 927
5 v 2571 1558 5 88 v 2618 1532 a(16)p 2738 1558 V 90
w(\(11,)27 b(2,)f(6,)g(5\))p 3219 1558 V 90 w(P)-6 b(ASS)p
3497 1558 V 2573 1562 927 5 v 2571 1650 5 88 v 2618 1623
a(17)p 2738 1650 V 90 w(\(11,)27 b(4,)f(4,)g(3\))p 3219
1650 V 106 w(Ex)f(1)p 3497 1650 V 2573 1654 927 5 v 2571
1741 5 88 v 2618 1715 a(18)p 2738 1741 V 90 w(\(11,)i(4,)f(4,)g(5\))p
3219 1741 V 106 w(Ex)f(1)p 3497 1741 V 2573 1745 927
5 v 2571 1832 5 88 v 2618 1806 a(19)p 2738 1832 V 90
w(\(11,)i(4,)f(6,)g(3\))p 3219 1832 V 90 w(P)-6 b(ASS)p
3497 1832 V 2573 1836 927 5 v 2571 1924 5 88 v 2618 1897
a(20)p 2738 1924 V 90 w(\(11,)27 b(4,)f(6,)g(5\))p 3219
1924 V 90 w(P)-6 b(ASS)p 3497 1924 V 2573 1928 927 5
v 2571 2015 5 88 v 2618 1989 a(21)p 2738 2015 V 90 w(\(11,)27
b(5,)f(4,)g(3\))p 3219 2015 V 90 w(P)-6 b(ASS)p 3497
2015 V 2573 2019 927 5 v 2571 2106 5 88 v 2618 2080 a(22)p
2738 2106 V 90 w(\(11,)27 b(5,)f(4,)g(5\))p 3219 2106
V 106 w(Ex)f(2)p 3497 2106 V 2573 2110 927 5 v 2571 2197
5 88 v 2618 2171 a(23)p 2738 2197 V 90 w(\(11,)i(5,)f(6,)g(3\))p
3219 2197 V 90 w(P)-6 b(ASS)p 3497 2197 V 2573 2202 927
5 v 2571 2289 5 88 v 2618 2263 a(24)p 2738 2289 V 90
w(\(11,)27 b(5,)f(6,)g(5\))p 3219 2289 V 90 w(P)-6 b(ASS)p
3497 2289 V 2573 2293 927 5 v 2573 2308 V 2115 2588 a(Insp)r(ecting)25
b(the)g(simple)h(co)r(de)g(ab)r(o)n(v)n(e,)g(w)n(e)g(can)g(\014nd)e(t)n
(w)n(o)j(faults:)2040 2675 y(First,)f(in)e(the)g(step)h(1)g(w)n(e)g
(can)f(get)h(a)g(ArithmeticException)f(when)2040 2762
y(b)j(is)h(equal)f(to)h(c,)g(i.e.,)h(b)e(=)h(4)f(&)g(c)h(=)f(4,)i(that)
e(mak)n(es)g(division)h(b)n(y)2040 2850 y(zero.)33 b(Second,)19
b(another)g(ArithmeticException)f(will)h(b)r(e)g(triggered)2040
2937 y(in)34 b(step)g(2)g(when)g(c)g Fn(<)f Fo(d,)j(i.e.,)h(c)d(=)g(4)g
(&)g(d)f(=)h(5,)j(whic)n(h)d(mak)n(es)2040 3024 y(square)24
b(ro)r(ots)h(of)f(negativ)n(e)g(n)n(um)n(b)r(ers.)33
b(So)24 b(the)g(exp)r(ected)f(MFSs)h(in)2040 3111 y(this)i(example)f
(should)g(b)r(e)h(\(-,)f(4,)h(4,)g(-\))f(and)g(\(-,)g(-,)h(4,)g(5\).)
2115 3198 y(T)-6 b(raditional)35 b(MFS)g(iden)n(tifying)f(algorithms)i
(do)e(not)g(consider)2040 3285 y(the)29 b(detail)h(of)g(the)f(co)r(de.)
46 b(They)30 b(tak)n(e)f(blac)n(k-b)r(o)n(x)f(testing)h(of)i(this)2040
3373 y(program,)40 b(i.e.,)h(feed)c(inputs)f(to)h(those)g(programs)g
(and)f(execute)2040 3460 y(them)31 b(to)g(observ)n(e)g(the)g(result.)51
b(The)31 b(basic)h(justi\014cation)g(b)r(ehind)2040 3547
y(those)g(approac)n(hes)g(is)h(that)f(the)f(failure-inducing)h(sc)n
(hema)g(for)h(a)2040 3634 y(particular)19 b(fault)f(m)n(ust)g(only)f
(app)r(ear)i(in)f(those)g(inputs)f(that)h(trigger)2040
3721 y(this)k(fault.)33 b(As)22 b(traditional)h(MFS)e(iden)n(tifying)h
(algorithms)h(aim)f(at)2040 3808 y(using)j(as)h(small)g(n)n(um)n(b)r
(er)d(of)j(inputs)e(as)i(p)r(ossible)f(to)g(get)g(the)g(same)2040
3896 y(or)32 b(appro)n(ximate)g(result)g(as)g(exhaustiv)n(e)f(testing,)
j(so)f(the)e(results)2040 3983 y(deriv)n(e)e(from)i(a)f(exhaustiv)n(e)e
(testing)i(set)g(m)n(ust)f(b)r(e)g(the)h(b)r(est)f(that)2040
4070 y(these)g(MFS)h(iden)n(tifying)f(approac)n(hes)h(can)f(reac)n(h.)
46 b(Next)28 b(w)n(e)i(will)2040 4157 y(illustrate)36
b(ho)n(w)f(exhaustiv)n(e)f(testing)i(w)n(orks)f(on)g(iden)n(tifying)g
(the)2040 4244 y(MFS)26 b(in)f(the)g(program.)2115 4332
y(W)-6 b(e)18 b(\014rst)h(generate)g(ev)n(ery)f(p)r(ossible)i(inputs)e
(as)i(listed)f(in)g(the)f(Col-)2040 4419 y(umn)30 b(")-9
b(test)32 b(inputs")21 b(of)32 b(table)f(1,)i(and)e(execute)g(them)f
(to)i(get)f(the)2040 4506 y(result)c(listed)h(in)f(Column)g(")-9
b(result")19 b(of)28 b(table)f(1.)40 b(In)26 b(this)h(Column,)2040
4593 y(")-9 b(P)j(ASS")10 b(means)21 b(that)g(the)f(program)h(runs)g
(without)f(an)n(y)g(exception)2040 4680 y(under)26 b(the)g(inputs)g(in)
g(the)h(same)g(ro)n(w.)39 b(")-9 b(Ex)26 b(1")18 b(indicate)27
b(that)f(the)2040 4767 y(program)h(encoun)n(ter)f(a)h(exception)f
(corresp)r(onding)g(to)h(the)f(step)g(1)2040 4855 y(and)i(")-9
b(Ex)29 b(2")20 b(indicate)28 b(the)h(program)g(trigger)g(a)g
(exception)f(corre-)2040 4942 y(sp)r(onding)e(to)g(the)g(step)f(2.)36
b(According)26 b(to)g(data)h(listed)f(in)g(table)g(1,)2040
5029 y(w)n(e)33 b(can)f(deduce)f(that)g(that)h(\(-,)h(4)f(,)i(4,)h(-\))
c(m)n(ust)g(b)r(e)h(the)g(MFS)g(of)2040 5116 y(Ex)e(1)h(as)g(all)h(the)
e(inputs)f(triggered)i(Ex)f(1)h(con)n(tain)g(this)f(sc)n(hema.)2040
5203 y(Similarly)-6 b(,)24 b(the)f(sc)n(hema)g(\(-,)h(2,)g(4,)g(5\))g
(and)e(\(-,)i(3,)g(4,)g(5\))f(m)n(ust)g(b)r(e)g(the)2040
5290 y(MFSs)c(of)h(the)e(Ex)h(2.)32 b(W)-6 b(e)19 b(listed)g(the)g
(MFSs)g(and)f(its)h(corresp)r(onding)2040 5378 y(exception)25
b(in)h(table)f(2.)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -152 -17 a Fg(T)-7 b(able)37 b(2:)58
b(Iden)n(ti\014ed)39 b(MFSs)f(and)h(their)g(corresp)r(onding)-152
70 y(Exception)p 417 97 856 5 v 415 184 5 88 v 550 158
a Fo(MFS)p 845 184 V 179 w(Exception)p 1270 184 V 417
188 856 5 v 415 276 5 88 v 468 249 a(\(-,)25 b(4,)h(4,)h(-\))p
845 276 V 184 w(Ex)f(1)p 1270 276 V 417 280 856 5 v 415
367 5 88 v 462 341 a(\(-,)f(2,)h(4,)g(5\))p 845 367 V
179 w(Ex)g(2)p 1270 367 V 417 371 856 5 v 415 458 5 88
v 462 432 a(\(-,)f(3,)h(4,)g(5\))p 845 458 V 179 w(Ex)g(2)p
1270 458 V 417 462 856 5 v 417 477 V -152 705 a Fg(T)-7
b(able)41 b(3:)65 b(exp)r(ected)42 b(MFSs)g(and)g(their)h(corresp)r
(onding)-152 792 y(Exception)p 423 819 843 5 v 421 906
5 88 v 550 880 a Fo(MFS)p 839 906 V 173 w(Exception)p
1264 906 V 423 910 843 5 v 421 997 5 88 v 468 971 a(\(-,)25
b(4,)h(4,)h(-\))p 839 997 V 178 w(Ex)e(2)p 1264 997 V
423 1002 843 5 v 421 1089 5 88 v 468 1063 a(\(-,)g(-,)h(4,)g(5\))p
839 1089 V 179 w(Ex)f(1)p 1264 1089 V 423 1093 843 5
v 423 1108 V -77 1342 a(Note)19 b(that)f(w)n(e)i(didn't)e(get)h(the)f
(exp)r(ected)g(result)h(with)g(tradition-)-152 1429 y(al)28
b(MFS)g(iden)n(tifying)f(approac)n(hes)g(for)h(this)g(case.)40
b(The)28 b(MFSs)f(w)n(e)-152 1516 y(get)c(for)f(Ex)g(2)g(are)h
(\(-,2,4,5\))g(and)e(\(-,3,4,5\))i(resp)r(ectiv)n(ely)f(instead)g(of)
-152 1603 y(the)k(exp)r(ected)g(sc)n(hema)g(\(-,-,4,5\).)37
b(So)26 b(wh)n(y)g(w)n(e)h(can't)f(iden)n(tify)g(the)-152
1691 y(MFS)k(\(-,-,4,5\)?)48 b(The)30 b(reason)h(lies)g(in)f(the)g(t)n
(w)n(o)g(inputs:)42 b(input)29 b(6.)-152 1778 y(\(7,4,4,5\))i(and)c
(input)h(18.)43 b(\(11,4,4,5\).)j(This)29 b(t)n(w)n(o)f(inputs)g(con)n
(tain)-152 1865 y(the)20 b(sc)n(hema)h(\(-,-,4,5\),)i(but)c(didn't)h
(trigger)i(the)e(Ex)g(1,)i(instead,)g(the)-152 1952 y(Ex)k(2)f(w)n(as)i
(triggered.)-77 2039 y(No)n(w)36 b(let)h(us)f(get)g(bac)n(k)g(to)g(the)
g(source)g(co)r(de)g(of)h Fm(fo)l(o)p Fo(,)i(w)n(e)e(can)-152
2127 y(\014nd)d(that)h(if)h(Ex)f(1)h(are)g(triggered,)i(it)e(will)g
(stop)g(executing)e(the)-152 2214 y(remaining)i(co)r(de)f(and)g(rep)r
(ort)g(the)f(exception)h(information.)64 b(In)-152 2301
y(another)22 b(w)n(ord,)h(Ex)f(1)g(ha)n(v)n(e)g(a)g(higher)g(lev)n(el)g
(than)f(Ex)h(2)g(so)h(that)e(Ex)-152 2388 y(1)30 b(ma)n(y)g(mask)g(Ex)f
(2.)47 b(With)29 b(this)h(information,)i(w)n(e)e(can)g(supp)r(ose)-152
2475 y(that)22 b(for)g(the)g(input)e(\(7,4,4,5\))k(and)d(\(11,4,4,5\),)
k(Ex)d(1)g(ma)n(y)f(mask)n(ed)-152 2562 y(Ex)g(2.)33
b(Then)21 b(w)n(e)g(exam)g(the)f(sc)n(hema)h(\(-,-,4,5\),)i(w)n(e)e
(can)g(\014nd)f(all)h(the)-152 2650 y(test)29 b(inputs)f(con)n(tain)g
(\(-,-,4,5\))h(will)h(trigger)g(exception)e(1,)i(except)-152
2737 y(these)d(test)h(cases)g(trigger)g(Ex)f(2)g(\014rst.)39
b(So)27 b(w)n(e)g(can)h(conclude)e(that)-152 2824 y(\(-,-,4,5\))32
b(should)g(b)r(e)f(the)h(causing)g(sc)n(hema)g(of)h(the)e(Exception)g
(1.)-152 2911 y(So)24 b(the)f(MFS)h(information)h(will)g(b)r(e)e(up)r
(dated)g(to)h(table)g(3)g(whic)n(h)f(is)-152 2998 y(iden)n(tical)j(to)g
(the)f(exp)r(ected)g(result.)-77 3085 y(So)j(in)h(this)f(pap)r(er,)i(w)
n(e)f(need)f(to)g(analysis)i(the)e(priorit)n(y)g(among)-152
3173 y(the)e(faults)i(in)e(the)g(SUT)g(and)h(use)f(the)g(information)i
(to)f(assist)g(the)-152 3260 y(MFS)j(iden)n(tifying)g(algorithms)i(to)e
(mak)n(e)g(the)f(result)i(more)f(accu-)-152 3347 y(rate)c(and)f
(clearer.)-152 3549 y Fp(3.)100 b(PRELIMIN)n(AR)m(Y)-77
3657 y Fo(Before)25 b(w)n(e)e(talk)g(ab)r(out)g(our)g(approac)n(h,)h(w)
n(e)g(will)g(giv)n(e)g(some)f(for-)-152 3745 y(mal)h(de\014nitions)e
(and)g(bac)n(kground)g(\014rst,)h(whic)n(h)g(is)g(helpful)g(to)g(un-)
-152 3832 y(derstand)i(the)g(description)h(of)g(our)g(approac)n(h.)-152
3987 y Fp(3.1)99 b(Combinatorial)25 b(testing)-77 4095
y Fo(Assume)i(that)g(the)f(SUT)h(\(soft)n(w)n(are)i(under)d(test\))h
(is)g(in\015uenced)-152 4182 y(b)n(y)c Fm(n)31 b Fo(parameters,)25
b(and)f(eac)n(h)g(parameter)h Fn(c)1162 4190 y Fk(i)1212
4182 y Fo(has)g Fn(a)1389 4190 y Fk(i)1439 4182 y Fo(discrete)f(v)l
(al-)-152 4269 y(ues)j(from)g(the)f(\014nite)g(set)h
Fn(V)660 4277 y Fk(i)686 4269 y Fo(,)g(i.e.,)h Fn(a)921
4277 y Fk(i)974 4269 y Fo(=)e Ft(j)p Fn(V)1126 4277 y
Fk(i)1153 4269 y Ft(j)g Fo(\()p Fn(i)h Fo(=)f(1,2,..n\).)39
b(Some)-152 4356 y(of)27 b(the)e(de\014nitions)g(b)r(elo)n(w)h(are)g
(originally)h(de\014ned)d(in)i(.)-69 4522 y Fm(De\014nition)i(1.)37
b Fo(A)25 b Fm(test)j(c)l(on\014gur)l(ation)33 b Fo(of)26
b(the)f(SUT)g(is)h(an)f(arra)n(y)-152 4610 y(of)35 b
Fm(n)k Fo(v)l(alues,)d(one)e(for)g(eac)n(h)g(parameter)g(of)g(the)f
(SUT,)h(whic)n(h)f(is)-152 4697 y(denoted)23 b(as)i(a)f
Fm(n)6 b Fo(-tuple)22 b(\()p Fn(v)626 4705 y Ff(1)661
4697 y Fo(,)j Fn(v)744 4705 y Ff(2)779 4697 y Fo(...)p
Fn(v)879 4705 y Fk(n)922 4697 y Fo(\),)f(where)h Fn(v)1255
4705 y Ff(1)1311 4697 y Ft(2)c Fn(V)1428 4705 y Ff(1)1463
4697 y Fo(,)j Fn(v)1545 4705 y Ff(2)1601 4697 y Ft(2)e
Fn(V)1719 4705 y Ff(2)1777 4697 y Fo(...)-152 4784 y
Fn(v)-115 4792 y Fk(n)-51 4784 y Ft(2)g Fn(V)67 4792
y Fk(n)109 4784 y Fo(.)-69 4950 y Fm(De\014nition)28
b(2.)37 b Fo(W)-6 b(e)23 b(consider)g(the)g(fact)h(that)e(abnormal)i
(execut-)-152 5037 y(ing)i(of)g(the)f(SUT)g(as)g(a)h
Fm(fault)p Fo(.)34 b(It)25 b(can)g(b)r(e)g(a)h(exception,)f(a)g
(compila-)-152 5124 y(tion)f(error,)h(a)f(mismatc)n(hed)f(assertion)i
(or)f(a)g(constrain)n(t)g(violation.)-69 5290 y Fm(De\014nition)k(3.)37
b Fo(The)29 b Fm(priority)36 b Fo(is)29 b(a)g(function)g(indicate)g
(the)f(pri-)-152 5378 y(orit)n(y)i(relationship)g(b)r(et)n(w)n(een)g(t)
n(w)n(o)g(faults.)48 b(Sp)r(eci\014cally)-6 b(,)31 b(w)n(e)f(tak)n(e)
2040 -69 y Fn(P)11 b(r)r(ior)r(ity)s Fo(\()p Fn(F)2411
-61 y Fk(a)2448 -69 y Fn(;)i(F)2531 -60 y Fk(b)2563 -69
y Fo(\))21 b(=)g(1)g(as)g(that)g(fault)g Fn(F)3230 -61
y Fk(a)3288 -69 y Fo(has)g(a)h(higher)e(lev)n(el)h(than)2040
19 y Fn(F)2089 28 y Fk(b)2121 19 y Fo(,)29 b(whic)n(h)f(means)h(that)f
(if)h Fn(F)2922 27 y Fk(a)2988 19 y Fo(w)n(ere)g(triggered,)h(it)f
(will)g(omit)g(the)2040 106 y(co)r(de)i(that)f(ma)n(y)h(trigger)g
Fn(F)2866 115 y Fk(b)2898 106 y Fo(.)50 b(And)29 b Fn(P)11
b(r)r(ior)r(ity)s Fo(\()p Fn(F)3513 114 y Fk(a)3550 106
y Fn(;)i(F)3633 115 y Fk(b)3665 106 y Fo(\))30 b(=)f
Ft(\000)p Fo(1)i(in-)2040 193 y(dicate)g(that)f Fn(F)2491
201 y Fk(a)2560 193 y Fo(has)h(a)g(lo)n(w)n(er)g(lev)n(el)g(than)f
Fn(F)3389 202 y Fk(b)3421 193 y Fo(.)49 b(Finally)-6
b(,)33 b(w)n(e)e(tak)n(e)2040 280 y Fn(P)11 b(r)r(ior)r(ity)s
Fo(\()p Fn(F)2411 288 y Fk(a)2448 280 y Fn(;)i(F)2531
289 y Fk(b)2563 280 y Fo(\))21 b(=)g(0)g(as)g(that)f(there)g(is)h(no)f
(priorit)n(y)g(relationship)2040 367 y(b)r(et)n(w)n(een)29
b Fn(F)2389 375 y Fk(a)2455 367 y Fo(and)g Fn(F)2657
376 y Fk(b)2688 367 y Fo(,)h(in)f(another)g(w)n(ord,)h(neither)f
Fn(F)3645 375 y Fk(a)3711 367 y Fo(will)i(mask)2040 454
y Fn(F)2089 463 y Fk(b)2146 454 y Fo(nor)26 b Fn(F)2332
463 y Fk(b)2389 454 y Fo(will)h(mask)e Fn(F)2781 462
y Fk(a)2819 454 y Fo(.)2123 607 y Fm(De\014nition)j(4.)37
b Fo(F)-6 b(or)24 b(the)g(SUT,)h(the)f Fm(n)6 b Fo(-tuple)24
b(\(-,)p Fn(v)3569 615 y Fk(n)3607 625 y Fe(1)3644 607
y Fo(,...,)p Fn(v)3786 615 y Fk(n)3824 627 y Fd(k)3866
607 y Fo(,...\)is)2040 695 y(called)33 b(a)f Fm(k)8 b
Fo(-v)l(alue)32 b Fm(schema)39 b Fo(\(k)31 b Fn(>)h Fo(0\))g(when)g
(some)g(k)g(parameters)2040 782 y(ha)n(v)n(e)21 b(\014xed)g(v)l(alues)g
(and)h(the)f(others)h(can)g(tak)n(e)f(on)h(their)g(resp)r(ectiv)n(e)
2040 869 y(allo)n(w)n(able)31 b(v)l(alues,)e(represen)n(ted)g(as)g(")-9
b(-")g(.)44 b(In)28 b(e\013ect)g(a)h(test)g(con\014g-)2040
956 y(uration)i(its)g(self)h(is)g(a)f(k-v)l(alue)e Fm(schema)p
Fo(,)34 b(whic)n(h)c(k)h(is)g(equal)g(to)g(n.)2040 1043
y(F)-6 b(urthermore,)30 b(if)h(a)f(test)f(con\014guration)h(con)n(tain)
g(a)g Fm(schema)p Fo(,)h(i.e.,)2040 1131 y(ev)n(ery)26
b(\014xed)g(v)l(alue)h(in)g(this)g(sc)n(hema)g(is)h(also)g(in)f(this)g
(test)h(con\014gu-)2040 1218 y(ration,)e(w)n(e)g(sa)n(y)g(this)f
(con\014guration)h(hit)f(this)h Fm(schema)p Fo(.)2123
1371 y Fm(De\014nition)i(5.)37 b Fo(let)19 b Fn(s)2725
1380 y Fk(l)2769 1371 y Fo(b)r(e)g(a)h Fm(l)8 b Fo(-v)l(alue)18
b(sc)n(hema,)j Fn(s)3489 1379 y Fk(m)3567 1371 y Fo(b)r(e)e(an)h
Fm(m)6 b Fo(-v)l(alue)2040 1458 y(sc)n(hema)29 b(for)h(the)f(SUT)g(and)
f Fn(l)h Ft(\024)e Fn(m)p Fo(.)44 b(If)30 b(all)g(the)e(\014xed)g
(parameter)2040 1545 y(v)l(alues)21 b(in)g Fn(s)2385
1554 y Fk(l)2430 1545 y Fo(are)g(also)h(in)f Fn(s)2823
1553 y Fk(m)2881 1545 y Fo(,)h(then)e Fn(s)3130 1553
y Fk(m)3210 1545 y Fm(subsumes)28 b Fn(s)3582 1554 y
Fk(l)3606 1545 y Fo(.)33 b(In)20 b(this)h(case)2040 1632
y(w)n(e)30 b(can)g(also)h(sa)n(y)f(that)f Fn(s)2803 1641
y Fk(l)2857 1632 y Fo(is)h(a)g Fm(sub-schema)38 b Fo(of)30
b Fn(s)3547 1640 y Fk(m)3636 1632 y Fo(and)f Fn(s)3825
1640 y Fk(m)3913 1632 y Fo(is)h(a)2040 1719 y Fm(p)l(ar)l(ent-schema)k
Fo(of)27 b Fn(s)2672 1728 y Fk(l)2696 1719 y Fo(.)2123
1873 y Fm(De\014nition)h(6.)37 b Fo(If)32 b(all)i(test)f
(con\014gurations)g(except)e(these)i(con-)2040 1960 y(\014gurations)d
(triggered)h(a)g(higher)f(lev)n(el)h(fault)f(con)n(tain)h(a)f(sc)n
(hema,)2040 2047 y(sa)n(y)f Fn(S)2223 2055 y Fk(a)2261
2047 y Fo(,)h(trigger)g(a)g(particular)f(fault,)i(sa)n(y)e
Fn(F)3380 2055 y Fk(a)3418 2047 y Fo(,)i(then)d(w)n(e)i(call)g(this)
2040 2134 y(sc)n(hema)g Fn(S)2358 2142 y Fk(a)2426 2134
y Fo(the)g Fm(faulty)h(schema)37 b Fo(for)31 b Fn(F)3230
2142 y Fk(a)3268 2134 y Fo(.)48 b(Additionally)-6 b(,)30
b(if)h(none)2040 2221 y(sub-sc)n(hemas)d(of)i Fn(S)2619
2229 y Fk(a)2685 2221 y Fo(is)g(the)e Fm(faulty)i(schema)36
b Fo(for)30 b Fn(F)3565 2229 y Fk(a)3602 2221 y Fo(,)g(w)n(e)g(will)g
(call)2040 2308 y(the)g(sc)n(hema)g Fn(S)2495 2316 y
Fk(a)2563 2308 y Fo(the)f Fm(minimal)h(faulty)i(schema)k
Fo(for)31 b Fn(F)3672 2316 y Fk(a)3710 2308 y Fo(\()p
Fm(MFS)39 b Fo(for)2040 2396 y(short\).)2115 2483 y(Note)26
b(that,)g(traditional)h(MFS)f(de\014nition)g(didn't)f(consider)i(the)
2040 2570 y(priorit)n(y)35 b(relationship)g(among)g(faults,)j(so)e
(these)e(de\014nition)g(will)2040 2657 y(not)c(tak)n(e)h(the)f(sc)n
(hema)h(as)g(a)g(MFS)f(for)i(some)f(particular)g(fault)g(if)2040
2744 y(some)d(test)f(con\014guration)g(con)n(tain)g(this)g(sc)n(hema)g
(do)r(esn't)h(trigger)2040 2831 y(this)e(fault.)2115
2985 y(The)35 b(target)g(of)h(traditional)g(MFS)f(iden)n(tifying)g
(algorithms)h(is)2040 3072 y(to)g(\014nd)f(thes)g(MFSs)h(for)h(the)e
(faults)i(of)f(a)g(SUT.)g(F)-6 b(or)36 b(b)n(y)e(doing)2040
3159 y(that)21 b(can)g(help)g(the)g(dev)n(elop)r(ers)h(reduce)f(the)g
(scop)r(e)g(of)i(source)e(co)r(de)2040 3246 y(that)h(needed)f(to)i
(insp)r(ect)f(to)g(debug)g(the)g(soft)n(w)n(are.)35 b(Note)22
b(that)g(our)2040 3333 y(discuss)i(is)g(based)g(on)g(the)f(SUT)g(is)h
(a)g(deterministic)g(soft)n(w)n(are,)i(i.e.,)2040 3420
y(SUT)34 b(execute)f(under)h(a)g(test)g(con\014guration)g(will)i(not)e
(pass)h(one)2040 3508 y(time)27 b(and)g(fail)h(another)f(time.)38
b(The)27 b(non-deterministic)g(problem)2040 3595 y(will)22
b(complex)f(our)g(test)g(scenario,)i(whic)n(h,)f(ho)n(w)n(ev)n(er)f(is)
g(b)r(ey)n(ond)f(the)2040 3682 y(scop)r(e)26 b(of)g(this)g(pap)r(er.)
2040 3833 y Fp(3.2)99 b(Dominate)25 b(tr)n(ee)2115 3941
y Fo(fault.)60 b(lev)n(el.)f(giv)n(en)34 b(this)g(de\014nition,)h(w)n
(e)g(can)e(also)j(tak)n(e)d(the)2040 4029 y(constrain)n(t)d(as)g(a)g
(fault,)i(usually)e(it)g(will)h(ha)n(v)n(e)e(the)g(highest)h(lev)n(el,)
2040 4116 y(for)25 b(that)f(if)h(w)n(e)f(tak)n(e)g(a)g(com)n(bination)h
(whic)n(h)f(is)g(constrain)n(t,)h(it)f(will)2040 4203
y(ma)n(y)k(didn't)g(compile)h(at)g(all,)i(so)e(that)f(w)n(e)h(can't)g
(exam)f(an)n(y)g(co)r(de)2040 4290 y(in)e(this)f(soft)n(w)n(are.)2115
4377 y(test)g(con\014guration?)2115 4464 y(sc)n(hema.)40
b(fault)n(y)-6 b(,)27 b(health)n(y)-6 b(.)38 b(w)n(e)28
b(need)f(to)g(iden)n(tify)g(the)g(minimal)2040 4552 y(fault)n(y)f(sc)n
(hema,)g(that)f(is)h(MFS.)2115 4639 y(note)c(that)h(in)f(our)h(pap)r
(er,)g(w)n(e)g(just)g(consider)g(the)f(failure)i(that)e(is)2040
4726 y(deterministic.)2040 4921 y Fp(4.)99 b(THEOR)m(Y)25
b(FOUND)m(A)-9 b(TION)2115 5029 y Fo(F)j(or)19 b(a)g(SUT,)g(assume)h
(it)f(has)h(n)e(di\013eren)n(t)h(faults:)32 b Fn(F)3604
5037 y Fk(i)3630 5029 y Fo(\(1)21 b Ft(\024)h Fn(i)f
Ft(\024)g Fn(L)p Fo(\),)2040 5116 y(they)c(can)h(b)r(e)f(distinguished)
g(b)n(y)g(the)g(fault)i(information)f(come)g(with)2040
5203 y(them\(suc)n(h)27 b(as)h(exception)g(traces)g(or)h(fatal)g(co)r
(de\).)41 b(Without)27 b(loss)2040 5290 y(of)i(generalit)n(y)-6
b(,)30 b(w)n(e)f(assume)g(monotonicit)n(y)f(of)h(the)f(lev)n(el)h(of)g
(faults)2040 5378 y(\()p Fn(Lev)s(el)q Fo(\()p Fn(F)2337
5386 y Ff(1)2371 5378 y Fo(\))21 b Ft(\025)g Fn(Lev)s(el)q
Fo(\()p Fn(F)2770 5386 y Ff(2)2805 5378 y Fo(\))g Ft(\025)g
Fn(:::)h Ft(\025)f Fn(Lev)s(el)q Fo(\()p Fn(F)3370 5386
y Fk(L)3416 5378 y Fo(\)\).)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 404 -17 a Fg(T)-7 b(able)27 b(4:)39
b(First)29 b(example)p 404 10 881 5 v 402 97 5 88 v 449
71 a Fo(id)p 556 97 V 90 w(test)c(inputs)p 1004 97 V
89 w(result)p 1283 97 V 404 101 881 5 v 402 188 5 88
v 462 162 a(1)p 556 188 V 148 w(\(0,)h(0,)g(0\))p 1004
188 V 135 w(P)-6 b(ASS)p 1283 188 V 404 192 881 5 v 402
280 5 88 v 462 254 a(2)p 556 280 V 148 w(\(0,)26 b(0,)g(1\))p
1004 280 V 135 w(P)-6 b(ASS)p 1283 280 V 404 284 881
5 v 402 371 5 88 v 462 345 a(3)p 556 371 V 148 w(\(0,)26
b(1,)g(0\))p 1004 371 V 135 w(P)-6 b(ASS)p 1283 371 V
404 375 881 5 v 402 462 5 88 v 462 436 a(4)p 556 462
V 148 w(\(0,)26 b(1,)g(1\))p 1004 462 V 135 w(P)-6 b(ASS)p
1283 462 V 404 466 881 5 v 402 554 5 88 v 462 527 a(5)p
556 554 V 148 w(\(1,)26 b(0,)g(0\))p 1004 554 V 135 w(P)-6
b(ASS)p 1283 554 V 404 558 881 5 v 402 645 5 88 v 462
619 a(6)p 556 645 V 148 w(\(1,)26 b(0,)g(1\))p 1004 645
V 135 w(P)-6 b(ASS)p 1283 645 V 404 649 881 5 v 402 736
5 88 v 462 710 a(7)p 556 736 V 148 w(\(1,)26 b(1,)g(0\))p
1004 736 V 141 w(Err)g(1)p 1283 736 V 404 740 881 5 v
402 828 5 88 v 462 801 a(8)p 556 828 V 148 w(\(1,)g(1,)g(1\))p
1004 828 V 141 w(Err)g(2)p 1283 828 V 404 832 881 5 v
404 847 V 399 1075 a Fg(T)-7 b(able)27 b(5:)39 b(previous)29
b(w)n(ork)p 404 1102 V 402 1190 5 88 v 449 1163 a Fo(id)p
556 1190 V 90 w(test)c(inputs)p 1004 1190 V 89 w(result)p
1283 1190 V 404 1194 881 5 v 402 1281 5 88 v 462 1255
a(1)p 556 1281 V 148 w(\(0,)h(0,)g(0\))p 1004 1281 V
135 w(P)-6 b(ASS)p 1283 1281 V 404 1285 881 5 v 402 1372
5 88 v 462 1346 a(2)p 556 1372 V 148 w(\(0,)26 b(0,)g(1\))p
1004 1372 V 135 w(P)-6 b(ASS)p 1283 1372 V 404 1376 881
5 v 402 1464 5 88 v 462 1437 a(3)p 556 1464 V 148 w(\(0,)26
b(1,)g(0\))p 1004 1464 V 135 w(P)-6 b(ASS)p 1283 1464
V 404 1468 881 5 v 402 1555 5 88 v 462 1529 a(4)p 556
1555 V 148 w(\(0,)26 b(1,)g(1\))p 1004 1555 V 135 w(P)-6
b(ASS)p 1283 1555 V 404 1559 881 5 v 402 1646 5 88 v
462 1620 a(5)p 556 1646 V 148 w(\(1,)26 b(0,)g(0\))p
1004 1646 V 135 w(P)-6 b(ASS)p 1283 1646 V 404 1650 881
5 v 402 1737 5 88 v 462 1711 a(6)p 556 1737 V 148 w(\(1,)26
b(0,)g(1\))p 1004 1737 V 135 w(P)-6 b(ASS)p 1283 1737
V 404 1742 881 5 v 402 1829 5 88 v 462 1803 a(7)p 556
1829 V 148 w(\(1,)26 b(1,)g(0\))p 1004 1829 V 142 w(F)-9
b(AIL)p 1283 1829 V 404 1833 881 5 v 402 1920 5 88 v
462 1894 a(8)p 556 1920 V 148 w(\(1,)26 b(1,)g(1\))p
1004 1920 V 142 w(F)-9 b(AIL)p 1283 1920 V 404 1924 881
5 v 404 1939 V -77 2175 a(Let)27 b Fn(S)109 2183 y Fk(t)163
2175 y Fo(denote)f(all)i(the)e(sc)n(hemas)h(in)f(the)h(test)f
(con\014guration)h(t.)-152 2262 y(F)-6 b(or)26 b(example,)g(If)g(T)g(=)
f(\(1,1,1\).)36 b(Then)26 b Fn(S)1072 2270 y Fk(T)1146
2262 y Fo(is)g Ft(f)p Fo(\(1,1,1\),\(1,1,-\),\(1,-)-152
2349 y(,1\),\(-,1,1\),\(-,-,1\),\(-,1,-\))p Ft(g)p Fo(.)-77
2436 y(Similarly)-6 b(,)25 b(Let)f Fn(S)446 2444 y Fk(T)519
2436 y Fo(denote)g(all)i(the)d(sc)n(hemas)i(in)g(a)f(suite)h(of)g(test)
-152 2523 y(con\014gurations)h({)g(T.)g(In)f(fact,)i
Fn(S)825 2531 y Fk(T)894 2523 y Fo(=)975 2467 y Fc(S)1039
2488 y Fk(n)1039 2546 y(i)p Ff(=1)1156 2523 y Fn(S)1203
2531 y Fk(t)1227 2542 y Fd(i)1257 2523 y Fo(.)-77 2610
y(The)20 b(notation)g Fn(T)421 2618 y Fk(F)460 2629 y
Fd(i)509 2610 y Fo(denote)f(a)i(suite)e(of)i(test)e(con\014gurations)h
(that)-152 2698 y(eac)n(h)g(test)h(con\014guration)f(in)f(it)i(will)g
(trigger)g(fault)g Fn(F)1380 2706 y Fk(i)1406 2698 y
Fo(.)33 b(Additional-)-152 2785 y(ly)-6 b(,)24 b(let)g
Fn(T)103 2793 y Fk(P)177 2785 y Fo(denote)f(the)g(suite)g(of)i(test)e
(con\014gurations)h(that)f(passed)-152 2872 y(the)32
b(testing)h(without)f(triggering)h(an)n(y)f(faults,)i(and)e(let)h
Fn(T)1605 2880 y Fk(F)1688 2872 y Fo(indi-)-152 2959
y(cate)i(the)f(suite)h(of)h(test)e(con\014gurations)h(that)f(eac)n(h)h
(one)f(in)h(this)-152 3046 y(set)41 b(will)h(trigger)f(some)g(t)n(yp)r
(e)e(of)i(fault.)80 b(It)39 b(is)i(ob)n(viously)f(that)-152
3133 y Fn(T)-107 3141 y Fk(F)-35 3133 y Fo(=)46 3077
y Fc(S)110 3098 y Fk(L)110 3156 y(i)p Ff(=1)227 3133
y Fn(T)272 3141 y Fk(F)311 3152 y Fd(i)366 3133 y Fo(and)25
b Fn(T)560 3141 y Fk(F)623 3077 y Fc(S)700 3133 y Fn(T)745
3141 y Fk(P)817 3133 y Fo(=)c Fn(T)943 3142 y Fk(all)-77
3221 y Fo(Then)30 b(let)g Fn(M)317 3229 y Fk(F)356 3240
y Fd(i)386 3221 y Fo(\(1)f Ft(\024)f Fn(i)h Ft(\024)f
Fn(L)p Fo(\))i(denote)g(the)f(set)h(of)h(MFS)e(for)i
Fn(F)1793 3229 y Fk(i)1820 3221 y Fo(.)-152 3308 y(It)24
b(is)g(noted)f(that)h(for)h Fn(F)546 3316 y Fk(i)596
3308 y Fo(there)e(ma)n(y)h(b)r(e)g(more)g(than)f(one)h(MFS,)g(so)-152
3395 y(w)n(e)i(use)g(set)g(of)g(MFS)g(instead)f(one)h(MFS)f(for)i(a)f
(fault.)-77 3482 y(As)18 b(MFS)h(is)g(also)h(a)f(sc)n(hema,)h(so)g(w)n
(e)f(can)f(easily)i(\014nd)d(the)h(follo)n(w)n(ed)-152
3569 y(prop)r(erties:)35 b Fn(M)313 3577 y Fk(F)352 3588
y Fd(i)404 3569 y Ft(2)21 b Fn(S)523 3577 y Fk(T)559
3588 y Fd(F)595 3601 y(i)-152 3748 y Fp(4.1)99 b(pr)n(e)o(vious)25
b(w)o(ork)-77 3856 y Fo(In)f(our)i(previous)f(w)n(ork\(TOSEM\),)g(w)n
(e)h(didn't)e(distinguish)h(the)-152 3943 y(t)n(yp)r(es)37
b(of)h(fault,)k(i.e.,)f(w)n(e)d(treat)g(all)g(the)g(faults)g(as)g(one)f
(failure.)-152 4031 y(In)d(this)g(circumstance,)j(our)d(MFS)h(iden)n
(tifying)f(pro)r(cess)h(can)f(b)r(e)-152 4118 y(form)n(ulated)26
b(as:)-152 4258 y Fn(M)-78 4266 y Fk(F)-5 4258 y Fo(=)21
b Ft(f)p Fn(s)150 4266 y Fk(i)176 4258 y Ft(j)p Fn(s)233
4266 y Fk(i)281 4258 y Ft(2)h Fn(S)401 4266 y Fk(T)437
4277 y Fd(F)493 4258 y Ft(\000)5 b Fn(S)605 4266 y Fk(T)641
4277 y Fd(P)712 4258 y Fn(and)21 b Ft(6)g(9)p Fn(s)960
4266 y Fk(j)1013 4258 y Ft(\036)h Fn(s)1131 4266 y Fk(i)1176
4258 y Fn(s:t:)d(s)1337 4266 y Fk(j)1391 4258 y Ft(2)j
Fn(S)1511 4266 y Fk(T)1547 4277 y Fd(F)1603 4258 y Ft(\000)5
b Fn(S)1715 4266 y Fk(T)1751 4277 y Fd(P)1802 4258 y
Ft(g)-152 4397 y Fo(With)27 b(this)g(form)n(ula)h(w)n(e)g(cannot)f
(\014nd)e(the)i(MFS)g(for)h(a)f(particular)-152 4485
y(fault,)41 b(further)c(more,)j(as)e(it)f(force)h(to)g(merge)f(all)h
(the)f(MFS)g(of,)-152 4572 y(it)f(ma)n(y)f(get)h(a)f(wrongly)h(result.)
65 b(F)-6 b(or)35 b(example,)j(for)e(SUT\(3,2\),)-152
4659 y(Assume)28 b(\(1,1,0\))i(is)f(the)f(MFS)g(of)h(err)f(1)h(and)f
(\(1,1,1\))h(is)g(the)f(MFS)-152 4746 y(of)e(err)g(2,)g(The)g(test)f
(con\014gurations)g(and)g(result)h(is)g(listed)f(in)h(table)-152
4833 y(4.)-77 4920 y(Then)34 b(using)g(our)f(previous)h(w)n(ork,)i
(\014rstly)-6 b(,)36 b(w)n(e)e(will)h(treat)f(the)-152
5008 y(test)26 b(result)g(as)g(listed)g(in)f(5.)-77 5095
y(And)18 b(then)h(w)n(e)h(will)h(wrongly)f(iden)n(ti\014ed)e(as)j
(\(1,1,-\))f(for)g(the)f(fault.)-152 5260 y Fp(4.2)99
b(A)26 b(simple)g(idea)g(:)32 b(do)26 b(not)h(consider)f(the)h(mask-)72
5357 y(ing)e(effect)2645 -17 y Fg(T)-7 b(able)28 b(6:)39
b(simple)27 b(idea)p 2160 10 1754 5 v 2204 71 a Fo(ERR)e(1)p
3024 97 5 88 v 638 w(ERR)g(2)p 2156 110 1761 5 v 2201
171 a(id)p 2308 197 5 88 v 90 w(test)g(inputs)p 2756
197 V 89 w(result)p 3034 197 V 90 w(id)p 3188 197 V 90
w(test)g(inputs)p 3636 197 V 89 w(result)p 2156 201 1761
5 v 2214 262 a(1)p 2308 288 5 88 v 148 w(\(0,)h(0,)g(0\))p
2756 288 V 135 w(P)-6 b(ASS)p 3034 288 V 101 w(1)p 3188
288 V 148 w(\(0,)26 b(0,)g(0\))p 3636 288 V 135 w(P)-6
b(ASS)p 2156 292 1761 5 v 2214 353 a(2)p 2308 379 5 88
v 148 w(\(0,)26 b(0,)g(1\))p 2756 379 V 135 w(P)-6 b(ASS)p
3034 379 V 101 w(2)p 3188 379 V 148 w(\(0,)26 b(0,)g(1\))p
3636 379 V 135 w(P)-6 b(ASS)p 2156 383 1761 5 v 2214
444 a(3)p 2308 471 5 88 v 148 w(\(0,)26 b(1,)g(0\))p
2756 471 V 135 w(P)-6 b(ASS)p 3034 471 V 101 w(3)p 3188
471 V 148 w(\(0,)26 b(1,)g(0\))p 3636 471 V 135 w(P)-6
b(ASS)p 2156 475 1761 5 v 2214 536 a(4)p 2308 562 5 88
v 148 w(\(0,)26 b(1,)g(1\))p 2756 562 V 135 w(P)-6 b(ASS)p
3034 562 V 101 w(4)p 3188 562 V 148 w(\(0,)26 b(1,)g(1\))p
3636 562 V 135 w(P)-6 b(ASS)p 2156 566 1761 5 v 2214
627 a(5)p 2308 653 5 88 v 148 w(\(1,)26 b(0,)g(0\))p
2756 653 V 135 w(P)-6 b(ASS)p 3034 653 V 101 w(5)p 3188
653 V 148 w(\(1,)26 b(0,)g(0\))p 3636 653 V 135 w(P)-6
b(ASS)p 2156 657 1761 5 v 2214 718 a(6)p 2308 745 5 88
v 148 w(\(1,)26 b(0,)g(1\))p 2756 745 V 135 w(P)-6 b(ASS)p
3034 745 V 101 w(6)p 3188 745 V 148 w(\(1,)26 b(0,)g(1\))p
3636 745 V 135 w(P)-6 b(ASS)p 2156 749 1761 5 v 2214
810 a(7)p 2308 836 5 88 v 148 w(\(1,)26 b(1,)g(0\))p
2756 836 V 142 w(F)-9 b(AIL)p 3034 836 V 109 w(7)p 3188
836 V 148 w(\(1,)26 b(1,)g(0\))p 3636 836 V 135 w(P)-6
b(ASS)p 2156 840 1761 5 v 2214 901 a(8)p 2308 927 5 88
v 148 w(\(1,)26 b(1,)g(1\))p 2756 927 V 135 w(P)-6 b(ASS)p
3034 927 V 101 w(8)p 3188 927 V 148 w(\(1,)26 b(1,)g(1\))p
3636 927 V 142 w(F)-9 b(AIL)p 2156 931 1761 5 v 2156
946 V 2413 1170 a Fg(T)i(able)27 b(7:)39 b(masking)29
b(e\013ect)f(example)p 2596 1197 881 5 v 2594 1284 5
88 v 2641 1258 a Fo(id)p 2748 1284 V 90 w(test)d(inputs)p
3196 1284 V 89 w(result)p 3474 1284 V 2596 1288 881 5
v 2594 1376 5 88 v 2654 1349 a(1)p 2748 1376 V 148 w(\(0,)h(0,)g(0\))p
3196 1376 V 141 w(Err)g(2)p 3474 1376 V 2596 1380 881
5 v 2594 1467 5 88 v 2654 1441 a(2)p 2748 1467 V 148
w(\(0,)g(0,)g(1\))p 3196 1467 V 135 w(P)-6 b(ASS)p 3474
1467 V 2596 1471 881 5 v 2594 1558 5 88 v 2654 1532 a(3)p
2748 1558 V 148 w(\(0,)26 b(1,)g(0\))p 3196 1558 V 141
w(Err)g(2)p 3474 1558 V 2596 1562 881 5 v 2594 1649 5
88 v 2654 1623 a(4)p 2748 1649 V 148 w(\(0,)g(1,)g(1\))p
3196 1649 V 135 w(P)-6 b(ASS)p 3474 1649 V 2596 1654
881 5 v 2594 1741 5 88 v 2654 1715 a(5)p 2748 1741 V
148 w(\(1,)26 b(0,)g(0\))p 3196 1741 V 141 w(Err)g(2)p
3474 1741 V 2596 1745 881 5 v 2594 1832 5 88 v 2654 1806
a(6)p 2748 1832 V 148 w(\(1,)g(0,)g(1\))p 3196 1832 V
135 w(P)-6 b(ASS)p 3474 1832 V 2596 1836 881 5 v 2594
1923 5 88 v 2654 1897 a(7)p 2748 1923 V 148 w(\(1,)26
b(1,)g(0\))p 3196 1923 V 141 w(Err)g(1)p 3474 1923 V
2596 1928 881 5 v 2594 2015 5 88 v 2654 1989 a(8)p 2748
2015 V 148 w(\(1,)g(1,)g(1\))p 3196 2015 V 141 w(Err)g(1)p
3474 2015 V 2596 2019 881 5 v 2596 2034 V 2115 2262 a(T)-6
b(o)34 b(solv)n(e)h(this)f(problem,)i(a)f(naturally)f(solution)g(is)h
(to)f(distin-)2040 2349 y(guish)k(these)g(faults,)k(and)c(for)h(a)f
(particular)g(fault,)k(sa)n(y)c Fn(F)3856 2357 y Fk(i)3883
2349 y Fo(,)j(w)n(e)2040 2436 y(treat)25 b(the)g(test)g
(con\014gurations)g(trigger)h(this)f(fault)h(as)f(failure)i(test)2040
2523 y(con\014guration)h(and)f(the)g(remained)h(test)g
(con\014gurations)g(\(consist)2040 2611 y(of)22 b(pass)g(and)f(other)h
(faults)g(test)g(con\014gurations\))f(will)i(b)r(e)e(regarded)2040
2698 y(as)26 b(pass.)2115 2785 y(So)33 b(for)h(this)f(idea,)j(the)d
(iden)n(tifying)g(pro)r(cess)h(for)g(a)f(particular)2040
2872 y(fault,)26 b(sa)n(y)-6 b(,)26 b Fn(F)2439 2880
y Fk(i)2491 2872 y Fo(can)f(b)r(e)h(form)n(ulated)g(as)g(follo)n(ws:)
2115 2959 y(Let)2480 3150 y Fn(S)2527 3158 y Fk(ca)2614
3150 y Fo(=)21 b Fn(S)2742 3158 y Fk(T)2778 3169 y Fd(F)2814
3182 y(i)2866 3150 y Ft(\000)c Fn(S)2990 3158 y Fk(T)3026
3169 y Fd(P)3095 3150 y Ft(\000)3275 3056 y Fk(L)3254
3079 y Fc([)3172 3238 y Fk(j)s Ff(=1&)p Fk(j)s Fb(6)p
Ff(=)p Fk(i)3434 3150 y Fn(S)3481 3158 y Fk(T)3517 3169
y Fd(F)3553 3182 y(j)2257 3413 y Fn(M)2331 3421 y Fk(F)2403
3413 y Fo(=)k Ft(f)p Fn(s)2558 3421 y Fk(i)2585 3413
y Ft(j)p Fn(s)2642 3421 y Fk(i)2690 3413 y Ft(2)g Fn(S)2809
3421 y Fk(ca)2900 3413 y Fn(and)h Ft(6)f(9)p Fn(s)3149
3421 y Fk(j)3202 3413 y Ft(\036)g Fn(s)3319 3421 y Fk(i)3371
3413 y Fn(s:t:)26 b(s)3539 3421 y Fk(j)3592 3413 y Ft(2)c
Fn(S)3712 3421 y Fk(ca)3777 3413 y Ft(g)2115 3547 y Fo(Using)k(this)f
(w)n(e)i(will)g(treat)f(the)f(table)h(4)h(as)f(the)f(follo)n(wing)j
(table)2040 3634 y(6,)23 b(then)d(w)n(e)i(will)g(get)g(the)e(result)i
(as)f(:)33 b(\(1,1,0\))22 b(for)g(err)f(1)h(and)e(\(1,1,1\))2040
3721 y(err)26 b(2)g(whic)n(h)f(coincide)h(with)g(the)f(result)h(as)g
(initial)g(assumption.)2115 3808 y(Ho)n(w)n(ev)n(er)g(it)f(also)j
(didn't)d(completely)h(solv)n(e)g(the)f(problem)h(as)h(it)2040
3896 y(didn't)33 b(consider)h(the)g(masking)g(problem.)60
b(As)33 b(for)i(a)f(particular)2040 3983 y(fault,)c(sa)n(y)f
Fn(F)2431 3995 y Ff(\()2459 3983 y Fn(i)p Fo(\),)h(w)n(e)f(didn't)f
(kno)n(w)h(whether)f(the)g(test)h(con\014gura-)2040 4070
y(tions)34 b(trigger)g(a)g(higher)g(fault)g(than)f Fn(F)3231
4078 y Fk(i)3257 4070 y Fo(,)j(sa)n(y)-6 b(,)35 b Fn(F)3520
4078 y Fk(j)3553 4070 y Fn(;)13 b(j)39 b Ft(\024)c Fn(i)e
Fo(will)i(or)2040 4157 y(not)25 b(trigger)i Fn(F)2473
4165 y Fk(i)2499 4157 y Fo(,)f(if)g(the)g Fn(F)2798 4165
y Fk(j)2856 4157 y Fo(is)g(not)f(triggered.)35 b(The)26
b(only)f(informa-)2040 4244 y(tion)e(w)n(e)g(kno)n(w)f(is)h(that)f(the)
g(test)g(con\014guration)h(triggered)g(a)g(lo)n(w)n(er)2040
4332 y(fault,)j(sa)n(y)-6 b(,)26 b Fn(F)2439 4341 y Fk(k)2477
4332 y Fn(;)13 b(k)24 b Ft(\025)d Fn(i)26 b Fo(will)g(not)g(trigger)g
(the)f(fault)h Fn(F)3598 4340 y Fk(i)3625 4332 y Fo(.)2115
4419 y(So)20 b(if)h(masking)f(e\013ect)g(existed)g(in)g(SUT,)g(w)n(e)h
(will)g(incorrectly)f(get)2040 4506 y(the)j(result.)34
b(F)-6 b(or)24 b(example,)g(If)f(w)n(e)h(ha)n(v)n(e)f(SUT\(3,2\))h(and)
f(\(1,1,-\))h(for)2040 4593 y(err)d(1)h(and)e(\(-,-,0\))h(for)h(err)f
(2.)34 b(And)19 b(err)j(1)f(has)h(higher)f(lev)n(el)g(than)f(err)2040
4680 y(2.)44 b(The)29 b(test)f(con\014gurations)h(and)f(the)g(result)h
(is)g(sho)n(wn)g(in)f(table)2040 4767 y(7.)2115 4855
y(Then)21 b(if)h(w)n(e)f(do)g(not)g(consider)h(the)e(lev)n(el)i(of)g
(faults)g(as)f(the)g(simple)2040 4942 y(idea)36 b(do)g(w)n(e)g(will)h
(treat)f(the)f(test)h(con\014guration)f(and)g(result)h(as)2040
5029 y(table)22 b(8.)34 b(Then)22 b(w)n(e)g(will)i(regard)e(\(1,1,-\))h
(is)g(the)e(MFS)h(for)h(err)g(1)f(and)2040 5116 y(\(0,-,0\),\(-,0,0\))
27 b(for)f(err)g(2.)2115 5203 y(W)-6 b(e)31 b(incorrectly)i(iden)n
(ti\014ed)d(the)i(MFS)g(for)h(err)f(2)g(b)r(ecause)g(the)2040
5290 y(test)h(con\014guration)g(\(1,1,0\))h(mask)n(ed)f(the)g(sc)n
(hema)g(\(-,-,0\))g(whic)n(h)2040 5378 y(should)27 b(trigger)i(err)f(2)
f(but)g(as)h(it)g(triggered)g(a)g(higher)f(fault)h(err)g(1,)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop -79 -17 a Fg(T)-7 b(able)28 b(8:)38
b(simple)28 b(idea)h(for)h(masking)e(e\013ect)g(example)p
-32 10 1754 5 v 13 71 a Fo(ERR)c(1)p 833 97 5 88 v 638
w(ERR)h(2)p -36 110 1761 5 v 9 171 a(id)p 116 197 5 88
v 90 w(test)g(inputs)p 564 197 V 89 w(result)p 843 197
V 90 w(id)p 996 197 V 90 w(test)h(inputs)p 1444 197 V
89 w(result)p -36 201 1761 5 v 22 262 a(1)p 116 288 5
88 v 148 w(\(0,)g(0,)g(0\))p 564 288 V 135 w(P)-6 b(ASS)p
843 288 V 101 w(1)p 996 288 V 148 w(\(0,)26 b(0,)g(0\))p
1444 288 V 142 w(F)-9 b(AIL)p -36 292 1761 5 v 22 353
a(2)p 116 379 5 88 v 148 w(\(0,)26 b(0,)g(1\))p 564 379
V 135 w(P)-6 b(ASS)p 843 379 V 101 w(2)p 996 379 V 148
w(\(0,)26 b(0,)g(1\))p 1444 379 V 135 w(P)-6 b(ASS)p
-36 383 1761 5 v 22 444 a(3)p 116 471 5 88 v 148 w(\(0,)26
b(1,)g(0\))p 564 471 V 135 w(P)-6 b(ASS)p 843 471 V 101
w(3)p 996 471 V 148 w(\(0,)26 b(1,)g(0\))p 1444 471 V
142 w(F)-9 b(AIL)p -36 475 1761 5 v 22 536 a(4)p 116
562 5 88 v 148 w(\(0,)26 b(1,)g(1\))p 564 562 V 135 w(P)-6
b(ASS)p 843 562 V 101 w(4)p 996 562 V 148 w(\(0,)26 b(1,)g(1\))p
1444 562 V 135 w(P)-6 b(ASS)p -36 566 1761 5 v 22 627
a(5)p 116 653 5 88 v 148 w(\(1,)26 b(0,)g(0\))p 564 653
V 135 w(P)-6 b(ASS)p 843 653 V 101 w(5)p 996 653 V 148
w(\(1,)26 b(0,)g(0\))p 1444 653 V 142 w(F)-9 b(AIL)p
-36 657 1761 5 v 22 718 a(6)p 116 745 5 88 v 148 w(\(1,)26
b(0,)g(1\))p 564 745 V 135 w(P)-6 b(ASS)p 843 745 V 101
w(6)p 996 745 V 148 w(\(1,)26 b(0,)g(1\))p 1444 745 V
135 w(P)-6 b(ASS)p -36 749 1761 5 v 22 810 a(7)p 116
836 5 88 v 148 w(\(1,)26 b(1,)g(0\))p 564 836 V 142 w(F)-9
b(AIL)p 843 836 V 109 w(7)p 996 836 V 148 w(\(1,)26 b(1,)g(0\))p
1444 836 V 135 w(P)-6 b(ASS)p -36 840 1761 5 v 22 901
a(8)p 116 927 5 88 v 148 w(\(1,)26 b(1,)g(1\))p 564 927
V 142 w(F)-9 b(AIL)p 843 927 V 109 w(8)p 996 927 V 148
w(\(1,)26 b(1,)g(1\))p 1444 927 V 135 w(P)-6 b(ASS)p
-36 931 1761 5 v -36 946 V -116 1168 a Fg(T)f(able)28
b(9:)39 b(Another)30 b(idea)e(for)i(masking)e(e\013ect)h(example)p
-32 1195 1754 5 v 13 1256 a Fo(ERR)24 b(1)p 833 1282
5 88 v 638 w(ERR)h(2)p -36 1295 1761 5 v 9 1356 a(id)p
116 1382 5 88 v 90 w(test)g(inputs)p 564 1382 V 89 w(result)p
843 1382 V 90 w(id)p 996 1382 V 90 w(test)h(inputs)p
1444 1382 V 89 w(result)p -36 1386 1761 5 v 22 1447 a(1)p
116 1473 5 88 v 148 w(\(0,)g(0,)g(0\))p 564 1473 V 135
w(P)-6 b(ASS)p 843 1473 V 101 w(1)p 996 1473 V 148 w(\(0,)26
b(0,)g(0\))p 1444 1473 V 142 w(F)-9 b(AIL)p -36 1477
1761 5 v 22 1538 a(2)p 116 1564 5 88 v 148 w(\(0,)26
b(0,)g(1\))p 564 1564 V 135 w(P)-6 b(ASS)p 843 1564 V
101 w(2)p 996 1564 V 148 w(\(0,)26 b(0,)g(1\))p 1444
1564 V 135 w(P)-6 b(ASS)p -36 1569 1761 5 v 22 1630 a(3)p
116 1656 5 88 v 148 w(\(0,)26 b(1,)g(0\))p 564 1656 V
135 w(P)-6 b(ASS)p 843 1656 V 101 w(3)p 996 1656 V 148
w(\(0,)26 b(1,)g(0\))p 1444 1656 V 142 w(F)-9 b(AIL)p
-36 1660 1761 5 v 22 1721 a(4)p 116 1747 5 88 v 148 w(\(0,)26
b(1,)g(1\))p 564 1747 V 135 w(P)-6 b(ASS)p 843 1747 V
101 w(4)p 996 1747 V 148 w(\(0,)26 b(1,)g(1\))p 1444
1747 V 135 w(P)-6 b(ASS)p -36 1751 1761 5 v 22 1812 a(5)p
116 1838 5 88 v 148 w(\(1,)26 b(0,)g(0\))p 564 1838 V
135 w(P)-6 b(ASS)p 843 1838 V 101 w(5)p 996 1838 V 148
w(\(1,)26 b(0,)g(0\))p 1444 1838 V 142 w(F)-9 b(AIL)p
-36 1843 1761 5 v 22 1904 a(6)p 116 1930 5 88 v 148 w(\(1,)26
b(0,)g(1\))p 564 1930 V 135 w(P)-6 b(ASS)p 843 1930 V
101 w(6)p 996 1930 V 148 w(\(1,)26 b(0,)g(1\))p 1444
1930 V 135 w(P)-6 b(ASS)p -36 1934 1761 5 v 22 1995 a(7)p
116 2021 5 88 v 148 w(\(1,)26 b(1,)g(0\))p 564 2021 V
142 w(F)-9 b(AIL)p 843 2021 V 109 w(7)p 996 2021 V 148
w(\(1,)26 b(1,)g(0\))p 1444 2021 V 142 w(F)-9 b(AIL)p
-36 2025 1761 5 v 22 2086 a(8)p 116 2112 5 88 v 148 w(\(1,)26
b(1,)g(1\))p 564 2112 V 142 w(F)-9 b(AIL)p 843 2112 V
109 w(8)p 996 2112 V 148 w(\(1,)26 b(1,)g(1\))p 1444
2112 V 135 w(P)-6 b(ASS)p -36 2116 1761 5 v -36 2131
V -152 2355 a(so)26 b(w)n(e)h(defaulted)e(consider)h(it)g(did)f(not)g
(trigger)h(err)g(2.)-152 2507 y Fp(4.3)99 b(T)-9 b(est)27
b(con\002gurations)g(with)f(higher)h(le)o(v)o(el)f(fault)72
2604 y(mask)o(ed)g(e)o(v)o(ery)f(lo)o(wer)g(le)o(v)o(el)f(fault)-77
2712 y Fo(So)33 b(what)g(if)h(w)n(e)g(just)f(consider)g(the)g
(con\014gurations)g(triggered)-152 2799 y(higher)38 b(fault)g(as)g(ha)n
(ving)g(triggered)g(the)f(lo)n(w)n(er)i(fault,)i(in)d(other)-152
2886 y(w)n(ords,)31 b(w)n(e)e(defaulted)g(think)e(that)i(for)g(eac)n(h)
g(test)g(con\014gurations)-152 2973 y(triggering)j(a)f(fault,)i(sa)n(y)
-6 b(,)31 b Fn(F)683 2981 y Fk(i)710 2973 y Fo(,)h(it)f(has)f(mask)n
(ed)h(all)g(the)f(faults)i(has)-152 3061 y(a)j(lev)n(el)g(lo)n(w)n(er)g
(than)f(it,)j(i.e.,)h(these)d(faults)g Fn(F)1242 3069
y Fk(j)1274 3061 y Fn(;)14 b(i)36 b(<)g(j)41 b Ft(\024)36
b Fn(L)f Fo(will)-152 3148 y(b)r(e)27 b(triggered)h(in)f(these)g
(con\014gurations)g(if)h(the)f(fault)g Fn(F)1502 3156
y Fk(i)1556 3148 y Fo(do)r(es)g(not)-152 3235 y(trigger.)52
b(F)-6 b(or)31 b(this)g(idea,)i(the)d(iden)n(tifying)h(pro)r(cess)h
(for)g(a)f(partic-)-152 3322 y(ular)k(fault)g(with)g(considering)g
(masking)g(e\013ect,)i(sa)n(y)-6 b(,)37 b Fn(F)1552 3330
y Fk(i)1612 3322 y Fo(can)e(b)r(e)-152 3409 y(form)n(ulated)26
b(as)g(follo)n(ws:)-77 3496 y(Let)264 3684 y Fn(S)311
3692 y Fk(ca)398 3684 y Fo(=)521 3590 y Fk(i)489 3613
y Fc([)479 3770 y Fk(j)s Ff(=1)598 3684 y Fn(S)645 3692
y Fk(T)681 3703 y Fd(F)717 3716 y(j)773 3684 y Ft(\000)17
b Fn(S)897 3692 y Fk(T)933 3703 y Fd(P)1002 3684 y Ft(\000)1145
3590 y Fk(L)1124 3613 y Fc([)1079 3770 y Fk(j)s Ff(=)p
Fk(i)p Ff(+1)1266 3684 y Fn(S)1313 3692 y Fk(T)1349 3703
y Fd(F)1385 3716 y(j)65 3939 y Fn(M)139 3947 y Fk(F)212
3939 y Fo(=)k Ft(f)p Fn(s)367 3947 y Fk(i)393 3939 y
Ft(j)p Fn(s)450 3947 y Fk(i)498 3939 y Ft(2)h Fn(S)618
3947 y Fk(ca)709 3939 y Fn(and)f Ft(6)g(9)p Fn(s)957
3947 y Fk(j)1010 3939 y Ft(\036)g Fn(s)1127 3947 y Fk(i)1179
3939 y Fn(s:t:)26 b(s)1347 3947 y Fk(j)1400 3939 y Ft(2)c
Fn(S)1520 3947 y Fk(ca)1586 3939 y Ft(g)-77 4070 y Fo(W)-6
b(e)31 b(can)g(see)h(the)f(di\013eren)n(t)g(part)g(with)g(the)g
(previous)g(form)n(ula)-152 4157 y(is)d(that)g(it)f(just)h(min)n(us)f
(the)g(sc)n(hemas)h(in)g(these)f(passing)i(test)e(con-)-152
4244 y(\014gurations)k(and)f(these)g(test)h(con\014gurations)f
(triggering)i(a)f(lo)n(w)n(er)-152 4332 y(lev)n(el)25
b(than)f Fn(F)249 4340 y Fk(i)276 4332 y Fo(.)34 b(With)24
b(this,)h(w)n(e)g(will)h(treat)f(the)g(table)f(7)h(as)h(:)34
b(table)-152 4419 y(9.)39 b(And)26 b(w)n(e)h(can)g(easily)h(get)f(the)g
(exp)r(ected)f(result:\(1,1,-\))i(for)g(Err)-152 4506
y(1)e(and)f(\(-,-,0\))g(for)i(Err)f(2.)-77 4593 y(But)h(it)h(still)g
(not)f(a)h(p)r(erfect)f(solution,)i(ob)n(viously)e(not,)h(b)r(ecause)
-152 4680 y(not)33 b(all)h(the)e(test)h(con\014gurations)g(triggering)h
(higher)f(lev)n(el)g(fault)-152 4767 y(will)19 b(trigger)g(lo)n(w)n(er)
f(lev)n(el)g(fault.)32 b(Consider)19 b(the)e(follo)n(wing)j(example,)
-152 4855 y(for)26 b(SUT\(3,2\),)f(Assume)g(\(1,-,-\))f(is)i(the)e(MFS)
h(of)g(err)g(1)g(and)f(\(-,1,1\))-152 4942 y(is)30 b(the)e(MFS)h(of)g
(err)g(2,)i(And)c(err)i(1)g(has)g(higher)g(lev)n(el)g(than)f(err)h(2.)
-152 5029 y(The)d(test)g(con\014gurations)f(and)g(result)h(is)g(listed)
g(in)g(table)f(10.)-77 5116 y(If)e(w)n(e)h(using)f(the)f(computing)h
(mo)r(del)g(listed)h(in)f(this)g(subsection,)-152 5203
y(w)n(e)31 b(will)g(\014nd)d(\(1,-,-\))i(for)g(err)h(1)f(and)f(then)g
(\(1,-,-\))g(and)h(\(-,1,1\))g(for)-152 5290 y(Err)j(2.)55
b(So)32 b(wh)n(y)g(do)g(this)h(happ)r(ened?)53 b(The)32
b(reason)h(is)g(listed)g(in)-152 5378 y(table)f(11.)51
b(In)30 b(this)h(table,)i(w)n(e)f(\014nd)e(that)g(for)i(the)f(5th)g(,)i
(6th)d(and)2213 -17 y Fg(T)-7 b(able)28 b(10:)39 b(partially)28
b(masking)g(e\013ect)h(example)p 2596 10 881 5 v 2594
97 5 88 v 2641 71 a Fo(id)p 2748 97 V 90 w(test)c(inputs)p
3196 97 V 89 w(result)p 3474 97 V 2596 101 881 5 v 2594
188 5 88 v 2654 162 a(1)p 2748 188 V 148 w(\(0,)h(0,)g(0\))p
3196 188 V 135 w(P)-6 b(ASS)p 3474 188 V 2596 192 881
5 v 2594 280 5 88 v 2654 254 a(2)p 2748 280 V 148 w(\(0,)26
b(0,)g(1\))p 3196 280 V 135 w(P)-6 b(ASS)p 3474 280 V
2596 284 881 5 v 2594 371 5 88 v 2654 345 a(3)p 2748
371 V 148 w(\(0,)26 b(1,)g(0\))p 3196 371 V 135 w(P)-6
b(ASS)p 3474 371 V 2596 375 881 5 v 2594 462 5 88 v 2654
436 a(4)p 2748 462 V 148 w(\(0,)26 b(1,)g(1\))p 3196
462 V 141 w(Err)g(2)p 3474 462 V 2596 466 881 5 v 2594
554 5 88 v 2654 527 a(5)p 2748 554 V 148 w(\(1,)g(0,)g(0\))p
3196 554 V 141 w(Err)g(1)p 3474 554 V 2596 558 881 5
v 2594 645 5 88 v 2654 619 a(6)p 2748 645 V 148 w(\(1,)g(0,)g(1\))p
3196 645 V 141 w(Err)g(1)p 3474 645 V 2596 649 881 5
v 2594 736 5 88 v 2654 710 a(7)p 2748 736 V 148 w(\(1,)g(1,)g(0\))p
3196 736 V 141 w(Err)g(1)p 3474 736 V 2596 740 881 5
v 2594 828 5 88 v 2654 801 a(8)p 2748 828 V 148 w(\(1,)g(1,)g(1\))p
3196 828 V 141 w(Err)g(1)p 3474 828 V 2596 832 881 5
v 2596 847 V 2040 1080 a Fg(T)-7 b(able)30 b(11:)44 b(Another)32
b(idea)f(for)i(partially)e(masking)f(e\013ect)2040 1167
y(example)p 2160 1194 1754 5 v 2204 1255 a Fo(ERR)25
b(1)p 3024 1281 5 88 v 638 w(ERR)g(2)p 2156 1294 1761
5 v 2201 1355 a(id)p 2308 1381 5 88 v 90 w(test)g(inputs)p
2756 1381 V 89 w(result)p 3034 1381 V 90 w(id)p 3188
1381 V 90 w(test)g(inputs)p 3636 1381 V 89 w(result)p
2156 1385 1761 5 v 2214 1446 a(1)p 2308 1472 5 88 v 148
w(\(0,)h(0,)g(0\))p 2756 1472 V 135 w(P)-6 b(ASS)p 3034
1472 V 101 w(1)p 3188 1472 V 148 w(\(0,)26 b(0,)g(0\))p
3636 1472 V 135 w(P)-6 b(ASS)p 2156 1476 1761 5 v 2214
1537 a(2)p 2308 1564 5 88 v 148 w(\(0,)26 b(0,)g(1\))p
2756 1564 V 135 w(P)-6 b(ASS)p 3034 1564 V 101 w(2)p
3188 1564 V 148 w(\(0,)26 b(0,)g(1\))p 3636 1564 V 135
w(P)-6 b(ASS)p 2156 1568 1761 5 v 2214 1629 a(3)p 2308
1655 5 88 v 148 w(\(0,)26 b(1,)g(0\))p 2756 1655 V 135
w(P)-6 b(ASS)p 3034 1655 V 101 w(3)p 3188 1655 V 148
w(\(0,)26 b(1,)g(0\))p 3636 1655 V 135 w(P)-6 b(ASS)p
2156 1659 1761 5 v 2214 1720 a(4)p 2308 1746 5 88 v 148
w(\(0,)26 b(1,)g(1\))p 2756 1746 V 135 w(P)-6 b(ASS)p
3034 1746 V 101 w(4)p 3188 1746 V 148 w(\(0,)26 b(1,)g(1\))p
3636 1746 V 142 w(F)-9 b(AIL)p 2156 1750 1761 5 v 2214
1811 a(5)p 2308 1838 5 88 v 148 w(\(1,)26 b(0,)g(0\))p
2756 1838 V 142 w(F)-9 b(AIL)p 3034 1838 V 109 w(5)p
3188 1838 V 148 w(\(1,)26 b(0,)g(0\))p 3636 1838 V 142
w(F)-9 b(AIL)p 2156 1842 1761 5 v 2214 1903 a(6)p 2308
1929 5 88 v 148 w(\(1,)26 b(0,)g(1\))p 2756 1929 V 142
w(F)-9 b(AIL)p 3034 1929 V 109 w(6)p 3188 1929 V 148
w(\(1,)26 b(0,)g(1\))p 3636 1929 V 142 w(F)-9 b(AIL)p
2156 1933 1761 5 v 2214 1994 a(7)p 2308 2020 5 88 v 148
w(\(1,)26 b(1,)g(0\))p 2756 2020 V 142 w(F)-9 b(AIL)p
3034 2020 V 109 w(7)p 3188 2020 V 148 w(\(1,)26 b(1,)g(0\))p
3636 2020 V 142 w(F)-9 b(AIL)p 2156 2024 1761 5 v 2214
2085 a(8)p 2308 2112 5 88 v 148 w(\(1,)26 b(1,)g(1\))p
2756 2112 V 142 w(F)-9 b(AIL)p 3034 2112 V 109 w(8)p
3188 2112 V 148 w(\(1,)26 b(1,)g(1\))p 3636 2112 V 142
w(F)-9 b(AIL)p 2156 2116 1761 5 v 2156 2131 V 2040 2370
a(7th)20 b(test)g(con\014guration,)h(these)f(should)f(not)h(trigger)h
(the)e(err)h(2,)i(but)2040 2458 y(w)n(e)28 b(defaulted)g(set)f(them)g
(as)h(triggered)g(err)g(2)g(b)r(ecause)g(they)e(ha)n(v)n(e)2040
2545 y(trigger)33 b(a)g(higher)f(lev)n(el)g(fault)h(err)f(1.)55
b(So)32 b(this)g(lead)g(us)g(a)h(wrong)2040 2632 y(pro)r(cess)26
b(to)g(iden)n(tify)f(the)g(MFS)h(for)g(err)g(2.)2040
2793 y Fp(4.4)99 b(Ideal)25 b(solution)2115 2901 y Fo(T)-6
b(o)38 b(get)h(an)f(ideal)h(solution,)j(w)n(e)c(should)g(mak)n(e)g(the)
g(follo)n(w)n(ed)2040 2988 y(assumption:)2115 3075 y(F)-6
b(or)27 b(a)h(particular)f(fault,)h(sa)n(y)-6 b(,)28
b Fn(F)3078 3083 y Fk(i)3104 3075 y Fo(,)g(with)g(,these)f(test)g
(con\014gura-)2040 3162 y(tions)j(triggered)h(higher)f(fault)h(are)3119
3106 y Fc(S)3183 3127 y Fk(i)p Fb(\000)p Ff(1)3183 3185
y Fk(j)s Ff(=1)3305 3162 y Fn(T)3350 3170 y Fk(F)3389
3181 y Fd(j)3454 3162 y Fo(.Assume)f(w)n(e)g(ha)n(v)n(e)2040
3250 y(kno)n(wn)h(previously)g(that)g(in)g(this)g(set)h(some)g(test)f
(con\014gurations)2040 3337 y(will)25 b(trigger)g Fn(F)2478
3345 y Fk(i)2528 3337 y Fo(if)g(the)e(higher)h(fault)h(will)g(not)e
(triggered,)j(w)n(e)e(lab)r(el)2040 3424 y(this)i(set)f(as)2115
3511 y Fn(T)2160 3519 y Fb(:)p Fk(tr)r(i)p Fb(\000)p
Fk(F)2366 3530 y Fd(i)2115 3598 y Fo(And)31 b(some)j(test)f
(con\014gurations)g(in)f(this)h(set)g(will)h(trigger)g
Fn(F)3985 3606 y Fk(i)4011 3598 y Fo(.)2040 3685 y(W)-6
b(e)25 b(lab)r(el)i(them)e(as:)2115 3773 y Fn(T)2160
3781 y Fk(tr)r(i)p Fb(\000)p Fk(F)2324 3792 y Fd(i)2353
3773 y Fo(.)38 b(\(this)26 b(part)h(is)g(needed)f(b)r(ecause)h(of)g(if)
h(there)e(are)h(more)2040 3860 y(than)h(t)n(w)n(o)i(faults)g(in)f(a)g
(SUT,)g(the)f(higher)h(fault)h(ma)n(y)e(ev)n(en)h(mak)n(e)2040
3947 y(the)c(lo)n(w)n(er)i(fault)f(don't)f(app)r(ear\))2115
4042 y(Ob)n(viously)-6 b(,)p Fn(T)2511 4050 y Fk(tr)r(i)p
Fb(\000)p Fk(F)2675 4061 y Fd(i)2716 3986 y Fc(S)2793
4042 y Fn(T)2838 4050 y Fb(:)p Fk(tr)r(i)p Fb(\000)p
Fk(F)3044 4061 y Fd(i)3094 4042 y Fo(=)3175 3986 y Fc(S)3239
4007 y Fk(i)p Fb(\000)p Ff(1)3239 4065 y Fk(j)s Ff(=1)3361
4042 y Fn(T)3406 4050 y Fk(F)3445 4061 y Fd(j)3480 4042
y Fo(.)2115 4130 y(A)n(t)35 b(last,)k(w)n(e)e(should)e(do)h(as)h(the)e
(follo)n(wing)j(to)e(get)h(the)e(ideal)2040 4217 y(computing)25
b(form)n(ula:)2115 4304 y(Let)2273 4448 y Fn(S)2320 4456
y Fk(ca)2407 4448 y Fo(=)c Fn(S)2535 4456 y Fk(T)2571
4467 y Fd(tr)q(i)p Fa(\000)p Fd(F)2726 4480 y(i)2762
4448 y Fn(S)2809 4456 y Fk(T)2845 4467 y Fd(F)2881 4480
y(i)2933 4448 y Fo(+)c Fn(S)3057 4456 y Fk(T)3093 4467
y Fd(F)3129 4480 y(i)3181 4448 y Ft(\000)g Fn(S)3305
4456 y Fk(T)3341 4467 y Fd(P)3410 4448 y Ft(\000)g Fn(S)3534
4456 y Fk(T)3570 4467 y Fa(:)p Fd(tr)q(i)p Fa(\000)p
Fd(F)3764 4480 y(i)2257 4737 y Fn(M)2331 4745 y Fk(F)2403
4737 y Fo(=)k Ft(f)p Fn(s)2558 4745 y Fk(i)2585 4737
y Ft(j)p Fn(s)2642 4745 y Fk(i)2690 4737 y Ft(2)g Fn(S)2809
4745 y Fk(ca)2900 4737 y Fn(and)h Ft(6)f(9)p Fn(s)3149
4745 y Fk(j)3202 4737 y Ft(\036)g Fn(s)3319 4745 y Fk(i)3371
4737 y Fn(s:t:)26 b(s)3539 4745 y Fk(j)3592 4737 y Ft(2)c
Fn(S)3712 4745 y Fk(ca)3777 4737 y Ft(g)2115 4881 y Fo(Ho)n(w)n(ev)n
(er)33 b(this)g(form)n(ula)h(is)g(impractical,)j(b)r(ecause)c(w)n(e)h
(cannot)2040 4969 y(mak)n(e)27 b(sure)f(these)h(sc)n(hemas)g(will)h
(not)f(trigger)g(lo)n(w)n(er)h(fault)f(except)2040 5056
y(w)n(e)i(ha)n(ving)e(remo)n(ving)i(the)e(higher)i(lev)n(el)f(fault)h
(and)e(re-executing)2040 5143 y(this)f(test)f(con\014gurations.)2040
5357 y Fp(5.)99 b(APPR)m(O)l(A)-5 b(CH)23 b(DESCRIPTION)p
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 264 1228 a @beginspecial 0 @llx
0 @lly 243 @urx 289 @ury 1656 @rhi @setspecial
%%BeginDocument: framework.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: framework.pdf
%%Creator: Adobe Acrobat 9.3.4
%%For: Jie_Lee
%%CreationDate: 2013/12/9, 20:36:24
%%BoundingBox: 0 0 243 289
%%HiResBoundingBox: 0 0 242.4428 288.5227
%%CropBox: 0 0 242.4428 288.5227
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1179 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2013-12-09T20:35:44+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2013"
   xmp:ModifyDate="2013-12-09T20:36:15+08:00"
   xmp:MetadataDate="2013-12-09T20:36:15+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2013"
   xmpMM:DocumentID="uuid:6aa15336-8028-48dd-af77-ecd8101368a4"
   xmpMM:InstanceID="uuid:97126e8b-d858-4190-a04f-24539c1ddef0">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Jie_Lee</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -288.523 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288.523 li
242.443 288.523 li
242.443 0 li
cp
clp
[1 0 0 1 -185.89 0 ]ct
203.74 18.8849 mo
297.64 18.8849 li
290.55 32.1749 290.55 48.1149 297.64 61.4048 cv
203.74 61.4048 li
196.65 48.1149 196.65 32.1749 203.74 18.8849 cv
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.75075 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
203.74 18.8849 mo
297.64 18.8849 li
290.55 32.1749 290.55 48.1149 297.64 61.4048 cv
203.74 61.4048 li
196.65 48.1149 196.65 32.1749 203.74 18.8849 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcb878000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966e8956d9e000085000000204c68656164ecde32e000000f640000
0036686865610dad06da00000f9c00000024686d747872400ca400000fc0
0000257e6c6f6361f0b8e9de0000354000001e4e6d617870213124a10000
5390000000206e616d6519aa717b000053b000000d3e707265706baf02fe
000060f000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
00a00600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b8529e3c73e55f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac050c005b0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000054c00630000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004340094000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000005b80035000000000000000000000000000000000377
0029039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000003b50085000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a1011d011d011d011d011d011d011d011d011d011d
0186022d022d022d022d022d022d022d022d022d022d022d022d022d022d
022d022d022d022d022d022d022d022d022d022d022d022d022d022d022d
02da02da02da02da02da02da02da03520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035203520352035203520352
035203520352035203520352035203520352035204010401040104010401
040104010401040104010401040104010401048d048d048d048d048d048d
048d048d048d048d052405240524052405c505c505c505c505c505c505c5
05c505c505c5064806480648064806480648064806480648064806480648
064806480648064806480648064806480648064806480648064806480648
064806480648064806480648064806480648064806480648064807350735
0735073507350735073507350735073507b907b907b90832083208320832
083208320832083208320832083208320832083208320832083208320875
08750875087508750875095609e709e709e709e709e709e709e70a750a75
0a750a750a750a750a750a750a750a750a750a750b0c0b0c0b0c0b850b85
0b850b850c4b0c4b0c4b0c4b0c4b0c4b0c4b0c4b0c4b0c4b0cc70cc70cc7
0cc70cc70cc70cc70cc70cc70cc70cc70cc70cc70cc70cc70cc70cc70cc7
0cc70cc70cc70cc70cc70cc70cc70cc70cc70d570d570d570d570d570d57
0d570d570d570d570d570d570e2f0e2f0e2f0e2f0e2f0ebf0f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f240f240f240f240f240f24
0f240f240f240f240f240f240f240f240f240f690f690f690fe00fe00fe0
0fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe0
0fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe0
0fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe0
0fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe0
0fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe01026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
102610261026102610261026102610261026102610261026102610261026
0000000100000f26006000050000000000020010002f0065000011902410
000000000000002d02220000000300000000006400000000000300000001
000e00640000000300000002000e03040000000300000003002403120000
000300000004000e00640000000300000005001803360000000300000006
000e006400000003000000070076034e0000000300000008002a000e0000
000300000009002003c4000000030000000a02a00064000000030000000b
005603e4000000030000000c002a043a000000030000000d029804640000
00030000000e006c06fc0001000000000000003207680001000000000001
0007079a0001000000000002000708ea0001000000000003001208f10001
0000000000040007079a0001000000000005000c09030001000000000006
0007079a0001000000000007003b090f00010000000000080015076f0001
0000000000090010094a000100000000000a0150079a000100000000000b
002b095a000100000000000c00150985000100000000000d014c099a0001
00000000000e00360ae60003000104090000006400000003000104090001
000e00640003000104090002000e03040003000104090003002403120003
000104090004000e00640003000104090005001803360003000104090006
000e006400030001040900070076034e0003000104090008002a000e0003
000104090009002003c4000300010409000a02a00064000300010409000b
005603e4000300010409000c002a043a000300010409000d029804640003
00010409000e006c06fc00a9002000320030003100320020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020005200690067006800740073
002000520065007300650072007600650064002e00430061006c00690062
00720069002000690073002000610020006d006f006400650072006e0020
00730061006e0073002000730065007200690066002000660061006d0069
006c00790020007700690074006800200073007500620074006c00650020
0072006f0075006e00640069006e006700730020006f006e002000730074
0065006d007300200061006e006400200063006f0072006e006500720073
002e00200049007400200066006500610074007500720065007300200072
00650061006c0020006900740061006c006900630073002c00200073006d
0061006c006c00200063006100700073002c00200061006e00640020006d
0075006c007400690070006c00650020006e0075006d006500720061006c
00200073006500740073002e0020004900740073002000700072006f0070
006f007200740069006f006e007300200061006c006c006f007700200068
00690067006800200069006d007000610063007400200069006e00200074
0069006700680074006c007900200073006500740020006c0069006e0065
00730020006f0066002000620069006700200061006e006400200073006d
0061006c006c0020007400650078007400200061006c0069006b0065002e
002000430061006c0069006200720069002700730020006d0061006e0079
002000630075007200760065007300200061006e00640020007400680065
0020006e0065007700200072006100730074006500720069007300650072
0020007400650061006d00200075007000200069006e0020006200690067
006700650072002000730069007a0065007300200074006f002000720065
007600650061006c002000610020007700610072006d00200061006e0064
00200073006f006600740020006300680061007200610063007400650072
002e0052006500670075006c00610072004d006900630072006f0073006f
00660074003a002000430061006c00690062007200690056006500720073
0069006f006e00200035002e0037003200430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002e004c0075006300280061007300290020
00640065002000470072006f006f00740068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0063
00740066006f006e007400730068007400740070003a002f002f0066006f
006e007400660061006200720069006b002e0063006f006d0059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e0061007300700078a92032303132204d6963726f736f
667420436f72706f726174696f6e2e20416c6c2052696768747320526573
65727665642e43616c696272692069732061206d6f6465726e2073616e73
2073657269662066616d696c79207769746820737562746c6520726f756e
64696e6773206f6e207374656d7320616e6420636f726e6572732e204974
206665617475726573207265616c206974616c6963732c20736d616c6c20
636170732c20616e64206d756c7469706c65206e756d6572616c20736574
732e204974732070726f706f7274696f6e7320616c6c6f77206869676820
696d7061637420696e2074696768746c7920736574206c696e6573206f66
2062696720616e6420736d616c6c207465787420616c696b652e2043616c
696272692773206d616e792063757276657320616e6420746865206e6577
2072617374657269736572207465616d20757020696e2062696767657220
73697a657320746f2072657665616c2061207761726d20616e6420736f66
74206368617261637465722e526567756c61724d6963726f736f66743a20
43616c6962726956657273696f6e20352e373243616c6962726920697320
612074726164656d61726b206f6620746865204d6963726f736f66742067
726f7570206f6620636f6d70616e6965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[8269 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+Calibri AddT42Char 
2 1460 75 <00020063ffed04e8052100130027007c401a141810014d14100f014d1414
0d014d14120c014d14180b014d14b80233400920003000800003001eb8ff
e8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb30c014d1e
b8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb10556003fed
3fed012fe12b2b2b2b2bd45de12b2b2b2b2b313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e0204e84a93de9492d5
8b444a94de948fd48d45b5275b987070985f29265a9772719a5e2802969d
fcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d548fbc
>PBAAAA+Calibri AddT42Char 
2 1700 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PBAAAA+Calibri AddT42Char 
2 2050 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+Calibri AddT42Char 
2 2632 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+Calibri AddT42Char 
2 2954 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>PBAAAA+Calibri AddT42Char 
2 3216 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>PBAAAA+Calibri AddT42Char 
2 3954 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PBAAAA+Calibri AddT42Char 
2 4196 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+Calibri AddT42Char 
2 4780 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+Calibri AddT42Char 
2 5070 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+Calibri AddT42Char 
2 5656 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+Calibri AddT42Char 
2 5898 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+Calibri AddT42Char 
2 6294 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+Calibri AddT42Char 
2 6542 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
/O 75 def
/a 258 def
/c 272 def
/e 286 def
/f 296 def
/g 336 def
/i 349 def
/l 367 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
dup 79 /O put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/MUJJXL+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/MUJJXL+Calibri*1 
[32{/.notdef}rp /space 46{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c 
/.notdef /e /f /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t /u 
138{/.notdef}rp]
MUJJXL+Calibri nf
MUJJXL+Calibri*1 [8.275 0 0 -8.275 0 0 ]msf
217.6 37.9149 mo
(Original failing test )
[5.27119 3.02037 1.49774 3.77335 2.2673 3.77335 3.77344 2.26732 1.49776 3.02031 3.77344 1.49774 
2.26732 1.49774 4.5181 3.77335 1.49774 3.02045 3.77341 3.02869 3.02045 0 ]xsh
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
226.42 47.5349 mo
(configuration)
[3.74553 3.75369 4.48795 2.2522 1.50146 3.75369 4.48795 2.99475 3.75378 2.25229 2.24399 4.48792 
0 ]xsh
283.46 146.445 mo
354.326 146.445 li
354.326 103.925 li
283.46 103.925 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
283.46 146.445 mo
354.326 146.445 li
354.326 103.925 li
283.46 103.925 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 780 39 <0001005bffee04780520003f00a2401d1c1c0f181810014d18100f014d18
100d014d180a0c014d18100b014d18b80211400d00bf2701202740276027
03270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d0fb8ffee
b30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab42222392f
3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4ed111239
2fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f313001140e02
23222e0223220e0215141e02333236371121222635343e023321321e0215
11140e0423222e0235343e0233321e04047804080c070c385e835a6baa76
3f457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196ec
a3565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d
1d01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a
23291a22>PBAAAA+Calibri AddT42Char 
2 2330 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PBAAAA+Calibri AddT42Char 
2 3690 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>PBAAAA+Calibri AddT42Char 
2 5354 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>PBAAAA+Calibri AddT42Char 
2 6830 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>PBAAAA+Calibri AddT42Char 
2 7262 454 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/G 39 def
/d 282 def
/h 346 def
/p 393 def
/w 449 def
/x 454 def
end
PBAAAA+Calibri /Encoding get
dup 71 /G put
dup 100 /d put
dup 104 /h put
dup 112 /p put
dup 119 /w put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MUJJXL+Calibri*1 
[32{/.notdef}rp /space 38{/.notdef}rp /G 7{/.notdef}rp /O 17{/.notdef}rp /a 
/.notdef /c /d /e /f /g /h /i 
2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r 
/s /t /u /.notdef /w /x 135{/.notdef}rp]
MUJJXL+Calibri nf
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
296.77 118.265 mo
(Generate test )
[5.23871 3.75378 4.48795 3.75375 2.99475 3.75378 2.25229 4.48801 1.5015 2.99481 3.75375 3.00305 
2.99478 0 ]xsh
MUJJXL+Calibri*1 [8.275 0 0 -8.275 0 0 ]msf
287.67 127.865 mo
(configurations with )
[3.74033 3.74854 4.49326 2.25073 1.49774 3.74854 4.49326 2.99554 3.74863 2.25085 2.24249 4.49326 
3.74854 3.00388 2.24249 5.24634 2.24246 2.25085 4.49329 0 ]xsh
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
303.55 137.495 mo
(fixed part)
[2.2522 2.24396 3.00299 4.48801 3.75369 2.24399 3.75369 3.75378 2.99475 0 ]xsh
283.46 196.055 mo
318.9 174.795 li
354.33 196.055 li
318.9 217.315 li
283.46 196.055 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
283.46 196.055 mo
318.9 174.795 li
354.33 196.055 li
318.9 217.315 li
283.46 196.055 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 7890 845 <00020085fff60357055e003400480026400e24241f0914b305053009443a
4d1fb80101b13046003fed3fddce11392fed1112392f313001140e020707
140623222e023503263e023333323e0235342e0223220e0223222e023534
3e0433321e0201140e0223222e0235343e0233321e020357325a7e4d0723
27151e1208060109121c1216415c391a204061423a5740290a070b080406
14395161346b9a6430fec40918291e20281909091928201e29180903df58
88603605f10f0f03070c080115171d130729445c32395f4526191e180611
1d161819131f1a123d688cfc3b212b1b0b0b1b2b21212d190b0b192d>PBAAAA+Calibri AddT42Char 
2 322 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>PBAAAA+Calibri AddT42Char 
2 4330 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/question 845 def
/E 28 def
/m 373 def
end
PBAAAA+Calibri /Encoding get
dup 63 /question put
dup 69 /E put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MUJJXL+Calibri*1 
[32{/.notdef}rp /space 30{/.notdef}rp /question 5{/.notdef}rp /E /.notdef /G 
7{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /x 135{/.notdef}rp]
MUJJXL+Calibri nf
MUJJXL+Calibri*1 [8.275 0 0 -8.275 0 0 ]msf
296.7 194.015 mo
(End condition )
[3.77347 4.5181 3.77335 2.26733 3.02869 4.51807 4.51813 3.77335 2.2673 2.27567 2.26733 3.77335 
4.5181 0 ]xsh
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
306.17 203.635 mo
(match )
[6.7402 3.75378 2.25232 3.74554 3.75369 0 ]xsh
328.48 203.635 mo
(?)sh
345.47 18.8849 mo
411.02 18.8849 li
403.94 32.1749 403.94 48.1149 411.02 61.4048 cv
345.47 61.4048 li
338.39 48.1149 338.39 32.1749 345.47 18.8849 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
345.47 18.8849 mo
411.02 18.8849 li
403.94 32.1749 403.94 48.1149 411.02 61.4048 cv
345.47 61.4048 li
338.39 48.1149 338.39 32.1749 345.47 18.8849 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 570 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/F 38 def
end
PBAAAA+Calibri /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MUJJXL+Calibri*1 
[32{/.notdef}rp /space 30{/.notdef}rp /question 5{/.notdef}rp /E /F /G 
7{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /x 135{/.notdef}rp]
MUJJXL+Calibri nf
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
359.68 42.7448 mo
(Fixed part)
[3.75375 1.50146 3.74548 3.75375 4.48795 1.5015 4.48795 3.75378 2.99475 0 ]xsh
1 lc
1 lj
248.03 61.4048 mo
314.37 101.205 li
@
315.27 98.2249 mo
318.9 103.925 li
312.16 103.405 li
315.27 98.2249 li
cp
ef
375.59 61.4048 mo
323.13 100.755 li
@
325.54 102.715 mo
318.9 103.925 li
321.92 97.8849 li
325.54 102.715 li
cp
ef
318.9 146.445 mo
318.9 169.505 li
@
321.92 168.755 mo
318.9 174.795 li
315.88 168.755 li
321.92 168.755 li
cp
ef
283.46 196.055 mo
226.77 196.055 li
226.77 125.185 li
278.18 125.185 li
@
277.42 122.165 mo
283.46 125.185 li
277.42 128.205 li
277.42 122.165 li
cp
ef
222.56 165.415 mo
230.982 165.415 li
230.982 155.815 li
222.56 155.815 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
222.75 163.365 mo
(no)
[4.52521 0 ]xsh
297.64 274.005 mo
340.16 274.005 li
347.99 274.005 354.33 267.655 354.33 259.835 cv
354.33 252.005 347.99 245.655 340.16 245.655 cv
297.64 245.655 li
289.81 245.655 283.46 252.005 283.46 259.835 cv
283.46 267.655 289.81 274.005 297.64 274.005 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2 lc
0 lj
2 ml
297.64 274.005 mo
340.16 274.005 li
347.99 274.005 354.33 267.655 354.33 259.835 cv
354.33 252.005 347.99 245.655 340.16 245.655 cv
297.64 245.655 li
289.81 245.655 283.46 252.005 283.46 259.835 cv
283.46 267.655 289.81 274.005 297.64 274.005 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
312.98 262.685 mo
(end)
[3.75375 4.48795 0 ]xsh
1 lc
1 lj
318.9 217.315 mo
318.9 240.375 li
@
321.92 239.615 mo
318.9 245.655 li
315.88 239.615 li
321.92 239.615 li
cp
ef
313.53 236.285 mo
324.26 236.285 li
324.26 226.685 li
313.53 226.685 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 7550 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/y 455 def
end
PBAAAA+Calibri /Encoding get
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MUJJXL+Calibri*1 
[32{/.notdef}rp /space 30{/.notdef}rp /question 5{/.notdef}rp /E /F /G 
7{/.notdef}rp /O 17{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /x /y 134{/.notdef}rp]
MUJJXL+Calibri nf
MUJJXL+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
313.8 234.315 mo
(yes)
[3.77026 3.77853 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/MUJJXL+Calibri*1 uf
/MUJJXL+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 73 1399 a Fg(Figure)28 b(1:)39 b(the)30
b(o)n(v)n(erview)d(of)i(our)h(approac)n(h.)-77 1681 y
Fo(In)36 b(this)g(section,)k(w)n(e)d(will)h(giv)n(e)e(a)h(detail)g
(description)g(of)g(our)-152 1768 y(approac)n(h)21 b(and)f(a)g(simple)i
(example)e(will)i(b)r(e)e(attac)n(hed)g(to)h(illustrate)-152
1855 y(this)26 b(algorithm.)-77 1942 y(T)-6 b(raditional)42
b(MFS)f(iden)n(tifying)g(algorithms)h(all)g(including)f(a)-152
2030 y(step:)53 b(\014x)34 b(some)h(parts)g(of)h(the)e(original)i
(failing)h(test)d(con\014gura-)-152 2117 y(tion)j(and)f(then)g(m)n
(utan)n(t)g(other)h(parts)g(to)g(generate)g(newly)g(test)-152
2204 y(con\014guration.)g(This)27 b(step)f(is)h(the)f(basis)i(of)f
(these)f(algorithms,)i(as)-152 2291 y(it)d(can)f(help)g(them)g(to)g
(compare)h(other)f(con\014gurations,)h(to)f(isolate)-152
2378 y(the)d(failure-inducing)g(parts,)i(to)e(help)g(rank)g(the)f(p)r
(ossible)i(sc)n(hemas)-152 2465 y(and)h(so)i(on.)33 b(Our)23
b(approac)n(h)h(is)g(to)f(impro)n(v)n(e)h(the)f(qualit)n(y)g(of)h
(gener-)-152 2553 y(ated)j(test)g(con\014guration,)h(so)f(that)g(to)g
(assist)h(these)f(algorithm)h(to)-152 2640 y(reduce)d(the)h
(in\015uence)e(of)i(the)g(faults)g(masking)g(e\013ects.)-77
2727 y(As)i(a)h(o)n(v)n(erview)g(of)h(our)e(approac)n(h,)i(our)f
(approac)n(h)f(is)h(listed)g(as)-152 2814 y(\014gure)d(5:)-77
2901 y(This)c(\014gure)e(tell)i(us)f(when)f(giv)n(en)h(a)g(original)i
(failing)f(test)f(con\014g-)-152 2988 y(uration)28 b(and)f(the)f
(\014xed)h(part,)g(our)h(approac)n(h)f(will)i(rep)r(eat)e(gener-)-152
3076 y(ating)i(test)f(con\014gurations)h(whic)n(h)f(m)n(utan)n(t)g(the)
f(elemen)n(ts)i(in)f(the)-152 3163 y(original)d(test)e(con\014guration)
f(except)g(con)n(tain)h(this)g(\014xed)f(part)g(un-)-152
3250 y(til)k(the)f(end)g(condition)h(is)g(matc)n(hed.)-77
3337 y(1.)35 b(Mutan)n(t)25 b(other)g(parts)h(of)g(the)f(original)i
(test)f(con\014gurations)-77 3424 y(2.)59 b(Execute)33
b(the)g(SUT)g(under)f(the)h(test)h(con\014guration)f(mak)n(e)-152
3512 y(some)27 b(according)f(to)f(the)h(result.)-77 3599
y(original)h(failing)g(test)f(con\014guration.)34 b(and)25
b(\014xed)g(part.)-77 3686 y(generate)h(test)g(con\014gurations.)-77
3773 y(judge)g(the)f(based)g(on)h(reuslt)-77 3860 y(end.)34
b(regenerate.)-77 3947 y(In)17 b(a)g(w)n(ord,)j(our)d(approac)n(h)h
(tak)n(es)f(a)h(rev)l(alidation)f(strategy)h(when)-152
4035 y(encouter)29 b(di\013eren)n(t)f(faults)h(un)n(til)g(w)n(e)g
(\014nd)f(a)h(test)g(case.)45 b(Next)27 b(w)n(e)-152
4122 y(will)g(discuss)f(the)f(t)n(w)n(o)h(parts)g(in)f(detail.)-152
4311 y Fp(5.1)99 b(judge)26 b(the)g(r)n(esult)-77 4419
y Fo(There)g(are)g(three)f(condition)h(w)n(e)g(will)h(end)e(our)g
(algorithm:)-77 4506 y(1.)39 b(If)28 b(the)e(generated)h(test)g
(con\014guration)g(passed)h(during)e(test-)-152 4593
y(ing.)47 b(This)30 b(means)g(that)f(the)g(\014xed)g(part)g(w)n(e)h(v)l
(alidated)f(do)r(es)h(not)-152 4680 y(con)n(tain)22 b(the)e
(failure-inducing)i(elemen)n(ts,)g(so)g(w)n(e)g(will)g(send)f(a)h(mes-)
-152 4767 y(sage)35 b(to)f(tell)g(the)f(MFS)h(iden)n(tifying)f
(algorithm)i(that)e(this)h(\014xed)-152 4855 y(part)i(is)h(a)f(health)n
(y)g(part,)j(and)c(return)h(this)g(passing)h(generated)-152
4942 y(test)26 b(con\014guration)f(to)h(these)g(algorithms.)-77
5029 y(2.If)h(the)f(generated)g(test)g(con\014guration)h(failed)g(with)
f(the)g(same)-152 5116 y(fault)n(y)g(information)g(as)g(the)g(original)
h(test)e(con\014guration.)-77 5203 y(3.W)-6 b(e)38 b(cannot)f(generate)
h(an)n(ymore)f(test)h(con\014gurations)f(con-)-152 5290
y(tained)27 b(this)g(\014xed)e(part)i(and)f(di\013)g(from)i(the)e
(original)j(test)d(con\014g-)-152 5378 y(uration.)2115
-69 y(In)35 b(this)h(case,)k(w)n(e)c(didn't)g(kno)n(w)f(whic)n(h)h
(condition)g(do)r(es)h(this)2040 19 y(\014xed)c(part)g(should)h(b)r(e)f
(b)r(ecause)h(w)n(e)h(didn't)e(\014nd)f(an)n(y)h(test)h(con-)2040
106 y(\014guration)26 b(that)g(con)n(tain)g(this)g(part)g(and)g(either)
g(passed)g(or)h(failed)2040 193 y(with)i(the)g(same)h(fault)f
(information.)46 b(In)29 b(this)g(pap)r(er,)h(w)n(e)f(default)2040
280 y(set)f(this)f(\014xed)f(part)h(as)h(the)e(failure-inducing)i(.)39
b(And)26 b(return)g(an)n(y)2040 367 y(test)g(con\014guration)f
(generated.)2115 454 y(In)e(fact,)i(to)f(b)r(e)g(e\016ciency)-6
b(,)24 b(w)n(e)h(set)f(the)f(rep)r(eat)h(times)h(as)g(a)f(\014xed)2040
542 y(n)n(um)n(b)r(er,)h(sa)n(y)g(3)h(to)g(b)r(e)f(end)g(as)h(so)r(on)g
(as)h(p)r(ossible.)2115 629 y(Rev)n(ersely)-6 b(,)24
b(the)g(only)g(condition)g(that)g(w)n(e)h(did)f(not)h(stop)f(is)h(that)
2040 716 y(w)n(e)37 b(encoun)n(ter)f(a)g(di\013eren)n(t)g(fault)h
(information)g(as)g(the)f(original)2040 803 y(test)c(con\014guration,)i
(for)e(in)g(that)g(case)g(w)n(e)h(did)e(not)h(has)g(enough)2040
890 y(information)21 b(whether)e(this)h(\014xed)e(part)h(is)h(a)g
(failure-inducing)g(part)2040 977 y(or)29 b(not)f(as)h(the)e
(di\013eren)n(t)h(fault)h(information)g(ma)n(y)f(b)r(e)g(a)g(masking)
2040 1065 y(e\013ect.)2040 1239 y Fp(5.2)99 b(r)n(egenerate)2115
1347 y Fo(The)39 b(regenerate)h(step)f(is)h(to)f(regenerate)h(test)g
(con\014guration)2040 1434 y(that)28 b(con)n(tain)h(the)f(\014xed)g
(part)g(and)h(do)r(es)g(not)f(con)n(tain)h(an)n(y)f(same)2040
1521 y(elemen)n(ts)h(in)f(the)g(remained)g(part.)43 b(The)28
b(reason)h(is)g(that)f(if)h(so)g(w)n(e)2040 1608 y(can't)19
b(not)h(mak)n(e)f(sure)g(the)g(\014xed)f(part)h(or)h(the)f(con)n
(tained)g(remained)2040 1696 y(part)25 b(is)i(the)e(failure-inducing)g
(part.)2115 1783 y(F)-6 b(urther)26 b(more,)k(as)e(w)n(e)g(ha)n(ving)f
(set)h(a)g(\014xed)f(n)n(um)n(b)r(er,)g(w)n(e)i(can't)2040
1870 y(running)e(all)i(the)e(p)r(ossible)i(test)f(con\014guration,)h
(so)f(if)h(w)n(e)f(did)g(not)2040 1957 y(encoun)n(ter)i(the)g(passed)h
(or)g(the)g(same)g(fault,)i(w)n(e)e(will)h(tak)n(e)f(some)2040
2044 y(more)24 b(test)g(con\014guration)g(instead)g(all)g(of)h(them)e
(to)h(test.)34 b(As)23 b(simi-)2040 2131 y(lar)i(test)g
(con\014guration)g(will)h(trigger)g(the)e(same)h(fault,)h(so)f(w)n(e)h
(v)l(ary)2040 2219 y(them)18 b(as)g(di\013eren)n(t)g(as)g(p)r(ossible)h
(to)g(a)n(v)n(oid)e(the)h(follo)n(wing)i(condition:)2115
2306 y(all)29 b(the)e(regenerated)h(test)g(con\014guration)g(trigger)h
(a)f(fault)g(that)2040 2393 y(ha)n(v)n(e)j(a)h(higher)g(lev)n(el)f
(that)h(the)f(original)i(one.)52 b(The)32 b(metho)r(d)f(w)n(e)2040
2480 y(generate)41 b(the)g(test)f(con\014guration)h(it)g(using)f
(random)h(metho)r(d.)2040 2567 y(that)25 b(is,)i(using)e(random)h(n)n
(um)n(b)r(er)e(to)i(tak)n(e)f(these)g(un\014xed)f(part.)2115
2654 y(W)-6 b(e)17 b(generate)g(as)h(di\013eren)n(t)e(as)i(p)r(ossible)
g(test)f(cases)h(for)g(the)f(tuple,)2040 2742 y(to)25
b(a)n(v)n(oid)g(some)g(more)h(MFSs)f(that)f(ma)n(y)h(mask)g(this)g
(tuple.)33 b(T)-6 b(o)26 b(do)2040 2829 y(this)33 b(w)n(e)h(main)n
(tain)g(a)g(hash)f(table)g(to)h(record)g(the)f(tuple)f(and)h(its)2040
2916 y(corresp)r(onding)23 b(test)h(cases)g(generated,)g(eac)n(h)f
(time)g(w)n(e)h(generate)f(a)2040 3003 y(random)i(test)g(case)h(for)g
(this)g(tuple,)f(w)n(e)g(will)i(lo)r(okup)e(this)g(table)g(to)2040
3090 y(\014nd)e(if)i(this)f(test)g(case)h(is)g(already)f(generated,)h
(th)n(us)f(w)n(e)g(will)i(a)n(v)n(oid)2040 3178 y(generating)g
(redundancy)e(test)h(cases.)2115 3265 y(w)n(e)40 b(will)h(giv)n(e)f
(simple)h(example)f(next)f(to)h(illustrate)g(our)g(ap-)2040
3352 y(proac)n(h.)34 b(T)-6 b(ak)n(e)26 b(the)f(\014c)g(as)h(a)g
(example.)2040 3526 y Fp(5.3)99 b(simple)25 b(example)2115
3634 y Fo(Assume)d(w)n(e)i(ha)n(v)n(e)e(test)g(a)i(system)e(with)h
(four)g(parameters,)i(eac)n(h)2040 3721 y(has)k(three)f(options.)43
b(And)28 b(w)n(e)h(tak)n(e)f(the)g(test)g(con\014guration)h(\(0)f(0)
2040 3808 y(0)35 b(0\))f(w)n(e)h(\014nd)e(the)h(system)h(encouter)f(a)h
(failure)g(called)g(")-9 b(Err)35 b(1")-9 b(.)2040 3896
y(Next)26 b(w)n(e)h(will)i(tak)n(e)d(the)h(MFS)g(iden)n(tifying)f
(algorithms)j({)e(OF)n(OT)2040 3983 y(to)f(iden)n(tify)f(the)g(MFS)h
(for)g(the)f(")-9 b(Err)26 b(1")-9 b(.)2115 4070 y(The)22
b(pro)r(cess)g(is)h(listed)f(in)f(table)h(12.)34 b(In)21
b(this)h(table,)h(w)n(e)f(can)g(\014nd)2040 4157 y(the)27
b(algorithm)h(m)n(utan)n(t)e(one)h(factor)i(to)e(tak)n(e)g(the)g
(di\013eren)n(t)f(v)l(alue)2040 4244 y(from)36 b(the)f(original)h(test)
f(con\014guration)g(on)g(time.)64 b(Normally)35 b(if)2040
4332 y(the)22 b(test)f(con\014guration)h(encoun)n(ter)f(the)h
(di\013eren)n(t)f(condition)g(with)2040 4419 y(the)h(Err)h(1,)h(OF)n
(OT)e(see)h(the)f(MFS)g(w)n(as)i(brok)n(en,)e(in)h(another)f(w)n(ord,)
2040 4506 y(if)37 b(w)n(e)f(c)n(hange)g(one)g(factor)h(and)e(it)i(do)r
(es)f(not)g(trigger)g(the)g(same)2040 4593 y(fault,)24
b(w)n(e)f(will)g(lab)r(el)g(them)f(as)h(one)f(failure-inducing)h
(factor,)h(after)2040 4680 y(w)n(e)f(c)n(hanged)e(all)i(the)f(elemen)n
(ts,)h(w)n(e)g(will)h(get)e(the)g(failure-inducing)2040
4767 y(sc)n(hemas.)34 b(F)-6 b(or)21 b(this)g(case,)i(as)f(when)f(w)n
(e)h(c)n(hange)f(the)f(second)i(factor)2040 4855 y(,)i(third)f(factor)h
(and)e(the)h(fouth)g(factor,)i(it)e(do)r(esn't)g(trigger)i(the)d(Err)
2040 4942 y(1)28 b(\()g(for)g(second)g(factor,)h(it)f(trigger)g(Err)g
(2)g(and)g(for)g(the)f(third)g(and)2040 5029 y(fourth,)f(it)g
(passed\).)36 b(So)26 b(\014nally)g(w)n(e)g(can)g(get)g(the)g(MFS)g(|)g
(\()f(-)h(0)g(0)2040 5116 y(0\).)2115 5203 y(Next,)20
b(w)n(e)g(will)h(c)n(hec)n(k)e(ho)n(w)h(the)f(ofot)i(w)n(orks)f(with)g
(the)f(assistance)2040 5290 y(of)29 b(our)f(approac)n(h.)43
b(The)28 b(pro)r(cess)h(is)g(listed)g(in)f(table)g(13.)44
b(W)-6 b(e)28 b(can)2040 5378 y(so)r(on)23 b(\014nd)e(that)h(the)g(pro)
r(cess)i(is)f(v)n(ery)e(similar)j(to)f(the)f(original)i(ofot)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop -143 -17 a Fg(T)-7 b(able)28 b(12:)39
b(Iden)n(tifying)28 b(MFS)h(using)g(traditional)h(OF)n(OT)p
-152 10 1774 5 v -154 123 5 114 v -107 89 a(original)d(test)h
(con\014guration)p 932 123 V 91 w(fault)h(info)p 1620
123 V -152 127 1774 5 v -154 241 5 114 v -107 207 a Fo(0)128
b(0)g(0)g(0)p 932 241 V 550 w(Err)26 b(1)p 1620 241 V
-152 253 1774 5 v -154 366 5 114 v -107 332 a Fg(gen)j(test)h
(con\014gurations)p 932 366 V 209 w(result)p 1620 366
V -152 371 1774 5 v -154 484 5 114 v -107 450 a Fo(1)128
b(0)g(0)g(0)p 932 484 V 550 w(Err)26 b(1)p 1620 484 V
-154 597 V -107 563 a(0)128 b(1)g(0)g(0)p 932 597 V 550
w(Err)26 b(2)p 1620 597 V -154 711 V -107 677 a(0)128
b(0)g(1)g(0)p 932 711 V 550 w(P)n(ass)p 1620 711 V -154
824 V -107 790 a(0)g(0)g(0)g(1)p 932 824 V 550 w(P)n(ass)p
1620 824 V -152 836 1776 5 v -154 950 5 114 v -107 916
a Fg(Mfs)29 b(iden)n(ti\014ed)p 1622 950 V -152 954 1776
5 v -154 1067 5 114 v -107 1033 a Fo(\()d(-)101 b(0)i(0)f(0)26
b(\))102 b(for)27 b(Err)f(1)p 1622 1067 V -152 1071 1776
5 v -152 1294 a Fg(T)-7 b(able)40 b(13:)62 b(Iden)n(tifying)40
b(MFS)h(using)g(OF)n(OT)f(with)h(our)-152 1381 y(approac)n(h)p
-152 1408 1774 5 v -154 1521 5 114 v -107 1487 a(original)27
b(test)h(con\014guration)p 932 1521 V 91 w(fault)h(info)p
1620 1521 V -152 1525 1774 5 v -154 1638 5 114 v -107
1604 a Fo(0)128 b(0)g(0)g(0)p 932 1638 V 550 w(Err)26
b(1)p 1620 1638 V -152 1651 1774 5 v -154 1764 5 114
v -107 1730 a Fg(gen)j(test)h(con\014gurations)p 932
1764 V 209 w(result)p 1620 1764 V -152 1768 1774 5 v
-154 1882 5 114 v -107 1848 a Fo(1)128 b(0)g(0)g(0)p
932 1882 V 550 w(Err)26 b(1)p 1620 1882 V -154 1995 V
-109 1943 43 4 v -106 1961 a(0)p -70 1943 30 4 v -44
1943 V -18 1943 V 8 1943 V 34 1943 V 60 1943 43 4 v 131
w(1)p 99 1943 30 4 v 125 1943 V 151 1943 V 177 1943 V
203 1943 V 229 1943 43 4 v 130 w(0)p 268 1943 30 4 v
293 1943 V 319 1943 V 344 1943 V 370 1943 V 395 1943
43 4 v 128 w(0)p 434 1943 30 4 v 932 1995 5 114 v 977
1943 117 4 v 544 w(Err)p 1090 1943 30 4 v 1116 1943 43
4 v 28 w(2)p 1620 1995 5 114 v -154 2108 V -107 2074
a(0)128 b(2)g(0)g(0)p 932 2108 V 550 w(Err)26 b(1)p 1620
2108 V -154 2222 V -107 2188 a(0)128 b(0)g(1)g(0)p 932
2222 V 550 w(P)n(ass)p 1620 2222 V -154 2335 V -107 2301
a(0)g(0)g(0)g(1)p 932 2335 V 550 w(P)n(ass)p 1620 2335
V -152 2347 1776 5 v -154 2461 5 114 v -107 2427 a Fg(Mfs)29
b(iden)n(ti\014ed)p 1622 2461 V -152 2465 1776 5 v -154
2578 5 114 v -107 2544 a Fo(\()d(-)101 b(-)h(0)h(0)25
b(\))102 b(for)27 b(Err)f(1)p 1622 2578 V -152 2582 1776
5 v -152 2808 a(algorithm,)f(except)e(that)g(when)g(w)n(e)h(c)n(hange)f
(the)g(second)g(factor)i(to)-152 2895 y(generate)i(a)g(new)g(test)g
(con\014guration,)g(w)n(e)g(\014rst)f(encoun)n(ter)g(a)h(new)-152
2982 y(fault)22 b(Err)g(2)f(whic)n(h)g(is)h(di\013eren)n(t)f(from)h
(the)f(original)i(Err)e(1,)i(accord-)-152 3069 y(ing)e(to)f(our)h
(approac)n(h,)g(w)n(e)g(will)h(eliminate)f(this)g(test)f
(con\014guration)-152 3156 y(and)28 b(regenerate)i(another)e(one,)h
(when)g(w)n(e)g(\014nd)e(regenerated)i(test)-152 3243
y(con\014guration)k(\()f(0)h(2)f(0)h(0)g(\))f(failed)i(with)e(the)g
(same)h(err)g({)g(Err)g(1)-152 3331 y(with)22 b(the)g(original)h(test)f
(con\014guration,)h(w)n(e)f(stopp)r(ed)f(the)h(regener-)-152
3418 y(ate)i(pro)r(cess)h(for)f(the)f(\014xed)g(factor)h(\(0)g(-)f(0)h
(0\),)h(and)e(\014nally)g(w)n(e)h(send)-152 3505 y(this)29
b(test)g(con\014guration)g(\(0)g(2)g(0)g(0\))g(instead)g(of)h(\(0)f(1)g
(0)g(0\))g(to)g(the)-152 3592 y(OF)n(OT)k(algorithm,)i(and)d(at)h(last)
g(ofot)g(get)g(the)f(more)h(clear)g(and)-152 3679 y(precise)26
b(MFS)g(for)g(Err)g(1)g(|)f(\(-)g(-)g(0)h(0\).)-77 3766
y(if)e(the)f(algorithm)i(w)n(an)n(t)e(to)h(get)g(the)f(result,)h(w)n(e)
g(will)h(put)e(o\013)g(the)-152 3854 y(result,)j(and)f(generate)h
(another)g(one.)-77 3941 y(Fiv)n(e)f(setup)g(as)i(follo)n(ws:)-77
4028 y(Another)e(note)g(is)h(that:)-77 4115 y(In)18 b(detail,)j(for)f
(FIC,)f(TR)-6 b(T,)19 b(OF)n(OT,)g(it)g(can)g(just)g(use)g(the)f
(original)-152 4202 y(approac)n(h,)31 b(that)d(it)i(eac)n(h)f(time)g
(test)h(one)f(tuple,)h(and)e(the)h(w)n(e)h(use)-152 4290
y(our)c(framew)n(ork)h(to)e(assign)i(this)e(task.)-77
4377 y(F)-6 b(or)34 b(CT)-6 b(A,)34 b(w)n(e)g(can)f(use)h(our)f(framew)
n(ork)i(to)f(c)n(ho)r(ose)g(a)g(set)g(of)-152 4464 y(test)f(cases)g
(for)h(it)e(to)h(iden)n(tify)f(the)g(MFS,)h(lik)n(e)g(sh)n(yk)l(ara)e
(do,)k(but)-152 4551 y(di\013eren)n(t)30 b(from)g(her)g(w)n(ork,)i(w)n
(e)e(just)h(not)e(one)i(test)f(one)g(time,)h(w)n(e)-152
4638 y(di\013)26 b(the)f(test)g(cases)i(for)f(di\013eren)n(t)f(fault.)
-77 4725 y(F)-6 b(or)21 b(SP)-6 b(,)21 b(w)n(e)g(can)g(use)g(our)g
(framew)n(ork)h(for)g(him)e(to)h(generate)h(test)-152
4813 y(cases,)27 b(it)e(will)i(test)f(m)n(ultiple)f(tuples)g(one)g
(time,)h(and)f(w)n(e)h(just)f(\014rst)-152 4900 y(for)i(one)e(fault,)i
(then)d(another.)-77 4987 y(So)36 b(our)g(comparison)i(w)n(ork)e(is)h
(just)f(compare)h(the)f(one)g(fault,)-152 5074 y(with)26
b(a)g(noise)g(for)g(the)g(m)n(ultiple)f(faults.)-152
5270 y Fp(6.)100 b(EMPIRICAL)25 b(STUDIES)-77 5378 y
Fo(T)-6 b(o)29 b(ev)l(aluate)f(our)h(approac)n(h,)g(w)n(e)g(tak)n(e)f
(t)n(w)n(o)h(op)r(en-source)f(soft-)2356 -17 y Fg(T)-7
b(able)28 b(14:)39 b(input)29 b(mo)r(del)g(of)h(HSQLDB)p
2095 10 1883 5 v 2095 25 V 2140 104 a(SQL)g(prop)r(erties\(TR)n(UE/F)
-10 b(ALSE\))p 2095 142 V 2140 222 a Fo(sql.enforce)p
2489 222 30 3 v 30 w(strict)p 2694 222 V 30 w(size,)21
b(sql.enforce)p 3234 222 V 30 w(names,sql.enforce)p 3843
222 V 30 w(refs,)2140 309 y(sql.enforce)p 2489 309 V
30 w(size,)695 b(sql.enforce)p 3703 309 V 30 w(t)n(yp)r(es,)2140
396 y(sql.enforce)p 2489 396 V 30 w(tdc)p 2626 396 V
30 w(delete,)26 b(sql.enforce)p 3248 396 V 30 w(tdc)p
3385 396 V 30 w(up)r(date)p 2040 442 2082 5 v 2201 522
a Fg(table)j(prop)r(erties)207 b(v)-5 b(alues)p 2040
560 V 2085 639 a Fo(hsqldb.default)p 2559 639 30 3 v
30 w(table)p 2755 639 V 30 w(t)n(yp)r(e)88 b(CA)n(CHED,)26
b(MEMOR)-6 b(Y)2352 753 y(hsqldb.tx)356 b(LOCKS,)25 b(MVLOCKS,)g(MV)n
(CC)2263 866 y(hsqldb.tx)p 2576 866 V 30 w(lev)n(el)266
b(read)p 3166 866 V 30 w(commited,)147 b(SERIALIZ-)3021
953 y(ABLE)2263 1066 y(hsqldb.tx)p 2576 1066 V 30 w(lev)n(el)266
b(read)p 3166 1066 V 30 w(commited,)147 b(SERIALIZ-)3021
1154 y(ABLE)p 2084 1200 1905 5 v 2129 1279 a Fg(Serv)n(er)29
b(prop)r(erties)90 b(v)-5 b(alues)p 2084 1317 V 2260
1397 a Fo(Serv)n(er)25 b(T)n(yp)r(e)220 b(SER)-9 b(VER,)49
b(WEBSER)-9 b(VER,)49 b(IN-)2888 1484 y(PR)n(OCESS)2256
1597 y(existed)26 b(form)218 b(MEM,)26 b(FILE)p 2040
1644 2061 5 v 2085 1723 a Fg(Result)j(Set)g(prop)r(erties)90
b(v)-5 b(alues)p 2040 1761 V 2248 1841 a Fo(resultSetT)n(yp)r(es)253
b(TYPE)p 3216 1841 30 3 v 30 w(F)n(OR)-9 b(W)g(ARD)p
3646 1841 V 30 w(ONL)j(Y,TYPE)p 4132 1841 V 30 w(SCR)n(OLL)p
4471 1841 V 30 w(INSENSITIVE,)2999 1928 y(TYPE)p 3216
1928 V 30 w(SCR)n(OLL)p 3555 1928 V 30 w(SENSITIVE)2135
2041 y(resultSetConcurrencys)114 b(CONCUR)p 3342 2041
V 30 w(READ)p 3598 2041 V 30 w(ONL)-6 b(Y,CONCUR)p 4210
2041 V 30 w(UPD)n(A)g(T)g(ABLE)2148 2154 y(resultSetHoldabilit)n(ys)153
b(HOLD)p 3224 2154 V 30 w(CURSORS)p 3627 2154 V 30 w(O)n(VER)p
3882 2154 V 30 w(COMMIT,)2999 2242 y(CLOSE)p 3257 2242
V 30 w(CURSORS)p 3660 2242 V 30 w(A)-6 b(T)p 3797 2242
V 30 w(COMMIT)p 2040 2288 2006 5 v 2085 2367 a Fg(option)30
b(in)f(test)g(script)90 b(v)-5 b(alues)p 2040 2405 V
2212 2485 a Fo(Statemen)n(tT)n(yp)r(e)215 b(ST)-6 b(A)g(TEMENT,)92
b(PREP)-6 b(ARED-)2944 2572 y(ST)g(A)g(TEMENT)2040 2844
y(w)n(are)37 b(as)g(our)g(sub)t(jects:)56 b(HSQLDB)35
b(and)h(Log4j.)68 b(HSQLDB)35 b(is)2040 2931 y(a)g(pure-ja)n(v)l(a)e
(data-base)i(managemen)n(t)f(soft)n(w)n(are,)k(and)c(Log4j)i(is)2040
3018 y(a)d(logger)h(to)r(ol)f(commonly)g(used)f(in)g(ja)n(v)l(a)h
(application.)55 b(Both)33 b(of)2040 3106 y(them)27 b(ha)n(v)n(e)g(a)g
(large)i(supp)r(ort)d(dev)n(elop)r(ers')i(forum.)40 b(F)-6
b(urthermore)2040 3193 y(as)31 b(our)e(approac)n(h)h(is)g(a)g(framew)n
(ork)h(that)f(can)g(b)r(ee)f(seen)h(as)h(a)f(for)2040
3280 y(the)24 b(MFS)f(iden)n(tifying)h(algorithms,)i(so)e(that)g(w)n(e)
g(a\013ord)g(them)f(\014v)n(e)2040 3367 y(algorithms:)36
b(\014c)25 b(ofot)h(trt)g(cta)f(sp.)2115 3454 y(There)h(are)g(three)f
(questions)g(w)n(e)i(w)n(an)n(t)e(to)h(\014gure)f(out)g(from)i(our)2040
3541 y(in)f(this)f(empirical)i(studies:)2115 3629 y(Q1:)34
b(do)r(es)25 b(our)g(framew)n(ork)h(reduce)e(the)g(n)n(um)n(b)r(er)g
(of)h(MFSs)g(and)2040 3716 y(the)g(degree)h(of)g(MFS?)2115
3803 y(Q2:)34 b(What)25 b(the)h(real)g(masking)g(state)g(in)f(real)h
(soft)n(w)n(ares.)2115 3890 y(Q3:)36 b(do)r(es)28 b(our)e(framew)n(ork)
i(the)e(result)h(is)g(matc)n(h)g(the)f(result)h(in)2040
3977 y(dev)n(elop)r(er's)f(forum.)2040 4136 y Fp(6.1)99
b(experiment)27 b(set)e(up)2115 4244 y Fo(W)-6 b(e)22
b(will)i(\014rst)e(mo)r(del)g(the)g(t)n(w)n(o)h(ob)t(jects)h(so)f(that)
e(w)n(e)i(can)g(use)f(the)2040 4332 y(MFS)32 b(iden)n(tifying)g
(algorithms.)56 b(T)-6 b(o)32 b(do)g(this,)i(w)n(e)f(\014rst)f(\014nd)f
(real)2040 4419 y(faults)25 b(in)f(the)g(dev)n(elop)r(er's)g(forum,)i
(and)d(then)h(read)g(the)g(sp)r(eci\014ca-)2040 4506
y(tion)32 b(of)g(the)f(soft)n(w)n(are)j(to)d(get)h(the)g(options)f(and)
h(its)g(v)l(alues)f(that)2040 4593 y(can)h(in\015uence)f(its)h(b)r(eha)
n(viour.)52 b(The)32 b(detail)g(of)g(the)g(mo)r(deling)g(is)2040
4680 y(listed)26 b(in)f(table)h(14)g(and)f(table)h(.)2115
4767 y(Second)21 b(w)n(e)h(will)i(write)e(the)g(test)g(script)g(that)f
(can)h(autonomical-)2040 4855 y(ly)27 b(execute)f(the)g(soft)n(w)n(are)
j(according)e(to)g(a)h(giv)n(en)e(test)h(con\014gura-)2040
4942 y(tion,)32 b(furthermore,)g(the)d(test)h(script)h(will)g(collect)g
(the)f(executing)2040 5029 y(result.)46 b(In)29 b(this)g(pap)r(er,)i(w)
n(e)f(just)f(care)h(t)n(w)n(o)g(kinds)f(of)h(result:)42
b(the)2040 5116 y(test)26 b(script)g(run)f(without)h(an)n(y)f
(exception)h(and)f(run)g(with)h(trigger-)2040 5203 y(ing)h(exception.)
36 b(F)-6 b(or)26 b(the)g(second)g(result)h(w)n(e)f(will)i(distinguish)
e(the)2040 5290 y(failure)h(with)e(di\013eren)n(t)g(exception)g
(information.)2115 5378 y(Third)i(w)n(e)h(will)g(tak)n(e)f(three)g
(group)g(exp)r(erimen)n(ts,)h(eac)n(h)f(for)h(the)p eop
end
%%Page: 8 8
TeXDict begin 8 7 bop 259 -17 a Fg(T)-7 b(able)28 b(15:)39
b(Masking)28 b(e\013ect)h(state)p -152 10 2192 5 v -154
97 5 88 v -107 71 a Fo(all)e(pair)p 175 97 V 90 w(co)r(existed)e(&)h
(no)r(exised)p 968 97 V 89 w(mask)g(o)n(v)n(er)f(6)h(mfs)p
1602 97 V 90 w(o)n(v)n(er)g(5)g(mfs)p 2038 97 V -152
101 2192 5 v -154 188 5 88 v -26 162 a(10)p 175 188 V
430 w(5)g(&)f(5)p 968 188 V 601 w(3)p 1602 188 V 497
w(2)p 2038 188 V -152 192 2192 5 v -152 420 a(question)g(prop)r(osed)h
(in)f(the)g(\014rst)h(of)g(this)g(section.)-77 507 y(F)-6
b(or)31 b(the)g(\014rst)g(exp)r(erimen)n(t,)h(w)n(e)g(will)h(compare)e
(the)g(result)g(got)-152 594 y(b)n(y)g(traditional)g(MFS)h(iden)n
(tifying)f(algorithm)h(with)f(the)g(MFS)g(i-)-152 681
y(den)n(tifying)22 b(algorithms)h(using)f(our)g(framew)n(ork.)35
b(F)-6 b(or)22 b(a)g(particular)-152 769 y(algorithm,)31
b(sa)n(y)-6 b(,)29 b(OF)n(OT,)g(w)n(e)g(will)h(record)f(the)f(n)n(um)n
(b)r(er)f(of)j(MFS,)-152 856 y(the)h(degree)g(of)h(MFSs)f(and)g(the)f
(n)n(um)n(b)r(er)g(of)i(test)f(con\014gurations)-152
943 y(they)25 b(needed.)-77 1030 y(The)30 b(second)f(exp)r(erimen)n(t,)
h(w)n(e)g(will)h(collect)g(the)e(result)h(got)g(b)n(y)-152
1117 y(the)e(algorithms)h(with)f(our)f(framew)n(ork.)42
b(Then)28 b(w)n(e)g(will)h(generate)-152 1204 y(a)23
b(test)g(con\014guration)g(con)n(tain)g(t)n(w)n(o)g(MFS)g(of)g(the)f
(result,)i(and)f(exe-)-152 1292 y(cute)d(to)h(\014nd)d(if)j(one)g(MFS)f
(is)h(mask)n(ed)f(b)n(y)f(another.)32 b(In)20 b(sp)r(eci\014c,)h(w)n(e)
-152 1379 y(will)29 b(exam)e(ev)n(ery)f(p)r(ossible)i(pair)f(MFSs,)h
(the)e(only)h(constrain)n(ts)g(is)-152 1466 y(that)22
b(this)h(t)n(w)n(o)g(pair)f(MFS)h(m)n(ust)f(get)h(di\013eren)n(t)f
(fault)h(information.)-77 1553 y(F)-6 b(or)28 b(the)g(third)g(exp)r
(erimen)n(t,)h(w)n(e)f(will)i(compare)f(the)f(similarit)n(y)-152
1640 y(b)r(et)n(w)n(een)36 b(the)f(iden)n(ti\014ed)g(result)h(and)f
(the)h(result)g(rep)r(ort)g(in)f(the)-152 1727 y(dev)n(elop)r(er's)27
b(forum.)37 b(And)25 b(\014nd)g(whose)i(\(traditional)g(or)f(with)h
(our)-152 1815 y(framew)n(ork\))22 b(result)f(can)g(giv)n(e)g(more)g
(help)f(to)h(the)f(dev)n(elop)r(er)h(of)g(the)-152 1902
y(soft)n(w)n(are.)-152 2054 y Fp(6.2)99 b(e)o(v)o(aluation)25
b(metrics)-77 2162 y Fo(T)-6 b(o)26 b(ev)l(aluate)f(the)g(e\016ciency)h
(of)g(our)f(framew)n(ork,)i(w)n(e)f(will)h(com-)-152
2249 y(pare)21 b(the)g(results)g(of)h(t)n(w)n(o)g(approac)n(hes.)33
b(W)-6 b(e)21 b(will)h(coun)n(t)e(ho)n(w)i(man)n(y)-152
2336 y(MFSs)j(is)h(reduced)d(b)n(y)h(our)h(approac)n(h)f(and)g(ho)n(w)h
(the)g(degree)g(is)g(re-)-152 2424 y(duced)30 b(b)n(y)g(our)h(approac)n
(h)g(compared)g(to)h(traditional)f(one.)51 b(This)-152
2511 y(t)n(w)n(o)36 b(metric)g(will)g(indicate)f(ho)n(w)h(m)n(uc)n(h)e
(our)h(approac)n(h)g(will)i(im-)-152 2598 y(pro)n(v)n(e)22
b(the)g(usabilit)n(y)h(of)g(results.)34 b(Additional,)23
b(w)n(e)g(will)h(coun)n(t)e(ho)n(w)-152 2685 y(man)n(y)f(more)g(test)g
(con\014gurations)h(w)n(e)f(will)i(generated)e(compare)h(to)-152
2772 y(traditional)32 b(one,)h(this)e(metric)h(indicate)f(the)g(cost)h
(w)n(e)f(need)g(o)n(v)n(er)-152 2859 y(the)25 b(traditional)i(one.)-77
2947 y(Then)k(w)n(e)h(will)g(exam)f(the)g(result)h(of)g(the)e
(algorithm)j(with)e(our)-152 3034 y(framew)n(ork,)c(to)f(see)g(if)g(an)
n(y)f(masking)g(is)h(b)r(ehind)f(them.)33 b(In)25 b(detail,)-152
3121 y(w)n(e)36 b(will)h(record)f(ho)n(w)g(man)n(y)f(pair)h(MFS)g(can)f
(co)r(exist)h(in)g(a)g(test)-152 3208 y(con\014guration.)f(And)24
b(coun)n(t)h(the)g(privileges)h(of)h(eac)n(h)e(MFS.)-77
3295 y(F)-6 b(or)31 b(the)g(third,)h(the)f(similarit)n(y)h(is)f(listed)
h(as)g(follo)n(ws:)48 b(the)30 b(fol-)-152 3382 y(lo)n(w)n(ed)41
b(notation:)64 b(Assume)39 b(w)n(e)i(get)f(t)n(w)n(o)h(sc)n(hema)f
Fn(S)1498 3390 y Fk(A)1548 3382 y Fo(,)p Fn(S)1616 3390
y Fk(B)1669 3382 y Fo(,)k(the)-152 3470 y(notation)p
Fn(S)176 3478 y Fk(A)239 3414 y Fc(T)316 3470 y Fn(S)363
3478 y Fk(B)454 3470 y Fo(indicate)39 b(the)f(same)h(elemen)n(ts)g(b)r
(et)n(w)n(een)g Fn(S)1791 3478 y Fk(A)-152 3557 y Fo(and)d
Fn(S)55 3565 y Fk(B)108 3557 y Fo(.)66 b(F)-6 b(or)37
b(example)f(\()p Ft(\000)p Fo(1)h(2)24 b Ft(\000)g Fo(3\))1047
3501 y Fc(T)1111 3557 y Fo(\()p Ft(\000)p Fo(2)37 b(2)24
b Ft(\000)g Fo(3\))40 b(=)f Ft(f)p Fo(\()p Ft(\000)24
b(\000)-152 3644 y Fo(2)18 b Ft(\000)f(\000)p Fo(\))p
Fn(;)12 b Fo(\()p Ft(\000)17 b(\000)g(\000)g(\000)f Fo(3\))p
Ft(g)p Fo(.)-71 3892 y Fn(S)t(imil)q(ar)r(ity)s Fo(\()p
Fn(S)374 3900 y Fk(A)424 3892 y Fn(;)d(S)505 3900 y Fk(B)557
3892 y Fo(\))22 b(=)1060 3844 y Ft(j)p Fn(S)1128 3852
y Fk(A)1192 3788 y Fc(T)1268 3844 y Fn(S)1315 3852 y
Fk(B)1368 3844 y Ft(j)p 700 3875 1051 4 v 700 3943 a
Fo(max\()p Fn(D)r(eg)s(r)r(ee)p Fo(\()p Fn(S)1200 3951
y Fk(A)1248 3943 y Fo(\))p Fn(;)13 b(D)r(eg)s(r)r(ee)p
Fo(\()p Fn(S)1639 3951 y Fk(B)1690 3943 y Fo(\)\))-152
4028 y(.)-77 4115 y(In)37 b(this)h(form)n(ula,)k(the)37
b(n)n(umerator)h(indicate)g(the)f(n)n(um)n(b)r(er)g(of)-152
4202 y(same)25 b(elemen)n(ts)g(in)f Fn(S)487 4210 y Fk(A)561
4202 y Fo(and)g Fn(S)756 4210 y Fk(B)809 4202 y Fo(.)34
b(It)24 b(is)g(ob)n(viously)-6 b(,)24 b(the)g(bigger)h(the)-152
4290 y(v)l(alue)c(is)g(the)g(more)g(similar)i(t)n(w)n(o)e(sc)n(hemas)g
(are.)34 b(The)21 b(denominator)-152 4377 y(giv)n(e)h(us)f(this)g
(information:)34 b(if)22 b(the)e(the)h(n)n(um)n(b)r(er)f(of)j(same)f
(elemen)n(ts)-152 4464 y(is)i(\014xed,)f(the)g(bigger)h(the)f(degree)h
(of)g(the)f(sc)n(hema,)h(the)f(more)h(noise)-152 4551
y(w)n(e)c(will)g(encoun)n(ter)e(to)i(\014nd)d(the)i(fault)g(source.)33
b(In)18 b(a)i(w)n(ord,)h(the)d(big-)-152 4638 y(ger)26
b(the)g(form)n(ula)g(can)g(get)g(the)f(b)r(etter)g(the)g(similarit)n(y)
i(is)f(b)r(et)n(w)n(een)-152 4726 y(the)f(t)n(w)n(o)h(sc)n(hema.)-152
4878 y Fp(6.3)99 b(r)n(esult)26 b(and)g(analysis)-77
4986 y Fo(F)-6 b(or)26 b(the)f(second)g(exp)r(erimen)n(t.)-152
5182 y Fp(7.)100 b(RELA)-9 b(TED)26 b(W)o(ORKS)-77 5290
y Fo(com)n(binatorial)j(testing)f(has)g(ma)n(y)f(factors,)j(Nie)d(giv)n
(e)h(a)g(surv)n(ey)-6 b(,)-152 5378 y(at)26 b(some)g(are)g(fo)r(cus,.)
2115 -69 y(Iden)n(tify)e(MFS)i(are)2115 19 y(then)18
b(consider)h(the)f(masking)h(e\013ect)f(is)h(,)i(to)e(m)n(y)f(b)r(est)g
(kno)n(wledge,)2040 106 y(only)25 b(one)h(pap)r(er,)g(unfortunately)-6
b(,)24 b(it)i(just)g(consider)f(the)h(.)2115 193 y(Ylimaz)j(prop)r(ose)
g(a)g(w)n(ork)g(that)f(is)h(feedbac)n(k)f(driv)n(en)g(com)n(bina-)2040
280 y(torial)36 b(testing,)i(di\013eren)n(t)c(from)h(our)g(w)n(ork,)i
(it)e(\014rst)g(using)g(CT)-6 b(A)2040 367 y(classify)32
b(the)d(p)r(ossible)i(MFS)f(and)g(then)f(elimate)i(them)e(and)h(gen-)
2040 454 y(erate)j(new)g(test)f(cases)h(to)g(detect)f(p)r(ossible)h
(mask)n(ed)f(in)n(teraction)2040 542 y(in)27 b(the)g(next)f(iteration.)
39 b(The)28 b(di\013erence)f(is)g(that)g(the)g(main)g(fo)r(cus)2040
629 y(of)f(that)e(w)n(ork)i(is)f(to)g(generate)h(test)f(cases)h(that)e
(didn't)h(omit)g(some)2040 716 y(sc)n(hemas)33 b(that)e(ma)n(y)h(b)r(e)
g(mask)n(ed)g(b)n(y)f(other)h(sc)n(hemas.)55 b(And)31
b(our)2040 803 y(w)n(ork)23 b(is)g(main)g(fo)r(cus)g(on)g(iden)n
(tifying)f(the)h(MFS)f(and)g(a)n(v)n(oiding)h(the)2040
890 y(masking)j(e\013ect.)2040 1089 y Fp(8.)99 b(CONCLUSIONS)2115
1197 y Fo(This)19 b(paragraph)h(will)g(end)e(the)h(b)r(o)r(dy)f(of)i
(this)f(sample)h(do)r(cumen-)2040 1285 y(t.)33 b(Remem)n(b)r(er)21
b(that)h(y)n(ou)f(migh)n(t)g(still)i(ha)n(v)n(e)e(Ac)n(kno)n(wledgmen)n
(ts)g(or)2040 1372 y(App)r(endices;)26 b(brief)h(samples)g(of)g(these)f
(follo)n(w.)38 b(There)27 b(is)g(still)g(the)2040 1459
y(Bibliograph)n(y)34 b(to)g(deal)g(with;)k(and)c(w)n(e)g(will)h(mak)n
(e)e(a)h(disclaimer)2040 1546 y(ab)r(out)27 b(that)g(here:)38
b(with)27 b(the)g(exception)g(of)h(the)f(reference)h(to)f(the)2040
1633 y(L)2060 1617 y Ff(A)2093 1633 y Fo(T)2135 1649
y(E)2179 1633 y(X)c(b)r(o)r(ok,)h(the)g(citations)g(in)g(this)f(pap)r
(er)h(are)g(to)g(articles)h(whic)n(h)2040 1720 y(ha)n(v)n(e)e(nothing)f
(to)h(do)g(with)h(the)e(presen)n(t)h(sub)t(ject)g(and)g(are)g(used)g
(as)2040 1808 y(examples)j(only)-6 b(.)2040 2007 y Fp(9.)99
b(A)-5 b(CKNO)g(WLEDGMENTS)2115 2115 y Fo(This)20 b(section)f(is)h
(optional;)i(it)e(is)g(a)f(lo)r(cation)i(for)f(y)n(ou)e(to)i(ac)n(kno)n
(wl-)2040 2202 y(edge)25 b(gran)n(ts,)h(funding,)e(editing)h
(assistance)h(and)f(what)g(ha)n(v)n(e)f(y)n(ou.)2040
2289 y(In)k(the)g(presen)n(t)g(case,)j(for)e(example,)h(the)e(authors)h
(w)n(ould)g(lik)n(e)f(to)2040 2376 y(thank)d(Gerald)i(Murra)n(y)e(of)i
(A)n(CM)f(for)h(his)f(help)g(in)g(co)r(difying)h(this)2040
2464 y Fm(A)n(uthor's)g(Guide)i Fo(and)23 b(the)g Fg(.cls)f
Fo(and)h Fg(.tex)g Fo(\014les)g(that)g(it)h(describ)r(es.)2040
2663 y Fp(10.)99 b(ADDITION)n(AL)25 b(A)-5 b(UTHORS)2115
2771 y Fo(Additional)33 b(authors:)51 b(John)34 b(Smith)f(\(The)h
(Th\034rv)3662 2774 y(\177)3662 2771 y(ald)g(Group,)2040
2858 y(email:)55 b Fj(jsmith@affiliation.org)p Fo(\))39
b(and)c(Julius)h(P)-6 b(.)35 b(Kumquat)2040 2945 y(\(The)17
b(Kumquat)f(Consortium,)j(email:)31 b Fj(jpkumquat@consortium.net)p
Fo(\).)2040 3144 y Fp(11.)99 b(REFERENCES)2040 3290 y(APPENDIX)2040
3439 y(A.)h(HEADINGS)24 b(IN)g(APPENDICES)2115 3547 y
Fo(The)g(rules)g(ab)r(out)f(hierarc)n(hical)i(headings)f(discussed)f
(ab)r(o)n(v)n(e)h(for)2040 3634 y(the)31 b(b)r(o)r(dy)g(of)h(the)f
(article)h(are)g(di\013eren)n(t)f(in)g(the)g(app)r(endices.)51
b(In)2040 3721 y(the)28 b Fg(app)r(endix)f Fo(en)n(vironmen)n(t,)h(the)
g(command)g Fg(section)f Fo(is)i(used)2040 3808 y(to)2040
3962 y Fp(A.1)99 b(Refer)n(ences)2115 4070 y Fo(Generated)24
b(b)n(y)f(bibtex)g(from)i(y)n(our)48 b(.bib)24 b(\014le.)34
b(Run)23 b(latex,)h(then)2040 4157 y(bibtex,)g(then)f(latex)h(t)n(wice)
h(\(to)f(resolv)n(e)h(references\))g(to)f(create)h(the)2040
4244 y(.bbl)31 b(\014le.)51 b(Insert)30 b(that)62 b(.bbl)30
b(\014le)h(in)n(to)g(the)g(.tex)g(source)g(\014le)g(and)2040
4332 y(commen)n(t)25 b(out)h(the)f(command)g Fj(\\thebibliography)p
Fo(.)2040 4531 y Fp(B.)100 b(MORE)25 b(HELP)g(FOR)f(THE)i(HARD)l(Y)2115
4639 y Fo(The)c(sig-alternate.cls)j(\014le)d(itself)i(is)f(c)n(ho)r(c)n
(k-full)f(of)h(succinct)f(and)2040 4726 y(helpful)37
b(commen)n(ts.)70 b(If)37 b(y)n(ou)g(consider)g(y)n(ourself)h(a)f(mo)r
(derately)2040 4813 y(exp)r(erienced)29 b(to)h(exp)r(ert)f(user)g(of)i
(L)3081 4796 y Ff(A)3114 4813 y Fo(T)3156 4829 y(E)3199
4813 y(X,)g(y)n(ou)e(ma)n(y)g(\014nd)f(reading)2040 4900
y(it)e(useful)g(but)e(please)j(remem)n(b)r(er)e(not)g(to)h(c)n(hange)g
(it.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
